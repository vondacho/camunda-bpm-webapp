{"persistifyArgs":{"cache":{"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/processDefinition.js":{"source":"'use strict';\n\nmodule.exports = ['$resource', 'Uri', function($resource, Uri) {\n  return $resource(Uri.appUri('plugin://base/:engine/process-definition/:id/:action'), { id: '@id' }, {\n    getCalledProcessDefinitions: { method: 'POST', isArray: true, params: {action: 'called-process-definitions'}}\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/processInstance.js":{"source":"  'use strict';\n\n  module.exports = [\n    '$resource',\n    'Uri',\n    function($resource, Uri) {\n\n      return $resource(Uri.appUri('plugin://base/:engine/process-instance/:id/:action'), {id: '@id'}, {\n        query: {\n          method: 'POST',\n          isArray: true\n        },\n\n        delete: {\n          url: Uri.appUri('engine://engine/:engine/process-instance/:id'),\n          method: 'DELETE'\n        },\n\n        count: {\n          method: 'POST',\n          isArray: false,\n          params: { id: 'count' }\n        },\n\n        processInstances: {\n          method: 'POST',\n          isArray: true,\n          params: {\n            action: 'called-process-instances'\n          }\n        },\n\n      // deprecated\n        getCalledProcessInstances: {\n          method: 'POST',\n          isArray: true,\n          params: {\n            action: 'called-process-instances'\n          }\n        }\n      });\n    }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    processDefinition = require('./processDefinition'),\n    processInstance = require('./processInstance');\n\nvar ngModule = angular.module('cockpit.plugin.base.resources', []);\n\nngModule.factory('PluginProcessDefinitionResource', processDefinition);\nngModule.factory('PluginProcessInstanceResource', processInstance);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC9yZXNvdXJjZXMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG4gICAgcHJvY2Vzc0RlZmluaXRpb24gPSByZXF1aXJlKCcuL3Byb2Nlc3NEZWZpbml0aW9uJyksXG4gICAgcHJvY2Vzc0luc3RhbmNlID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2UnKTtcblxudmFyIG5nTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2NvY2twaXQucGx1Z2luLmJhc2UucmVzb3VyY2VzJywgW10pO1xuXG5uZ01vZHVsZS5mYWN0b3J5KCdQbHVnaW5Qcm9jZXNzRGVmaW5pdGlvblJlc291cmNlJywgcHJvY2Vzc0RlZmluaXRpb24pO1xubmdNb2R1bGUuZmFjdG9yeSgnUGx1Z2luUHJvY2Vzc0luc3RhbmNlUmVzb3VyY2UnLCBwcm9jZXNzSW5zdGFuY2UpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5nTW9kdWxlO1xuIl19","deps":{"./processDefinition":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/processDefinition.js","./processInstance":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/processInstance.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/deployments.js":{"source":"'use strict';\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.navigation', {\n    id: 'deployments',\n    label: 'Deployments',\n    pagePath: '#/repository',\n    template: '<!-- nothing to show, but needed -->',\n    controller: function() {},\n\n    priority: -5\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/reports.js":{"source":"'use strict';\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.navigation', {\n    id: 'reports',\n    label: 'Reports',\n    pagePath: '#/reports',\n    template: '<!-- nothing to show, but needed -->',\n    controller: function() {},\n    access: [\n      'Views',\n      function(\n      Views\n    ) {\n        return function(cb) {\n          var reportPlugins = Views.getProviders({\n            component: 'cockpit.report'\n          });\n          cb(null, !!reportPlugins.length);\n        };\n      }],\n\n    priority: -4\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/batches.js":{"source":"'use strict';\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.navigation', {\n    id: 'batch',\n    label: 'Batches',\n    pagePath: '#/batch',\n    template: '<!-- nothing to show, but needed -->',\n    controller: function() {},\n    checkActive: function(path) {\n      var ending = '#/batch';\n      var parts = (path || '').split('?');\n      return parts.length && (parts[0].slice(0 - ending.length) === ending);\n    },\n    priority: -5\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/processes.js":{"source":"'use strict';\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.navigation', {\n    id: 'proceses',\n    label: 'Processes',\n    pagePath: '#/processes',\n    checkActive: function(path) {\n    // matches \"#/process/\", \"#/processes\" or \"#/migration\"\n      return path.indexOf('#/process') > -1 || path.indexOf('#/migration') > -1;\n    },\n    template: '<!-- nothing to show, but needed -->',\n    controller: function() {},\n\n    priority: 100\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/decisions.js":{"source":"'use strict';\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.navigation', {\n    id: 'decisions',\n    label: 'Decisions',\n    pagePath: '#/decisions',\n    checkActive: function(path) {\n      return path.indexOf('#/decision') > -1;\n    },\n    template: '<!-- nothing to show, but needed -->',\n    controller: function() {},\n    priority: 30\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/tasks.js":{"source":"'use strict';\nmodule.exports = [\n  'ViewsProvider',\n  function(\n    ViewsProvider\n  ) {\n    ViewsProvider.registerDefaultView('cockpit.navigation', {\n      id: 'tasks',\n      label: 'Human Tasks',\n      template: '<!-- nothing to show, but needed -->',\n      pagePath: '#/tasks',\n      checkActive: function(path) {\n        return path.indexOf('#/tasks') > -1;\n      },\n      controller: function() {},\n\n      priority: 20\n    });\n  }];","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/updateSuspensionStateDialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = [\n  '$scope', '$http', '$filter', 'Uri', 'Notifications', '$modalInstance', 'processDefinition',\n  function($scope,   $http,   $filter,   Uri,   Notifications,   $modalInstance,   processDefinition) {\n\n    var BEFORE_UPDATE = 'BEFORE_UPDATE',\n        PERFORM_UPDATE = 'PERFORM_UDPATE',\n        UPDATE_SUCCESS = 'SUCCESS',\n        UPDATE_FAILED = 'FAIL';\n\n    var dateFilter = $filter('date'),\n        dateFormat = 'yyyy-MM-dd\\'T\\'HH:mm:ss';\n\n\n    $scope.processDefinition = processDefinition;\n\n    $scope.status = BEFORE_UPDATE;\n\n    $scope.data = {\n      includeInstances : true,\n      executeImmediately : true,\n      executionDate : dateFilter(Date.now(), dateFormat)\n    };\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.close($scope.status);\n    });\n\n    $scope.updateSuspensionState = function() {\n      $scope.status = PERFORM_UPDATE;\n\n      var data = {};\n\n      data.suspended = !processDefinition.suspended;\n      data.includeProcessInstances = $scope.data.includeInstances;\n      data.executionDate = !$scope.data.executeImmediately ? $scope.data.executionDate : null;\n\n      $http\n      .put(Uri.appUri('engine://engine/:engine/process-definition/' + processDefinition.id + '/suspended/'), data)\n      .success(function() {\n        $scope.status = UPDATE_SUCCESS;\n\n        if ($scope.data.executeImmediately) {\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'Updated the suspension state of the process definition.',\n            exclusive: true\n          });\n        } else {\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'The update of the suspension state of the process definition has been scheduled.',\n            exclusive: true\n          });\n        }\n\n      }).error(function(response) {\n        $scope.status = UPDATE_FAILED;\n\n        if ($scope.data.executeImmediately) {\n          Notifications.addError({\n            status: 'Finished',\n            message: 'Could not update the suspension state of the process definition: ' + response.message,\n            exclusive: true\n          });\n        } else {\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'The update of the suspension state of the process definition could not be scheduled: ' + response.message,\n            exclusive: true\n          });\n        }\n      });\n    };\n\n    $scope.isValid = function() {\n      var formScope = angular.element('[name=\"updateSuspensionStateForm\"]').scope();\n      return (formScope && formScope.updateSuspensionStateForm) ? formScope.updateSuspensionStateForm.$valid : false;\n    };\n\n    $scope.close = function(status) {\n      var response = {};\n\n      response.status = status;\n      response.suspended = !processDefinition.suspended;\n      response.executeImmediately = $scope.data.executeImmediately;\n      response.executionDate = $scope.data.executionDate;\n\n      $modalInstance.close(response);\n    };\n\n  }];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi91cGRhdGVTdXNwZW5zaW9uU3RhdGVEaWFsb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gICckc2NvcGUnLCAnJGh0dHAnLCAnJGZpbHRlcicsICdVcmknLCAnTm90aWZpY2F0aW9ucycsICckbW9kYWxJbnN0YW5jZScsICdwcm9jZXNzRGVmaW5pdGlvbicsXG4gIGZ1bmN0aW9uKCRzY29wZSwgICAkaHR0cCwgICAkZmlsdGVyLCAgIFVyaSwgICBOb3RpZmljYXRpb25zLCAgICRtb2RhbEluc3RhbmNlLCAgIHByb2Nlc3NEZWZpbml0aW9uKSB7XG5cbiAgICB2YXIgQkVGT1JFX1VQREFURSA9ICdCRUZPUkVfVVBEQVRFJyxcbiAgICAgICAgUEVSRk9STV9VUERBVEUgPSAnUEVSRk9STV9VRFBBVEUnLFxuICAgICAgICBVUERBVEVfU1VDQ0VTUyA9ICdTVUNDRVNTJyxcbiAgICAgICAgVVBEQVRFX0ZBSUxFRCA9ICdGQUlMJztcblxuICAgIHZhciBkYXRlRmlsdGVyID0gJGZpbHRlcignZGF0ZScpLFxuICAgICAgICBkYXRlRm9ybWF0ID0gJ3l5eXktTU0tZGRcXCdUXFwnSEg6bW06c3MnO1xuXG5cbiAgICAkc2NvcGUucHJvY2Vzc0RlZmluaXRpb24gPSBwcm9jZXNzRGVmaW5pdGlvbjtcblxuICAgICRzY29wZS5zdGF0dXMgPSBCRUZPUkVfVVBEQVRFO1xuXG4gICAgJHNjb3BlLmRhdGEgPSB7XG4gICAgICBpbmNsdWRlSW5zdGFuY2VzIDogdHJ1ZSxcbiAgICAgIGV4ZWN1dGVJbW1lZGlhdGVseSA6IHRydWUsXG4gICAgICBleGVjdXRpb25EYXRlIDogZGF0ZUZpbHRlcihEYXRlLm5vdygpLCBkYXRlRm9ybWF0KVxuICAgIH07XG5cbiAgICAkc2NvcGUuJG9uKCckcm91dGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCkge1xuICAgICAgJG1vZGFsSW5zdGFuY2UuY2xvc2UoJHNjb3BlLnN0YXR1cyk7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUudXBkYXRlU3VzcGVuc2lvblN0YXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAkc2NvcGUuc3RhdHVzID0gUEVSRk9STV9VUERBVEU7XG5cbiAgICAgIHZhciBkYXRhID0ge307XG5cbiAgICAgIGRhdGEuc3VzcGVuZGVkID0gIXByb2Nlc3NEZWZpbml0aW9uLnN1c3BlbmRlZDtcbiAgICAgIGRhdGEuaW5jbHVkZVByb2Nlc3NJbnN0YW5jZXMgPSAkc2NvcGUuZGF0YS5pbmNsdWRlSW5zdGFuY2VzO1xuICAgICAgZGF0YS5leGVjdXRpb25EYXRlID0gISRzY29wZS5kYXRhLmV4ZWN1dGVJbW1lZGlhdGVseSA/ICRzY29wZS5kYXRhLmV4ZWN1dGlvbkRhdGUgOiBudWxsO1xuXG4gICAgICAkaHR0cFxuICAgICAgLnB1dChVcmkuYXBwVXJpKCdlbmdpbmU6Ly9lbmdpbmUvOmVuZ2luZS9wcm9jZXNzLWRlZmluaXRpb24vJyArIHByb2Nlc3NEZWZpbml0aW9uLmlkICsgJy9zdXNwZW5kZWQvJyksIGRhdGEpXG4gICAgICAuc3VjY2VzcyhmdW5jdGlvbigpIHtcbiAgICAgICAgJHNjb3BlLnN0YXR1cyA9IFVQREFURV9TVUNDRVNTO1xuXG4gICAgICAgIGlmICgkc2NvcGUuZGF0YS5leGVjdXRlSW1tZWRpYXRlbHkpIHtcbiAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgc3RhdHVzOiAnRmluaXNoZWQnLFxuICAgICAgICAgICAgbWVzc2FnZTogJ1VwZGF0ZWQgdGhlIHN1c3BlbnNpb24gc3RhdGUgb2YgdGhlIHByb2Nlc3MgZGVmaW5pdGlvbi4nLFxuICAgICAgICAgICAgZXhjbHVzaXZlOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgTm90aWZpY2F0aW9ucy5hZGRNZXNzYWdlKHtcbiAgICAgICAgICAgIHN0YXR1czogJ0ZpbmlzaGVkJyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGUgdXBkYXRlIG9mIHRoZSBzdXNwZW5zaW9uIHN0YXRlIG9mIHRoZSBwcm9jZXNzIGRlZmluaXRpb24gaGFzIGJlZW4gc2NoZWR1bGVkLicsXG4gICAgICAgICAgICBleGNsdXNpdmU6IHRydWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICB9KS5lcnJvcihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAkc2NvcGUuc3RhdHVzID0gVVBEQVRFX0ZBSUxFRDtcblxuICAgICAgICBpZiAoJHNjb3BlLmRhdGEuZXhlY3V0ZUltbWVkaWF0ZWx5KSB7XG4gICAgICAgICAgTm90aWZpY2F0aW9ucy5hZGRFcnJvcih7XG4gICAgICAgICAgICBzdGF0dXM6ICdGaW5pc2hlZCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnQ291bGQgbm90IHVwZGF0ZSB0aGUgc3VzcGVuc2lvbiBzdGF0ZSBvZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uOiAnICsgcmVzcG9uc2UubWVzc2FnZSxcbiAgICAgICAgICAgIGV4Y2x1c2l2ZTogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIE5vdGlmaWNhdGlvbnMuYWRkTWVzc2FnZSh7XG4gICAgICAgICAgICBzdGF0dXM6ICdGaW5pc2hlZCcsXG4gICAgICAgICAgICBtZXNzYWdlOiAnVGhlIHVwZGF0ZSBvZiB0aGUgc3VzcGVuc2lvbiBzdGF0ZSBvZiB0aGUgcHJvY2VzcyBkZWZpbml0aW9uIGNvdWxkIG5vdCBiZSBzY2hlZHVsZWQ6ICcgKyByZXNwb25zZS5tZXNzYWdlLFxuICAgICAgICAgICAgZXhjbHVzaXZlOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuaXNWYWxpZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGZvcm1TY29wZSA9IGFuZ3VsYXIuZWxlbWVudCgnW25hbWU9XCJ1cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtXCJdJykuc2NvcGUoKTtcbiAgICAgIHJldHVybiAoZm9ybVNjb3BlICYmIGZvcm1TY29wZS51cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtKSA/IGZvcm1TY29wZS51cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtLiR2YWxpZCA6IGZhbHNlO1xuICAgIH07XG5cbiAgICAkc2NvcGUuY2xvc2UgPSBmdW5jdGlvbihzdGF0dXMpIHtcbiAgICAgIHZhciByZXNwb25zZSA9IHt9O1xuXG4gICAgICByZXNwb25zZS5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICByZXNwb25zZS5zdXNwZW5kZWQgPSAhcHJvY2Vzc0RlZmluaXRpb24uc3VzcGVuZGVkO1xuICAgICAgcmVzcG9uc2UuZXhlY3V0ZUltbWVkaWF0ZWx5ID0gJHNjb3BlLmRhdGEuZXhlY3V0ZUltbWVkaWF0ZWx5O1xuICAgICAgcmVzcG9uc2UuZXhlY3V0aW9uRGF0ZSA9ICRzY29wZS5kYXRhLmV4ZWN1dGlvbkRhdGU7XG5cbiAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKHJlc3BvbnNlKTtcbiAgICB9O1xuXG4gIH1dO1xuIl19","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryBulkDialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = [\n  '$scope', '$q', 'Notifications', 'JobResource', '$modalInstance', 'processData', 'processInstance',\n  function($scope,   $q,   Notifications,   JobResource,   $modalInstance,   processData,   processInstance) {\n\n    var jobRetriesData = processData.newChild($scope);\n\n    var jobPages = $scope.jobPages = { size: 5, total: 0 };\n    var summarizePages = $scope.summarizePages = { size: 5, total: 0 };\n\n    var jobIdToFailedJobMap = {};\n    var selectedFailedJobIds = $scope.selectedFailedJobIds = [];\n\n    var finishedWithFailures = false;\n\n    $scope.allJobsSelected = false;\n\n    var FINISHED = 'finished',\n        PERFORM = 'performing',\n        SUCCESS = 'successful',\n        FAILED = 'failed';\n\n    var executionIdToInstanceMap = jobRetriesData.observe('executionIdToInstanceMap', function(executionMap) {\n      executionIdToInstanceMap = executionMap;\n    });\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.close($scope.status);\n    });\n\n    $scope.$watch('jobPages.current', function(newValue, oldValue) {\n      if (!newValue) {\n        jobPages.current = 1;\n        return;\n      }\n\n      if (newValue === oldValue) {\n        return;\n      }\n\n      jobPages.current = newValue;\n      updateJobTable(newValue);\n    });\n\n    function updateJobTable(page) {\n      $scope.failedJobs = null;\n      $scope.allJobsSelected = false;\n      $scope.loadingState = 'LOADING';\n\n      var count = jobPages.size;\n      var firstResult = (page - 1) * count;\n\n      JobResource.count({\n        processInstanceId: processInstance.id,\n        withException: true\n      }).$promise.then(function(data) {\n        jobPages.total = data.count;\n\n        if (!jobPages.total) {\n          $scope.loadingState = 'EMPTY';\n          return;\n        }\n\n        JobResource.query({\n          firstResult: firstResult,\n          maxResults: count\n        },{\n          processInstanceId: processInstance.id,\n          withException: true,\n          noRetriesLeft: true\n        }).$promise.then(function(response) {\n          for (var i = 0, job; (job = response[i]); i++) {\n            jobIdToFailedJobMap[job.id] = job;\n            var instance = executionIdToInstanceMap[job.executionId];\n            job.instance = instance;\n            job.selected = selectedFailedJobIds.indexOf(job.id) > -1;\n          }\n\n          $scope.failedJobs = response;\n          $scope.loadingState = 'LOADED';\n\n          if (jobPages.total <= count) {\n            $scope.allJobsSelected = true;\n            $scope.selectAllJobs(true);\n          }\n        });\n      });\n    }\n\n    $scope.$watch('summarizePages.current', function(newValue) {\n      if (!newValue) {\n        return;\n      }\n\n      updateSummarizeTable(newValue);\n\n    });\n\n    function updateSummarizeTable(page) {\n      var count = summarizePages.size;\n      var firstResult = (page - 1) * count;\n\n      var showJobsRetried = $scope.showJobsRetried = [];\n\n      for (var i = 0; i < count; i++) {\n        var jobId = selectedFailedJobIds[i + firstResult];\n        var job = jobIdToFailedJobMap[jobId];\n        if (job) {\n          showJobsRetried.push(job);\n        }\n      }\n    }\n\n    $scope.selectAllJobs = function(allJobsSelected) {\n      angular.forEach($scope.failedJobs, function(job) {\n        job.selected = allJobsSelected;\n        selectFailedJob(job);\n      });\n    };\n\n    var selectFailedJob = $scope.selectFailedJob = function(failedJob) {\n      var index = selectedFailedJobIds.indexOf(failedJob.id);\n\n      if (failedJob.selected === true) {\n        if (index === -1) {\n          selectedFailedJobIds.push(failedJob.id);\n        }\n        return;\n      }\n\n      if (failedJob.selected === false) {\n        selectedFailedJobIds.splice(index, 1);\n        if ($scope.allJobsSelected === true) {\n          $scope.allJobsSelected = false;\n        }\n        return;\n      }\n    };\n\n    $scope.retryFailedJobs = function(selectedFailedJobIds) {\n      $scope.status = PERFORM;\n\n      summarizePages.total = selectedFailedJobIds.length;\n      summarizePages.current = 1;\n\n      doRetry(selectedFailedJobIds).then(function() {\n        if (!finishedWithFailures) {\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'Incrementing the number of retries finished.',\n            exclusive: true\n          });\n        } else {\n          Notifications.addError({\n            status: 'Finished',\n            message: 'Incrementing the number of retries finished with failures.',\n            exclusive: true\n          });\n        }\n\n        $scope.status = FINISHED;\n      });\n    };\n\n    function doRetry(selectedFailedJobIds) {\n      var deferred = $q.defer();\n\n      var count = selectedFailedJobIds.length;\n\n      function retryJob(job) {\n        job.status = PERFORM;\n        JobResource.setRetries({\n          id: job.id\n        }, {\n          retries: 1\n        }, function() {\n          job.status = SUCCESS;\n\n          // we want to show a summarize, when all requests\n          // responded, that's why we uses a counter\n          count = count - 1;\n          if (count === 0) {\n            deferred.resolve();\n          }\n\n        }, function(error) {\n          finishedWithFailures = true;\n\n          job.status = FAILED;\n          job.retryError = error;\n\n          // we want to show a summarize, when all requests\n          // responded, that's why we uses a counter\n          count = count - 1;\n          if (count === 0) {\n            deferred.resolve();\n          }\n        });\n      }\n\n      for (var i = 0, jobId; (jobId = selectedFailedJobIds[i]); i++) {\n        var job = jobIdToFailedJobMap[jobId];\n        retryJob(job);\n      }\n\n      return deferred.promise;\n    }\n\n\n    $scope.close = function(status) {\n      $modalInstance.close(status);\n    };\n  }];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryDialog.js":{"source":"  'use strict';\n\n  module.exports = [\n    '$scope', '$location', 'Notifications', 'JobResource', '$modalInstance', 'incident',\n    function($scope,   $location,   Notifications,   JobResource,   $modalInstance,   incident) {\n\n      var FINISHED = 'finished',\n          PERFORM = 'performing',\n          FAILED = 'failed';\n\n      $scope.$on('$routeChangeStart', function() {\n        $modalInstance.close($scope.status);\n      });\n\n      $scope.incrementRetry = function() {\n        $scope.status = PERFORM;\n\n        JobResource.setRetries({\n          id: incident.configuration\n        }, {\n          retries: 1\n        }, function() {\n          $scope.status = FINISHED;\n\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'Incrementing the number of retries finished successfully.',\n            exclusive: true\n          });\n        }, function(error) {\n          $scope.status = FAILED;\n          Notifications.addError({\n            status: 'Finished',\n            message: 'Incrementing the number of retries was not successful: ' + error.data.message,\n            exclusive: true\n          });\n        });\n      };\n\n      $scope.close = function(status) {\n        $modalInstance.close(status);\n      };\n    }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/externalTaskRetryDialog.js":{"source":"  'use strict';\n\n  module.exports = [\n    '$scope', '$location', 'Notifications', 'camAPI', '$modalInstance', 'incident',\n    function($scope,   $location,   Notifications,   camAPI,   $modalInstance,   incident) {\n\n      var FINISHED = 'finished',\n          PERFORM = 'performing',\n          FAILED = 'failed';\n\n      var ExternalTask = camAPI.resource('external-task');\n\n      $scope.$on('$routeChangeStart', function() {\n        $modalInstance.close($scope.status);\n      });\n\n      $scope.incrementRetry = function() {\n        $scope.status = PERFORM;\n\n        ExternalTask.retries({\n          id: incident.configuration,\n          retries: 1\n        }, function() {\n          $scope.status = FINISHED;\n\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'Incrementing the number of retries finished successfully.',\n            exclusive: true\n          });\n        }, function(error) {\n          $scope.status = FAILED;\n          Notifications.addError({\n            status: 'Finished',\n            message: 'Incrementing the number of retries was not successful: ' + error.data.message,\n            exclusive: true\n          });\n        });\n      };\n\n      $scope.close = function(status) {\n        $modalInstance.close(status);\n      };\n    }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/cancelProcessInstanceDialog.js":{"source":"  'use strict';\n  module.exports = [\n    '$scope', '$location', 'Notifications', 'ProcessInstanceResource', '$modalInstance', 'processInstance', 'processData', 'Views',\n    function($scope,   $location,   Notifications,   ProcessInstanceResource,   $modalInstance,   processInstance,   processData,   Views) {\n\n      var BEFORE_CANCEL = 'beforeCancellation',\n          PERFORM_CANCEL = 'performCancellation',\n          CANCEL_SUCCESS = 'cancellationSuccess',\n          CANCEL_FAILED = 'cancellationFailed';\n\n      $scope.processInstance = processInstance;\n\n      var cancelProcessInstanceData = processData.newChild($scope);\n\n      $scope.$on('$routeChangeStart', function() {\n        $modalInstance.close($scope.status);\n      });\n\n      cancelProcessInstanceData.provide('subProcessInstances', function() {\n        return ProcessInstanceResource.query({\n          firstResult: 0,\n          maxResults: 5\n        }, {\n          superProcessInstance:\n        processInstance.id\n        }).$promise;\n      });\n\n      cancelProcessInstanceData.provide('subProcessInstancesCount', function() {\n        return ProcessInstanceResource.count({\n          superProcessInstance: processInstance.id\n        }).$promise;\n      });\n\n      cancelProcessInstanceData.observe([ 'subProcessInstancesCount', 'subProcessInstances' ], function(subProcessInstancesCount, subProcessInstances) {\n        $scope.subProcessInstancesCount = subProcessInstancesCount.count;\n        $scope.subProcessInstances = subProcessInstances;\n\n        $scope.status = BEFORE_CANCEL;\n      });\n\n      $scope.cancelProcessInstance = function() {\n        $scope.status = PERFORM_CANCEL;\n\n        $scope.processInstance.$delete(function() {\n        // success\n          $scope.status = CANCEL_SUCCESS;\n          Notifications.addMessage({'status': 'Canceled', 'message': 'The cancellation of the process instance was successful.'});\n\n        }, function(err) {\n        // failure\n          $scope.status = CANCEL_FAILED;\n          Notifications.addError({'status': 'Failed', 'message': 'The cancellation of the process instance failed. ' + err.data.message, 'exclusive': ['type']});\n        });\n      };\n\n      $scope.close = function(status) {\n        $modalInstance.close(status);\n\n      // if the cancellation of the process instance was successful,\n        if (status === CANCEL_SUCCESS) {\n          var historyProvider = Views.getProvider({\n            id: 'history',\n            component: 'cockpit.processInstance.view'\n          });\n\n          var path;\n          var search;\n\n          if (historyProvider) {\n            // redirect to the corresponding historic process instance view\n            // keep search params\n            search = $location.search();\n            path = '/process-instance/' + processInstance.id + '/history';\n          }\n          else {\n          // or redirect to the corresponding process definition overview.\n            path = '/process-definition/' + processInstance.definitionId;\n          }\n\n          $location.path(path);\n          $location.search(search || {});\n          $location.replace();\n        }\n      };\n    }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/updateSuspensionStateDialog.js":{"source":"  'use strict';\n\n  module.exports = [\n    '$scope', '$http', '$filter', 'Uri', 'Notifications', '$modalInstance', 'processInstance',\n    function($scope,   $http,   $filter,   Uri,   Notifications,   $modalInstance,   processInstance) {\n\n      var BEFORE_UPDATE = 'BEFORE_UPDATE',\n          PERFORM_UPDATE = 'PERFORM_UDPATE',\n          UPDATE_SUCCESS = 'SUCCESS',\n          UPDATE_FAILED = 'FAIL';\n\n      $scope.processInstance = processInstance;\n\n      $scope.status = BEFORE_UPDATE;\n\n      $scope.$on('$routeChangeStart', function() {\n        $modalInstance.close($scope.status);\n      });\n\n      $scope.updateSuspensionState = function() {\n        $scope.status = PERFORM_UPDATE;\n\n        var data = {};\n\n        data.suspended = !processInstance.suspended;\n\n        $http.put(Uri.appUri('engine://engine/:engine/process-instance/' + processInstance.id + '/suspended/'), data).success(function() {\n          $scope.status = UPDATE_SUCCESS;\n\n          Notifications.addMessage({\n            status: 'Finished',\n            message: 'Updated the suspension state of the process instance.',\n            exclusive: true\n          });\n\n        }).error(function(data) {\n          $scope.status = UPDATE_FAILED;\n\n          Notifications.addError({\n            status: 'Finished',\n            message: 'Could not update the suspension state of the process instance: ' + data.message,\n            exclusive: true\n          });\n        });\n      };\n\n      $scope.close = function(status) {\n        var response = {};\n\n        response.status = status;\n        response.suspended = !processInstance.suspended;\n\n        $modalInstance.close(response);\n      };\n\n    }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/highlightRules.js":{"source":"  'use strict';\n\n  module.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('cockpit.decisionInstance.table', {\n      id: 'highlightRules',\n      initialize: function(data) {\n        data.decisionInstance.outputs.forEach(function(output) {\n          if (output.ruleId) {\n            data.tableControl.highlightRow(output.ruleId, 'fired');\n          }\n        });\n      }\n    });\n  }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/realInput.js":{"source":"  'use strict';\n\n  module.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('cockpit.decisionInstance.table', {\n      id: 'realInput',\n      initialize: function(data) {\n        var viewer = data.tableControl.getViewer().table;\n\n        var elementRegistry = viewer.get('elementRegistry');\n\n        var clauseRow = elementRegistry.filter(function(element) {\n          return element.isClauseRow;\n        })[0];\n\n        if (clauseRow && clauseRow.id) {\n          viewer.get('eventBus').on('cell.render', function(event) {\n\n            var inputIdx = data.decisionInstance.inputs.map(function(inputObject) {\n              return inputObject.clauseId;\n            }).indexOf(event.data.column.id);\n\n            if (event.data.row === clauseRow &&\n              inputIdx !== -1) {\n\n              var input = data.decisionInstance.inputs[inputIdx];\n\n              var realInput = document.createElement('span');\n              if (input.type !== 'Object' &&\n                input.type !== 'Bytes' &&\n                input.type !== 'File') {\n\n                realInput.className = 'dmn-input';\n                realInput.textContent = ' = ' + input.value;\n\n              } else {\n                realInput.className = 'dmn-input-object';\n                realInput.setAttribute('title', 'Variable value of type ' + input.type + ' is not shown');\n                realInput.textContent = ' = [' + input.type + ']';\n              }\n              event.gfx.firstChild.appendChild(realInput);\n            }\n          });\n\n          viewer.get('graphicsFactory').update('row', clauseRow, elementRegistry.getGraphics(clauseRow.id));\n        }\n      }\n    });\n  }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/realOutput.js":{"source":"  'use strict';\n\n  module.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('cockpit.decisionInstance.table', {\n      id: 'realOutput',\n      initialize: function(data) {\n        var viewer = data.tableControl.getViewer().table;\n\n        viewer.get('eventBus').on('cell.render', function(event) {\n\n          var row = event.data.row;\n          var ruleIndex = data.decisionInstance.outputs.map(function(output) {\n            return output.ruleId;\n          }).indexOf(row.id);\n\n          var column = event.data.column;\n          var columnIndex = data.decisionInstance.outputs.map(function(output) {\n            return output.clauseId;\n          }).indexOf(column.id);\n\n          if(ruleIndex !== -1 && columnIndex !== -1) {\n\n            var output = data.decisionInstance.outputs.filter(function(output) {\n              return output.ruleId === row.id && output.clauseId === column.id;\n            })[0];\n\n            var realOutput = document.createElement('span');\n            if(output.type !== 'Object' &&\n               output.type !== 'Bytes' &&\n               output.type !== 'File') {\n\n              realOutput.className = 'dmn-output';\n              realOutput.textContent = ' = ' + output.value;\n\n            } else {\n              realOutput.className = 'dmn-output-object';\n              realOutput.setAttribute('title', 'Variable value of type ' + output.type + ' is not shown');\n              realOutput.textContent = ' = [' + output.type + ']';\n            }\n            event.gfx.lastChild.appendChild(realOutput);\n          }\n        });\n      }\n    });\n  }];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/dashboard/processDefinitionStatisticsData.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar Controller = [ '$scope', 'processData', 'ProcessDefinitionResource',\n      function($scope, processData, ProcessDefinitionResource) {\n\n        processData.provide('processDefinitions', function() {\n          return ProcessDefinitionResource.queryStatistics({ incidents: true }).$promise;\n        });\n\n        processData.provide('processDefinitionStatistics', ['processDefinitions', function(processDefinitions) {\n          return aggregateStatistics(processDefinitions);\n        }]);\n\n        /**\n         * Returns an aggregated list over the statistics.\n         *\n         * Summarize the statistics of process definitions\n         * which have the same process definition key and\n         * tenant id to one item. This item contains the\n         * latest process definition name (if there does not\n         * exist a name the process definition key will be\n         * used as the process definition name).\n         *\n         * Furthermore, the number of instances, failed jobs\n         * and incidents will be aggregated over all versions\n         * of a process definition key and tenant id.\n         *\n         */\n        var aggregateStatistics = function(statistics) {\n          // represents a map which contains to definition key and tenant id\n          // the corresponding statistics.\n          var statisticsResult = [];\n          // the result to return\n          var result = [];\n\n          // iterate over assigned statistics\n          angular.forEach(statistics, function(currentStatistic) {\n            // get the statistics to the definition key of the current item\n            var statisticsForDefinition = statisticsResult[currentStatistic.definition.key];\n\n            if(!statisticsForDefinition) {\n              // create an array for tenants if not exists\n              statisticsResult[currentStatistic.definition.key] = [];\n            }\n\n            // get the statistic for the tenant id of the current item\n            var statistic = statisticsResult[currentStatistic.definition.key][currentStatistic.definition.tenantId];\n\n            if (!statistic) {\n              // if there does not exists a statistic to the definition key\n              // then create a copy of the current item (currentStatistic).\n              statistic = angular.copy(currentStatistic);\n\n              if (!statistic.definition.name) {\n                // if there does not exist a name then set definition key\n                // as the name of the definition.\n                statistic.definition.name = statistic.definition.key;\n              }\n\n              // put the statistic into the map of statistics\n              statisticsResult[statistic.definition.key][currentStatistic.definition.tenantId] = statistic;\n\n              // add the statistic to the result set\n              result.push(statistic);\n\n            } else {\n              // First save the values of instances, failedJobs and incidents.\n              var currentInstances = statistic.instances;\n              var currentFailedJobs = statistics.failedJobs;\n              var currentIncidents = angular.copy(statistic.incidents);\n\n              if (currentStatistic.definition.version > statistic.definition.version) {\n                // if the version of the current statistic, then create copy from them.\n                angular.copy(currentStatistic, statistic);\n\n                if (!statistic.definition.name) {\n                  // if there does not exist a name then set definition key\n                  // as the name of the definition.\n                  statistic.definition.name = statistic.definition.key;\n                }\n              }\n\n              // Add the saved values to the corresponding values of the current statistic\n              statistic.instances = currentInstances + currentStatistic.instances;\n              statistic.failedJobs = currentFailedJobs + currentStatistic.failedJobs;\n\n              angular.forEach(currentIncidents, function(incident) {\n                var incidentType = incident.incidentType;\n                var incidentCount = incident.incidentCount;\n\n                var newIncident = true;\n                for(var i = 0; i < statistic.incidents.length; i++) {\n                  var statisticIncident = statistic.incidents[i];\n                  if (statisticIncident.incidentType == incidentType) {\n                    statisticIncident.incidentCount = incidentCount + statisticIncident.incidentCount;\n                    newIncident = false;\n                  }\n                }\n\n                if (newIncident) {\n                  // merge the incidents\n                  statistic.incidents.push(incident);\n                }\n\n              });\n\n            }\n          });\n\n          return result;\n        };\n\n      }];\n\nvar Configuration = function PluginConfiguration(DataProvider) {\n\n  DataProvider.registerData('cockpit.dashboard.data', {\n    id: 'process-definition-statistics-data',\n    controller: Controller\n  });\n};\n\nConfiguration.$inject = ['DataProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/processDefinition/activityInstanceStatisticsData.js":{"source":"'use strict';\n\nvar Controller = [ '$scope', 'processData', 'ProcessDefinitionResource',\n      function($scope, processData, ProcessDefinitionResource) {\n\n        processData.provide('activityInstanceStatistics', ['processDefinition', function(processDefinition) {\n          return ProcessDefinitionResource.queryActivityStatistics({ id : processDefinition.id, incidents: true }).$promise;\n        }]);\n\n      }];\n\nvar Configuration = function PluginConfiguration(DataProvider) {\n\n  DataProvider.registerData('cockpit.processDefinition.data', {\n    id: 'activity-instance-statistics-data',\n    controller: Controller\n  });\n};\n\nConfiguration.$inject = ['DataProvider'];\n\nmodule.exports = Configuration;\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    processDefinition = require('./dashboard/processDefinitionStatisticsData'),\n    activityInstance = require('./processDefinition/activityInstanceStatisticsData');\n\nvar ngModule = angular.module('cockpit.plugin.base.data', []);\n\nngModule.config(processDefinition);\nngModule.config(activityInstance);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC9kYXRhL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpLFxuICAgIHByb2Nlc3NEZWZpbml0aW9uID0gcmVxdWlyZSgnLi9kYXNoYm9hcmQvcHJvY2Vzc0RlZmluaXRpb25TdGF0aXN0aWNzRGF0YScpLFxuICAgIGFjdGl2aXR5SW5zdGFuY2UgPSByZXF1aXJlKCcuL3Byb2Nlc3NEZWZpbml0aW9uL2FjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzRGF0YScpO1xuXG52YXIgbmdNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnY29ja3BpdC5wbHVnaW4uYmFzZS5kYXRhJywgW10pO1xuXG5uZ01vZHVsZS5jb25maWcocHJvY2Vzc0RlZmluaXRpb24pO1xubmdNb2R1bGUuY29uZmlnKGFjdGl2aXR5SW5zdGFuY2UpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5nTW9kdWxlO1xuIl19","deps":{"./dashboard/processDefinitionStatisticsData":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/dashboard/processDefinitionStatisticsData.js","./processDefinition/activityInstanceStatisticsData":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/processDefinition/activityInstanceStatisticsData.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionSuspensionState.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = [\n  '$scope', '$http', '$filter', 'Uri', 'Notifications', '$modalInstance', 'jobDefinition',\n  function($scope,   $http,   $filter,   Uri,   Notifications,   $modalInstance,   jobDefinition) {\n\n    var BEFORE_UPDATE = 'BEFORE_UPDATE',\n        PERFORM_UPDATE = 'PERFORM_UDPATE',\n        UPDATE_SUCCESS = 'SUCCESS',\n        UPDATE_FAILED = 'FAIL';\n\n    var dateFilter = $filter('date'),\n        dateFormat = 'yyyy-MM-dd\\'T\\'HH:mm:ss';\n\n\n    $scope.jobDefinition = jobDefinition;\n\n    $scope.status = BEFORE_UPDATE;\n\n    $scope.data = {\n      includeJobs : true,\n      executeImmediately : true,\n      executionDate : dateFilter(Date.now(), dateFormat)\n    };\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.close($scope.status);\n    });\n\n    $scope.updateSuspensionState = function() {\n      $scope.status = PERFORM_UPDATE;\n\n      var data = {};\n\n      data.suspended = !jobDefinition.suspended;\n      data.includeJobs = $scope.data.includeJobs;\n      data.executionDate = !$scope.data.executeImmediately ? $scope.data.executionDate : null;\n\n      $http.put(Uri.appUri('engine://engine/:engine/job-definition/' + jobDefinition.id + '/suspended/'), data).success(function() {\n        $scope.status = UPDATE_SUCCESS;\n\n        if ($scope.data.executeImmediately) {\n          Notifications.addMessage({'status': 'Finished', 'message': 'Updated the suspension state of the job definition.', 'exclusive': true });\n        } else {\n          Notifications.addMessage({'status': 'Finished', 'message': 'The update of the suspension state of the job definition has been scheduled.', 'exclusive': true });\n        }\n\n      }).error(function(data) {\n        $scope.status = UPDATE_FAILED;\n\n        if ($scope.data.executeImmediately) {\n          Notifications.addError({'status': 'Finished', 'message': 'Could not update the suspension state of the job definition: ' + data.message, 'exclusive': true });\n        } else {\n          Notifications.addError({'status': 'Finished', 'message': 'The update of the suspension state of the job definition could not be scheduled: ' + data.message, 'exclusive': true });\n        }\n      });\n    };\n\n    $scope.isValid = function() {\n      var formScope = angular.element('[name=\"updateSuspensionStateForm\"]').scope();\n      return (formScope && formScope.updateSuspensionStateForm) ? formScope.updateSuspensionStateForm.$valid : false;\n    };\n\n    $scope.close = function(status) {\n      var response = {};\n\n      response.status = status;\n      response.suspended = !jobDefinition.suspended;\n      response.executeImmediately = $scope.data.executeImmediately;\n      response.executionDate = $scope.data.executionDate;\n\n      $modalInstance.close(response);\n\n    };\n\n  }];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9qb2JEZWZpbml0aW9uU3VzcGVuc2lvblN0YXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gICckc2NvcGUnLCAnJGh0dHAnLCAnJGZpbHRlcicsICdVcmknLCAnTm90aWZpY2F0aW9ucycsICckbW9kYWxJbnN0YW5jZScsICdqb2JEZWZpbml0aW9uJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCAgICRodHRwLCAgICRmaWx0ZXIsICAgVXJpLCAgIE5vdGlmaWNhdGlvbnMsICAgJG1vZGFsSW5zdGFuY2UsICAgam9iRGVmaW5pdGlvbikge1xuXG4gICAgdmFyIEJFRk9SRV9VUERBVEUgPSAnQkVGT1JFX1VQREFURScsXG4gICAgICAgIFBFUkZPUk1fVVBEQVRFID0gJ1BFUkZPUk1fVURQQVRFJyxcbiAgICAgICAgVVBEQVRFX1NVQ0NFU1MgPSAnU1VDQ0VTUycsXG4gICAgICAgIFVQREFURV9GQUlMRUQgPSAnRkFJTCc7XG5cbiAgICB2YXIgZGF0ZUZpbHRlciA9ICRmaWx0ZXIoJ2RhdGUnKSxcbiAgICAgICAgZGF0ZUZvcm1hdCA9ICd5eXl5LU1NLWRkXFwnVFxcJ0hIOm1tOnNzJztcblxuXG4gICAgJHNjb3BlLmpvYkRlZmluaXRpb24gPSBqb2JEZWZpbml0aW9uO1xuXG4gICAgJHNjb3BlLnN0YXR1cyA9IEJFRk9SRV9VUERBVEU7XG5cbiAgICAkc2NvcGUuZGF0YSA9IHtcbiAgICAgIGluY2x1ZGVKb2JzIDogdHJ1ZSxcbiAgICAgIGV4ZWN1dGVJbW1lZGlhdGVseSA6IHRydWUsXG4gICAgICBleGVjdXRpb25EYXRlIDogZGF0ZUZpbHRlcihEYXRlLm5vdygpLCBkYXRlRm9ybWF0KVxuICAgIH07XG5cbiAgICAkc2NvcGUuJG9uKCckcm91dGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCkge1xuICAgICAgJG1vZGFsSW5zdGFuY2UuY2xvc2UoJHNjb3BlLnN0YXR1cyk7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUudXBkYXRlU3VzcGVuc2lvblN0YXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAkc2NvcGUuc3RhdHVzID0gUEVSRk9STV9VUERBVEU7XG5cbiAgICAgIHZhciBkYXRhID0ge307XG5cbiAgICAgIGRhdGEuc3VzcGVuZGVkID0gIWpvYkRlZmluaXRpb24uc3VzcGVuZGVkO1xuICAgICAgZGF0YS5pbmNsdWRlSm9icyA9ICRzY29wZS5kYXRhLmluY2x1ZGVKb2JzO1xuICAgICAgZGF0YS5leGVjdXRpb25EYXRlID0gISRzY29wZS5kYXRhLmV4ZWN1dGVJbW1lZGlhdGVseSA/ICRzY29wZS5kYXRhLmV4ZWN1dGlvbkRhdGUgOiBudWxsO1xuXG4gICAgICAkaHR0cC5wdXQoVXJpLmFwcFVyaSgnZW5naW5lOi8vZW5naW5lLzplbmdpbmUvam9iLWRlZmluaXRpb24vJyArIGpvYkRlZmluaXRpb24uaWQgKyAnL3N1c3BlbmRlZC8nKSwgZGF0YSkuc3VjY2VzcyhmdW5jdGlvbigpIHtcbiAgICAgICAgJHNjb3BlLnN0YXR1cyA9IFVQREFURV9TVUNDRVNTO1xuXG4gICAgICAgIGlmICgkc2NvcGUuZGF0YS5leGVjdXRlSW1tZWRpYXRlbHkpIHtcbiAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZE1lc3NhZ2UoeydzdGF0dXMnOiAnRmluaXNoZWQnLCAnbWVzc2FnZSc6ICdVcGRhdGVkIHRoZSBzdXNwZW5zaW9uIHN0YXRlIG9mIHRoZSBqb2IgZGVmaW5pdGlvbi4nLCAnZXhjbHVzaXZlJzogdHJ1ZSB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZE1lc3NhZ2UoeydzdGF0dXMnOiAnRmluaXNoZWQnLCAnbWVzc2FnZSc6ICdUaGUgdXBkYXRlIG9mIHRoZSBzdXNwZW5zaW9uIHN0YXRlIG9mIHRoZSBqb2IgZGVmaW5pdGlvbiBoYXMgYmVlbiBzY2hlZHVsZWQuJywgJ2V4Y2x1c2l2ZSc6IHRydWUgfSk7XG4gICAgICAgIH1cblxuICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAkc2NvcGUuc3RhdHVzID0gVVBEQVRFX0ZBSUxFRDtcblxuICAgICAgICBpZiAoJHNjb3BlLmRhdGEuZXhlY3V0ZUltbWVkaWF0ZWx5KSB7XG4gICAgICAgICAgTm90aWZpY2F0aW9ucy5hZGRFcnJvcih7J3N0YXR1cyc6ICdGaW5pc2hlZCcsICdtZXNzYWdlJzogJ0NvdWxkIG5vdCB1cGRhdGUgdGhlIHN1c3BlbnNpb24gc3RhdGUgb2YgdGhlIGpvYiBkZWZpbml0aW9uOiAnICsgZGF0YS5tZXNzYWdlLCAnZXhjbHVzaXZlJzogdHJ1ZSB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZEVycm9yKHsnc3RhdHVzJzogJ0ZpbmlzaGVkJywgJ21lc3NhZ2UnOiAnVGhlIHVwZGF0ZSBvZiB0aGUgc3VzcGVuc2lvbiBzdGF0ZSBvZiB0aGUgam9iIGRlZmluaXRpb24gY291bGQgbm90IGJlIHNjaGVkdWxlZDogJyArIGRhdGEubWVzc2FnZSwgJ2V4Y2x1c2l2ZSc6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuaXNWYWxpZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGZvcm1TY29wZSA9IGFuZ3VsYXIuZWxlbWVudCgnW25hbWU9XCJ1cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtXCJdJykuc2NvcGUoKTtcbiAgICAgIHJldHVybiAoZm9ybVNjb3BlICYmIGZvcm1TY29wZS51cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtKSA/IGZvcm1TY29wZS51cGRhdGVTdXNwZW5zaW9uU3RhdGVGb3JtLiR2YWxpZCA6IGZhbHNlO1xuICAgIH07XG5cbiAgICAkc2NvcGUuY2xvc2UgPSBmdW5jdGlvbihzdGF0dXMpIHtcbiAgICAgIHZhciByZXNwb25zZSA9IHt9O1xuXG4gICAgICByZXNwb25zZS5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICByZXNwb25zZS5zdXNwZW5kZWQgPSAham9iRGVmaW5pdGlvbi5zdXNwZW5kZWQ7XG4gICAgICByZXNwb25zZS5leGVjdXRlSW1tZWRpYXRlbHkgPSAkc2NvcGUuZGF0YS5leGVjdXRlSW1tZWRpYXRlbHk7XG4gICAgICByZXNwb25zZS5leGVjdXRpb25EYXRlID0gJHNjb3BlLmRhdGEuZXhlY3V0aW9uRGF0ZTtcblxuICAgICAgJG1vZGFsSW5zdGFuY2UuY2xvc2UocmVzcG9uc2UpO1xuXG4gICAgfTtcblxuICB9XTtcbiJdfQ==","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = [\n  '$scope', '$q', 'Notifications', 'JobDefinitionResource', '$modalInstance', 'jobDefinition',\n  function($scope,   $q,   Notifications,   JobDefinitionResource,   $modalInstance,   jobDefinition) {\n\n    var SUCCESS = 'SUCCESS',\n        FAILED = 'FAIL';\n\n    $scope.status;\n    $scope.setJobPriority = true;\n\n    var data = $scope.data = {\n      priority: jobDefinition.overridingJobPriority,\n      includeJobs: false\n    };\n\n    $scope.$on('$routeChangeStart', function() {\n      var response = {};\n      response.status = $scope.status;\n      $modalInstance.close(response);\n    });\n\n    $scope.hasOverridingJobPriority = function() {\n      return jobDefinition.overridingJobPriority !== null && jobDefinition.overridingJobPriority !== undefined;\n    };\n\n    $scope.submit = function() {\n      var setJobPriority = $scope.setJobPriority;\n      if (!setJobPriority) {\n        data = {};\n      }\n\n      JobDefinitionResource.setJobPriority({ 'id' : jobDefinition.id }, data,\n\n        function() {\n          $scope.status = SUCCESS;\n          if (setJobPriority) {\n            Notifications.addMessage({ 'status': 'Finished', 'message': 'Overriding the priority completed successfully.', 'exclusive': true });\n          }\n          else {\n            Notifications.addMessage({ 'status': 'Finished', 'message': 'Clearing the priority completed successfully.', 'exclusive': true });\n          }\n        },\n\n        function(error) {\n          $scope.status = FAILED;\n          if (setJobPriority) {\n            Notifications.addError({ 'status': 'Finished', 'message': 'Overriding the priority was not successful: ' + error.data.message, 'exclusive': true });\n          }\n          else {\n            Notifications.addError({ 'status': 'Finished', 'message': 'Clearing the priority was not successful: ' + error.data.message, 'exclusive': true });\n          }\n        }\n      );\n    };\n\n    $scope.isValid = function() {\n      var formScope = angular.element('[name=\"overrideJobPriorityForm\"]').scope();\n      return !$scope.setJobPriority || ((formScope && formScope.overrideJobPriorityForm) ? formScope.overrideJobPriorityForm.$valid : false);\n    };\n\n    $scope.close = function(status) {\n      var response = {};\n      response.status = status;\n      $modalInstance.close(response);\n    };\n\n  }];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9hY3Rpb25zL292ZXJyaWRlLWpvYi1wcmlvcml0eS9vdmVycmlkZS1qb2ItcHJpb3JpdHktZGlhbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCk7XG5cbm1vZHVsZS5leHBvcnRzID0gW1xuICAnJHNjb3BlJywgJyRxJywgJ05vdGlmaWNhdGlvbnMnLCAnSm9iRGVmaW5pdGlvblJlc291cmNlJywgJyRtb2RhbEluc3RhbmNlJywgJ2pvYkRlZmluaXRpb24nLFxuICBmdW5jdGlvbigkc2NvcGUsICAgJHEsICAgTm90aWZpY2F0aW9ucywgICBKb2JEZWZpbml0aW9uUmVzb3VyY2UsICAgJG1vZGFsSW5zdGFuY2UsICAgam9iRGVmaW5pdGlvbikge1xuXG4gICAgdmFyIFNVQ0NFU1MgPSAnU1VDQ0VTUycsXG4gICAgICAgIEZBSUxFRCA9ICdGQUlMJztcblxuICAgICRzY29wZS5zdGF0dXM7XG4gICAgJHNjb3BlLnNldEpvYlByaW9yaXR5ID0gdHJ1ZTtcblxuICAgIHZhciBkYXRhID0gJHNjb3BlLmRhdGEgPSB7XG4gICAgICBwcmlvcml0eTogam9iRGVmaW5pdGlvbi5vdmVycmlkaW5nSm9iUHJpb3JpdHksXG4gICAgICBpbmNsdWRlSm9iczogZmFsc2VcbiAgICB9O1xuXG4gICAgJHNjb3BlLiRvbignJHJvdXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXNwb25zZSA9IHt9O1xuICAgICAgcmVzcG9uc2Uuc3RhdHVzID0gJHNjb3BlLnN0YXR1cztcbiAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKHJlc3BvbnNlKTtcbiAgICB9KTtcblxuICAgICRzY29wZS5oYXNPdmVycmlkaW5nSm9iUHJpb3JpdHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBqb2JEZWZpbml0aW9uLm92ZXJyaWRpbmdKb2JQcmlvcml0eSAhPT0gbnVsbCAmJiBqb2JEZWZpbml0aW9uLm92ZXJyaWRpbmdKb2JQcmlvcml0eSAhPT0gdW5kZWZpbmVkO1xuICAgIH07XG5cbiAgICAkc2NvcGUuc3VibWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2V0Sm9iUHJpb3JpdHkgPSAkc2NvcGUuc2V0Sm9iUHJpb3JpdHk7XG4gICAgICBpZiAoIXNldEpvYlByaW9yaXR5KSB7XG4gICAgICAgIGRhdGEgPSB7fTtcbiAgICAgIH1cblxuICAgICAgSm9iRGVmaW5pdGlvblJlc291cmNlLnNldEpvYlByaW9yaXR5KHsgJ2lkJyA6IGpvYkRlZmluaXRpb24uaWQgfSwgZGF0YSxcblxuICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gU1VDQ0VTUztcbiAgICAgICAgICBpZiAoc2V0Sm9iUHJpb3JpdHkpIHtcbiAgICAgICAgICAgIE5vdGlmaWNhdGlvbnMuYWRkTWVzc2FnZSh7ICdzdGF0dXMnOiAnRmluaXNoZWQnLCAnbWVzc2FnZSc6ICdPdmVycmlkaW5nIHRoZSBwcmlvcml0eSBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LicsICdleGNsdXNpdmUnOiB0cnVlIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIE5vdGlmaWNhdGlvbnMuYWRkTWVzc2FnZSh7ICdzdGF0dXMnOiAnRmluaXNoZWQnLCAnbWVzc2FnZSc6ICdDbGVhcmluZyB0aGUgcHJpb3JpdHkgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS4nLCAnZXhjbHVzaXZlJzogdHJ1ZSB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gRkFJTEVEO1xuICAgICAgICAgIGlmIChzZXRKb2JQcmlvcml0eSkge1xuICAgICAgICAgICAgTm90aWZpY2F0aW9ucy5hZGRFcnJvcih7ICdzdGF0dXMnOiAnRmluaXNoZWQnLCAnbWVzc2FnZSc6ICdPdmVycmlkaW5nIHRoZSBwcmlvcml0eSB3YXMgbm90IHN1Y2Nlc3NmdWw6ICcgKyBlcnJvci5kYXRhLm1lc3NhZ2UsICdleGNsdXNpdmUnOiB0cnVlIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIE5vdGlmaWNhdGlvbnMuYWRkRXJyb3IoeyAnc3RhdHVzJzogJ0ZpbmlzaGVkJywgJ21lc3NhZ2UnOiAnQ2xlYXJpbmcgdGhlIHByaW9yaXR5IHdhcyBub3Qgc3VjY2Vzc2Z1bDogJyArIGVycm9yLmRhdGEubWVzc2FnZSwgJ2V4Y2x1c2l2ZSc6IHRydWUgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICApO1xuICAgIH07XG5cbiAgICAkc2NvcGUuaXNWYWxpZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGZvcm1TY29wZSA9IGFuZ3VsYXIuZWxlbWVudCgnW25hbWU9XCJvdmVycmlkZUpvYlByaW9yaXR5Rm9ybVwiXScpLnNjb3BlKCk7XG4gICAgICByZXR1cm4gISRzY29wZS5zZXRKb2JQcmlvcml0eSB8fCAoKGZvcm1TY29wZSAmJiBmb3JtU2NvcGUub3ZlcnJpZGVKb2JQcmlvcml0eUZvcm0pID8gZm9ybVNjb3BlLm92ZXJyaWRlSm9iUHJpb3JpdHlGb3JtLiR2YWxpZCA6IGZhbHNlKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmNsb3NlID0gZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICB2YXIgcmVzcG9uc2UgPSB7fTtcbiAgICAgIHJlc3BvbnNlLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKHJlc3BvbnNlKTtcbiAgICB9O1xuXG4gIH1dO1xuIl19","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = [\n  '$scope', '$q', 'Notifications', 'JobDefinitionResource', '$modalInstance', 'jobDefinitions',\n  function($scope,   $q,   Notifications,   JobDefinitionResource,   $modalInstance,   jobDefinitions) {\n\n    $scope.status;\n    var FINISHED = 'FINISHED',\n        PERFORM = 'PERFORMING',\n        SUCCESS = 'SUCCESS',\n        FAILED = 'FAILED';\n\n    var finishedWithFailures = false;\n\n    var summarizePages = $scope.summarizePages = { size: 5, total: jobDefinitions.length, current: 1 };\n\n    var data = $scope.data = {\n      priority: null,\n      includeJobs: false\n    };\n\n    $scope.setJobPriority = true;\n\n    $scope.$on('$routeChangeStart', function() {\n      var response = {};\n      response.status = $scope.status;\n      $modalInstance.close(response);\n    });\n\n    $scope.$watch('summarizePages.current', function(newValue) {\n      if (!newValue) {\n        return;\n      }\n\n      updateSummarizeTable(newValue);\n    });\n\n    function updateSummarizeTable(page) {\n      var count = summarizePages.size;\n      var firstResult = (page - 1) * count;\n\n      var showJobDefinitions = $scope.showJobDefinitions = [];\n\n      for (var i = 0; i < count; i++) {\n        var jobDefinition = jobDefinitions[i + firstResult];\n        if (jobDefinition) {\n          showJobDefinitions.push(jobDefinition);\n        }\n      }\n    }\n\n    $scope.submit = function() {\n      var setJobPriority = $scope.setJobPriority;\n      if (!setJobPriority) {\n        data = {};\n      }\n\n      overrideJobPriority(jobDefinitions);\n    };\n\n    function overrideJobPriority(jobDefinitions) {\n      $scope.status = PERFORM;\n\n      doOverride(jobDefinitions).then(function() {\n        if (!finishedWithFailures) {\n\n          if ($scope.setJobPriority) {\n            Notifications.addMessage({\n              status: 'Finished',\n              message: 'Overriding the priority completed successfully.',\n              exclusive: true\n            });\n          }\n          else {\n            Notifications.addMessage({\n              status: 'Finished',\n              message: 'Clearing the priority completed successfully.',\n              exclusive: true\n            });\n          }\n        }\n        else {\n          if ($scope.setJobPriority) {\n            Notifications.addError({\n              status: 'Finished',\n              message: 'Overriding the priority was not successfully.',\n              exclusive: true\n            });\n          }\n          else {\n            Notifications.addError({\n              status: 'Finished',\n              message: 'Clearing the priority was not successfully.',\n              exclusive: true\n            });\n          }\n        }\n\n        $scope.status = FINISHED;\n      });\n    }\n\n    function doOverride(jobDefinitions) {\n      var deferred = $q.defer();\n\n      var count = jobDefinitions.length;\n\n      function setJobPriority(jobDefinition) {\n        jobDefinition.status = PERFORM;\n        JobDefinitionResource.setJobPriority({\n          id: jobDefinition.id\n        }, data, function() {\n          jobDefinition.status = SUCCESS;\n\n          // we want to show a summarize, when all requests\n          // responded, that's why we uses a counter\n          count = count - 1;\n          if (count === 0) {\n            deferred.resolve();\n          }\n\n        }, function(error) {\n          finishedWithFailures = true;\n\n          jobDefinition.status = FAILED;\n          jobDefinition.error = error;\n\n          // we want to show a summarize, when all requests\n          // responded, that's why we uses a counter\n          count = count - 1;\n          if (count === 0) {\n            deferred.resolve();\n          }\n        });\n      }\n\n      for (var i = 0, jobDefinition; (jobDefinition = jobDefinitions[i]); i++) {\n        setJobPriority(jobDefinition);\n      }\n\n      return deferred.promise;\n    }\n\n    $scope.isValid = function() {\n      var formScope = angular.element('[name=\"overrideJobPriorityForm\"]').scope();\n      return !$scope.setJobPriority || ((formScope && formScope.overrideJobPriorityForm) ? formScope.overrideJobPriorityForm.$valid : false);\n    };\n\n    $scope.close = function(status) {\n      var response = {};\n      response.status = status;\n      $modalInstance.close(response);\n    };\n\n  }];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9hY3Rpb25zL2J1bGstb3ZlcnJpZGUtam9iLXByaW9yaXR5L2J1bGstb3ZlcnJpZGUtam9iLXByaW9yaXR5LWRpYWxvZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXG4gICckc2NvcGUnLCAnJHEnLCAnTm90aWZpY2F0aW9ucycsICdKb2JEZWZpbml0aW9uUmVzb3VyY2UnLCAnJG1vZGFsSW5zdGFuY2UnLCAnam9iRGVmaW5pdGlvbnMnLFxuICBmdW5jdGlvbigkc2NvcGUsICAgJHEsICAgTm90aWZpY2F0aW9ucywgICBKb2JEZWZpbml0aW9uUmVzb3VyY2UsICAgJG1vZGFsSW5zdGFuY2UsICAgam9iRGVmaW5pdGlvbnMpIHtcblxuICAgICRzY29wZS5zdGF0dXM7XG4gICAgdmFyIEZJTklTSEVEID0gJ0ZJTklTSEVEJyxcbiAgICAgICAgUEVSRk9STSA9ICdQRVJGT1JNSU5HJyxcbiAgICAgICAgU1VDQ0VTUyA9ICdTVUNDRVNTJyxcbiAgICAgICAgRkFJTEVEID0gJ0ZBSUxFRCc7XG5cbiAgICB2YXIgZmluaXNoZWRXaXRoRmFpbHVyZXMgPSBmYWxzZTtcblxuICAgIHZhciBzdW1tYXJpemVQYWdlcyA9ICRzY29wZS5zdW1tYXJpemVQYWdlcyA9IHsgc2l6ZTogNSwgdG90YWw6IGpvYkRlZmluaXRpb25zLmxlbmd0aCwgY3VycmVudDogMSB9O1xuXG4gICAgdmFyIGRhdGEgPSAkc2NvcGUuZGF0YSA9IHtcbiAgICAgIHByaW9yaXR5OiBudWxsLFxuICAgICAgaW5jbHVkZUpvYnM6IGZhbHNlXG4gICAgfTtcblxuICAgICRzY29wZS5zZXRKb2JQcmlvcml0eSA9IHRydWU7XG5cbiAgICAkc2NvcGUuJG9uKCckcm91dGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHJlc3BvbnNlID0ge307XG4gICAgICByZXNwb25zZS5zdGF0dXMgPSAkc2NvcGUuc3RhdHVzO1xuICAgICAgJG1vZGFsSW5zdGFuY2UuY2xvc2UocmVzcG9uc2UpO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLiR3YXRjaCgnc3VtbWFyaXplUGFnZXMuY3VycmVudCcsIGZ1bmN0aW9uKG5ld1ZhbHVlKSB7XG4gICAgICBpZiAoIW5ld1ZhbHVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlU3VtbWFyaXplVGFibGUobmV3VmFsdWUpO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gdXBkYXRlU3VtbWFyaXplVGFibGUocGFnZSkge1xuICAgICAgdmFyIGNvdW50ID0gc3VtbWFyaXplUGFnZXMuc2l6ZTtcbiAgICAgIHZhciBmaXJzdFJlc3VsdCA9IChwYWdlIC0gMSkgKiBjb3VudDtcblxuICAgICAgdmFyIHNob3dKb2JEZWZpbml0aW9ucyA9ICRzY29wZS5zaG93Sm9iRGVmaW5pdGlvbnMgPSBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgIHZhciBqb2JEZWZpbml0aW9uID0gam9iRGVmaW5pdGlvbnNbaSArIGZpcnN0UmVzdWx0XTtcbiAgICAgICAgaWYgKGpvYkRlZmluaXRpb24pIHtcbiAgICAgICAgICBzaG93Sm9iRGVmaW5pdGlvbnMucHVzaChqb2JEZWZpbml0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICRzY29wZS5zdWJtaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzZXRKb2JQcmlvcml0eSA9ICRzY29wZS5zZXRKb2JQcmlvcml0eTtcbiAgICAgIGlmICghc2V0Sm9iUHJpb3JpdHkpIHtcbiAgICAgICAgZGF0YSA9IHt9O1xuICAgICAgfVxuXG4gICAgICBvdmVycmlkZUpvYlByaW9yaXR5KGpvYkRlZmluaXRpb25zKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gb3ZlcnJpZGVKb2JQcmlvcml0eShqb2JEZWZpbml0aW9ucykge1xuICAgICAgJHNjb3BlLnN0YXR1cyA9IFBFUkZPUk07XG5cbiAgICAgIGRvT3ZlcnJpZGUoam9iRGVmaW5pdGlvbnMpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghZmluaXNoZWRXaXRoRmFpbHVyZXMpIHtcblxuICAgICAgICAgIGlmICgkc2NvcGUuc2V0Sm9iUHJpb3JpdHkpIHtcbiAgICAgICAgICAgIE5vdGlmaWNhdGlvbnMuYWRkTWVzc2FnZSh7XG4gICAgICAgICAgICAgIHN0YXR1czogJ0ZpbmlzaGVkJyxcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ092ZXJyaWRpbmcgdGhlIHByaW9yaXR5IGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkuJyxcbiAgICAgICAgICAgICAgZXhjbHVzaXZlOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICBzdGF0dXM6ICdGaW5pc2hlZCcsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdDbGVhcmluZyB0aGUgcHJpb3JpdHkgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS4nLFxuICAgICAgICAgICAgICBleGNsdXNpdmU6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBpZiAoJHNjb3BlLnNldEpvYlByaW9yaXR5KSB7XG4gICAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZEVycm9yKHtcbiAgICAgICAgICAgICAgc3RhdHVzOiAnRmluaXNoZWQnLFxuICAgICAgICAgICAgICBtZXNzYWdlOiAnT3ZlcnJpZGluZyB0aGUgcHJpb3JpdHkgd2FzIG5vdCBzdWNjZXNzZnVsbHkuJyxcbiAgICAgICAgICAgICAgZXhjbHVzaXZlOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBOb3RpZmljYXRpb25zLmFkZEVycm9yKHtcbiAgICAgICAgICAgICAgc3RhdHVzOiAnRmluaXNoZWQnLFxuICAgICAgICAgICAgICBtZXNzYWdlOiAnQ2xlYXJpbmcgdGhlIHByaW9yaXR5IHdhcyBub3Qgc3VjY2Vzc2Z1bGx5LicsXG4gICAgICAgICAgICAgIGV4Y2x1c2l2ZTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJHNjb3BlLnN0YXR1cyA9IEZJTklTSEVEO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZG9PdmVycmlkZShqb2JEZWZpbml0aW9ucykge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgdmFyIGNvdW50ID0gam9iRGVmaW5pdGlvbnMubGVuZ3RoO1xuXG4gICAgICBmdW5jdGlvbiBzZXRKb2JQcmlvcml0eShqb2JEZWZpbml0aW9uKSB7XG4gICAgICAgIGpvYkRlZmluaXRpb24uc3RhdHVzID0gUEVSRk9STTtcbiAgICAgICAgSm9iRGVmaW5pdGlvblJlc291cmNlLnNldEpvYlByaW9yaXR5KHtcbiAgICAgICAgICBpZDogam9iRGVmaW5pdGlvbi5pZFxuICAgICAgICB9LCBkYXRhLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBqb2JEZWZpbml0aW9uLnN0YXR1cyA9IFNVQ0NFU1M7XG5cbiAgICAgICAgICAvLyB3ZSB3YW50IHRvIHNob3cgYSBzdW1tYXJpemUsIHdoZW4gYWxsIHJlcXVlc3RzXG4gICAgICAgICAgLy8gcmVzcG9uZGVkLCB0aGF0J3Mgd2h5IHdlIHVzZXMgYSBjb3VudGVyXG4gICAgICAgICAgY291bnQgPSBjb3VudCAtIDE7XG4gICAgICAgICAgaWYgKGNvdW50ID09PSAwKSB7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgZmluaXNoZWRXaXRoRmFpbHVyZXMgPSB0cnVlO1xuXG4gICAgICAgICAgam9iRGVmaW5pdGlvbi5zdGF0dXMgPSBGQUlMRUQ7XG4gICAgICAgICAgam9iRGVmaW5pdGlvbi5lcnJvciA9IGVycm9yO1xuXG4gICAgICAgICAgLy8gd2Ugd2FudCB0byBzaG93IGEgc3VtbWFyaXplLCB3aGVuIGFsbCByZXF1ZXN0c1xuICAgICAgICAgIC8vIHJlc3BvbmRlZCwgdGhhdCdzIHdoeSB3ZSB1c2VzIGEgY291bnRlclxuICAgICAgICAgIGNvdW50ID0gY291bnQgLSAxO1xuICAgICAgICAgIGlmIChjb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSAwLCBqb2JEZWZpbml0aW9uOyAoam9iRGVmaW5pdGlvbiA9IGpvYkRlZmluaXRpb25zW2ldKTsgaSsrKSB7XG4gICAgICAgIHNldEpvYlByaW9yaXR5KGpvYkRlZmluaXRpb24pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG5cbiAgICAkc2NvcGUuaXNWYWxpZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGZvcm1TY29wZSA9IGFuZ3VsYXIuZWxlbWVudCgnW25hbWU9XCJvdmVycmlkZUpvYlByaW9yaXR5Rm9ybVwiXScpLnNjb3BlKCk7XG4gICAgICByZXR1cm4gISRzY29wZS5zZXRKb2JQcmlvcml0eSB8fCAoKGZvcm1TY29wZSAmJiBmb3JtU2NvcGUub3ZlcnJpZGVKb2JQcmlvcml0eUZvcm0pID8gZm9ybVNjb3BlLm92ZXJyaWRlSm9iUHJpb3JpdHlGb3JtLiR2YWxpZCA6IGZhbHNlKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmNsb3NlID0gZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICB2YXIgcmVzcG9uc2UgPSB7fTtcbiAgICAgIHJlc3BvbnNlLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICRtb2RhbEluc3RhbmNlLmNsb3NlKHJlc3BvbnNlKTtcbiAgICB9O1xuXG4gIH1dO1xuIl19","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/data/processDefinition/jobDefinitionData.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar Controller = [ '$scope', 'processData', 'JobDefinitionResource',\n      function($scope, processData, JobDefinitionResource) {\n\n        $scope.$on('$processDefinition.suspensionState.changed', function() {\n          processData.changed('jobDefinitions');\n        });\n\n        processData.provide('jobDefinitions', ['processDefinition', function(processDefinition) {\n          return JobDefinitionResource.query({ processDefinitionId : processDefinition.id }).$promise;\n        }]);\n\n        processData.observe(['jobDefinitions', 'bpmnElements'], function(jobDefinitions, bpmnElements) {\n\n          angular.forEach(jobDefinitions, function(jobDefinition) {\n            var activityId = jobDefinition.activityId,\n                bpmnElement = bpmnElements[activityId];\n\n            jobDefinition.activityName = (bpmnElement && (bpmnElement.name || bpmnElement.id)) || activityId;\n\n          });\n\n        });\n\n      }];\n\nvar Configuration = function PluginConfiguration(DataProvider) {\n\n  DataProvider.registerData('cockpit.processDefinition.data', {\n    id: 'job-definitions-data',\n    controller: Controller\n  });\n};\n\nConfiguration.$inject = ['DataProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9kYXRhL3Byb2Nlc3NEZWZpbml0aW9uL2pvYkRlZmluaXRpb25EYXRhLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xuXG52YXIgQ29udHJvbGxlciA9IFsgJyRzY29wZScsICdwcm9jZXNzRGF0YScsICdKb2JEZWZpbml0aW9uUmVzb3VyY2UnLFxuICAgICAgZnVuY3Rpb24oJHNjb3BlLCBwcm9jZXNzRGF0YSwgSm9iRGVmaW5pdGlvblJlc291cmNlKSB7XG5cbiAgICAgICAgJHNjb3BlLiRvbignJHByb2Nlc3NEZWZpbml0aW9uLnN1c3BlbnNpb25TdGF0ZS5jaGFuZ2VkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcHJvY2Vzc0RhdGEuY2hhbmdlZCgnam9iRGVmaW5pdGlvbnMnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcHJvY2Vzc0RhdGEucHJvdmlkZSgnam9iRGVmaW5pdGlvbnMnLCBbJ3Byb2Nlc3NEZWZpbml0aW9uJywgZnVuY3Rpb24ocHJvY2Vzc0RlZmluaXRpb24pIHtcbiAgICAgICAgICByZXR1cm4gSm9iRGVmaW5pdGlvblJlc291cmNlLnF1ZXJ5KHsgcHJvY2Vzc0RlZmluaXRpb25JZCA6IHByb2Nlc3NEZWZpbml0aW9uLmlkIH0pLiRwcm9taXNlO1xuICAgICAgICB9XSk7XG5cbiAgICAgICAgcHJvY2Vzc0RhdGEub2JzZXJ2ZShbJ2pvYkRlZmluaXRpb25zJywgJ2JwbW5FbGVtZW50cyddLCBmdW5jdGlvbihqb2JEZWZpbml0aW9ucywgYnBtbkVsZW1lbnRzKSB7XG5cbiAgICAgICAgICBhbmd1bGFyLmZvckVhY2goam9iRGVmaW5pdGlvbnMsIGZ1bmN0aW9uKGpvYkRlZmluaXRpb24pIHtcbiAgICAgICAgICAgIHZhciBhY3Rpdml0eUlkID0gam9iRGVmaW5pdGlvbi5hY3Rpdml0eUlkLFxuICAgICAgICAgICAgICAgIGJwbW5FbGVtZW50ID0gYnBtbkVsZW1lbnRzW2FjdGl2aXR5SWRdO1xuXG4gICAgICAgICAgICBqb2JEZWZpbml0aW9uLmFjdGl2aXR5TmFtZSA9IChicG1uRWxlbWVudCAmJiAoYnBtbkVsZW1lbnQubmFtZSB8fCBicG1uRWxlbWVudC5pZCkpIHx8IGFjdGl2aXR5SWQ7XG5cbiAgICAgICAgICB9KTtcblxuICAgICAgICB9KTtcblxuICAgICAgfV07XG5cbnZhciBDb25maWd1cmF0aW9uID0gZnVuY3Rpb24gUGx1Z2luQ29uZmlndXJhdGlvbihEYXRhUHJvdmlkZXIpIHtcblxuICBEYXRhUHJvdmlkZXIucmVnaXN0ZXJEYXRhKCdjb2NrcGl0LnByb2Nlc3NEZWZpbml0aW9uLmRhdGEnLCB7XG4gICAgaWQ6ICdqb2ItZGVmaW5pdGlvbnMtZGF0YScsXG4gICAgY29udHJvbGxlcjogQ29udHJvbGxlclxuICB9KTtcbn07XG5cbkNvbmZpZ3VyYXRpb24uJGluamVjdCA9IFsnRGF0YVByb3ZpZGVyJ107XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uZmlndXJhdGlvbjtcbiJdfQ==","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/data/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    jobDefinitionData = require('./processDefinition/jobDefinitionData');\n\nvar ngModule = angular.module('cockpit.plugin.jobDefinition.data', []);\n\nngModule.config(jobDefinitionData);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9kYXRhL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG4gICAgam9iRGVmaW5pdGlvbkRhdGEgPSByZXF1aXJlKCcuL3Byb2Nlc3NEZWZpbml0aW9uL2pvYkRlZmluaXRpb25EYXRhJyk7XG5cbnZhciBuZ01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdjb2NrcGl0LnBsdWdpbi5qb2JEZWZpbml0aW9uLmRhdGEnLCBbXSk7XG5cbm5nTW9kdWxlLmNvbmZpZyhqb2JEZWZpbml0aW9uRGF0YSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmdNb2R1bGU7XG4iXX0=","deps":{"./processDefinition/jobDefinitionData":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/data/processDefinition/jobDefinitionData.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\\n<section>\\n  <div class=\\\"inner\\\">\\n    <header>\\n      <div class=\\\"row\\\">\\n        <h1 class=\\\"col-xs-6 section-title\\\">{{ processDefinitionData.length }} process {{ (processDefinitionData.length > 1 ? 'definitions' : 'definition') }} deployed</h1>\\n\\n\\n        <div class=\\\"col-xs-6 text-right\\\">\\n          <ul class=\\\"nav nav-tabs\\\" ng-if=\\\"processDefinitionData && processDefinitionData.length\\\">\\n            <li ng-class=\\\"{active: activeTab === 'list'}\\\">\\n              <a ng-click=\\\"selectTab('list')\\\">List</a>\\n            </li>\\n            <li ng-class=\\\"{active: activeTab === 'previews'}\\\">\\n              <a ng-click=\\\"selectTab('previews')\\\">Previews</a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </header>\\n\\n\\n\\n    <div cam-widget-loader\\n         loading-state=\\\"{{loadingState}}\\\"\\n         class=\\\"deployed-processes\\\">\\n      <table ng-if=\\\"activeTab === 'list'\\\"\\n             class=\\\"process-definitions-list cam-table\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"state\\\">State</th>\\n            <th class=\\\"instances\\\">Running Instances</th>\\n            <th class=\\\"name\\\">Name</th>\\n            <th class=\\\"tenant-id\\\">Tenant ID</th>\\n            <th ng-if=\\\"hasHistoryPlugin\\\"\\n                class=\\\"history-link\\\">History view</th>\\n            <th ng-if=\\\"hasReportPlugin\\\"\\n                class=\\\"report-link\\\">Report</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr ng-repeat=\\\"pd in processDefinitionData | orderBy:['name || key','tenantId']:false\\\">\\n            <td class=\\\"state\\\">\\n              <div ng-if=\\\"pd.incidents.length > -1\\\" state-circle incidents=\\\"pd.incidents\\\"></div>\\n              <div ng-if=\\\"pd.incidents == undefined\\\">\\n                <span class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span>\\n              </div>\\n            </td>\\n\\n            <td ng-if=\\\"pd.instances >= 0\\\" class=\\\"instances\\\">\\n              {{ pd.instances }}\\n            </td>\\n            <td ng-if=\\\"pd.instances == undefined\\\">\\n              <span class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span>\\n            </td>\\n\\n            <td class=\\\"name\\\">\\n              <a href=\\\"#/process-definition/{{ pd.id }}\\\">\\n                {{ pd.name || pd.key }}\\n              </a>\\n            </td>\\n\\n            <td class=\\\"tenant-id\\\">\\n              {{ pd.tenantId }}\\n            </td>\\n\\n            <td ng-if=\\\"hasHistoryPlugin\\\"\\n                class=\\\"history-link\\\">\\n              <a href=\\\"#/process-definition/{{ pd.id }}/history\\\">\\n                History view\\n              </a>\\n            </td>\\n\\n            <td ng-if=\\\"hasReportPlugin\\\"\\n                class=\\\"report-link\\\">\\n              <a href=\\\"#/reports/reporting-duration-report?processDefinitionKey={{ pd.key }}\\\">\\n                <span class=\\\"glyphicon glyphicon-signal\\\"></span>\\n              </a>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <div ng-if=\\\"activeTab === 'previews'\\\"\\n           class=\\\"tile-grid\\\">\\n        <div ng-repeat=\\\"pd in processDefinitionData | orderBy:orderByPredicate:orderByReverse\\\"\\n             class=\\\"tile col-xs-12 col-sm-6 col-md-4 col-lg-3\\\">\\n          <a href=\\\"#/process-definition/{{ pd.id }}\\\">\\n            <h4 class=\\\"tile-header\\\">\\n              {{ pd.name || pd.key }}\\n            </h4>\\n\\n            <span class=\\\"tile-body\\\">\\n              <span ng-if=\\\"activeTab === 'previews'\\\"\\n                    process-diagram-preview\\n                    process-definition-id=\\\"pd.id\\\"></span>\\n            </span>\\n\\n            <span class=\\\"tile-footer\\\">\\n              <span ng-if=\\\"pd.instances >= 0\\\" class=\\\"instances\\\">\\n                {{ (pd.instances < 1 ? 'No' : pd.instances) }}\\n                running\\n                {{ ((pd.instances === 1 || pd.instances === '1') ? 'instance' : 'instances') }}\\n              </span>\\n              <span ng-if=\\\"pd.instances == undefined\\\" class=\\\"instances\\\">\\n                <span class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span>\\n              </span>\\n\\n              <span ng-if=\\\"pd.incidents.length > -1\\\" state-circle\\n                    incidents=\\\"pd.incidents\\\"\\n                    class=\\\"circle-tiles\\\"></span>\\n              <span ng-if=\\\"pd.incidents == undefined\\\" class=\\\"circle-tiles\\\"></span>\\n            </span>\\n          </a>\\n        </div>\\n      </div>\\n\\n      <h3 ng-if=\\\"!processDefinitionData || !processDefinitionData.length\\\">\\n        No process definitions deployed\\n      </h3>\\n\\n    </div>\\n\\n\\n  </div>\\n</section>\\n\\n<!-- / CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\\n\";\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processes.dashboard', {\n    id: 'process-definition',\n    label: 'Deployed Process Definitions',\n    template: template,\n    controller: [\n      '$scope',\n      'Views',\n      'camAPI',\n      function($scope, Views, camAPI) {\n        var processInstancePlugins = Views.getProviders({ component: 'cockpit.processInstance.view' });\n        $scope.hasHistoryPlugin = processInstancePlugins.filter(function(plugin) {\n          return plugin.id === 'history';\n        }).length > 0;\n\n        var processData = $scope.processData.newChild($scope);\n\n        $scope.hasReportPlugin = Views.getProviders({ component: 'cockpit.report' }).length > 0;\n\n        var processDefinitionService = camAPI.resource('process-definition');\n        $scope.loadingState = 'LOADING';\n\n        processDefinitionService.list({\n          latest: true\n        }, function(err, data) {\n          $scope.processDefinitionData = data.items;\n\n          if (err) {\n            $scope.loadingState = 'ERROR';\n          }\n\n          $scope.loadingState = 'LOADED';\n\n          processData.observe('processDefinitionStatistics', function(processDefinitionStatistics) {\n            $scope.statistics = processDefinitionStatistics;\n\n            $scope.statistics.forEach(function(statistic) {\n              var processDefId = statistic.definition.id;\n              var foundIds = $scope.processDefinitionData.filter(function(pd) {\n                return pd.id === processDefId;\n              });\n\n              var foundObject = foundIds[0];\n              if(foundObject) {\n                foundObject.incidents = statistic.incidents;\n                foundObject.instances = statistic.instances;\n              }\n            });\n          });\n        });\n\n        $scope.activeTab = 'list';\n        $scope.selectTab = function(tab) {\n          $scope.activeTab = tab;\n        };\n      }],\n\n    priority: 0\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/updateSuspensionStateAction.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\\n<a class=\\\"btn btn-default btn-toolbar btn-suspend-action\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Suspend Process Definition\\\"\\n   tooltip-placement=\\\"left\\\"\\n   ng-show=\\\"!processDefinition.suspended\\\">\\n  <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</a>\\n\\n<a class=\\\"btn btn-default btn-toolbar\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Activate Process Definition\\\"\\n   tooltip-placement=\\\"left\\\"\\n   ng-hide=\\\"!processDefinition.suspended\\\">\\n  <span class=\\\"glyphicon glyphicon-play\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\\n\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>{{ (processDefinition.suspended ? 'Activate' : 'Suspend') }} Process Definition</h3>\\n</div>\\n\\n<div class=\\\"process-definition update-suspension-state modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n\\n    <p ng-show=\\\"processDefinition.suspended\\\">\\n      <!-- activation -->\\n      This process definition will be activated, so that it will be possible to start new process instances based on this process definition.\\n    </p>\\n\\n    <p ng-hide=\\\"processDefinition.suspended\\\">\\n      <!-- suspension -->\\n      This process definition will be suspended, so that it will not be possible to start new process instances based on this process definition.\\n    </p>\\n\\n    <form class=\\\"form-horizontal\\\"\\n          name=\\\"updateSuspensionStateForm\\\"\\n          novalidate\\n          request-aware\\n          ng-submit=\\\"updateSuspensionState()\\\">\\n      <fieldset>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-xs-4\\\"\\n                 for=\\\"includeInstancesValue\\\">Include Instances\\n            <!-- activation -->\\n            <span tooltip=\\\"Including the process instances means that all existing process instances of this process definition will be activated too, if the value is set to true.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-show=\\\"processDefinition.suspended\\\">\\n              <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>\\n            </span>\\n\\n            <!-- suspension -->\\n            <span tooltip=\\\"Including the process instances means that all existing process instances of this process definition will be suspended too, if the value is set to true.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-hide=\\\"processDefinition.suspended\\\">\\n              <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <label class=\\\"checkbox\\\">\\n              <input id=\\\"includeInstancesValueId\\\"\\n                     name=\\\"includeInstancesValue\\\"\\n                     type=\\\"checkbox\\\"\\n                     ng-model=\\\"data.includeInstances\\\">\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-xs-4\\\" for=\\\"executeImmediately\\\">Execute\\n            <span tooltip=\\\"Decide whether the activation of this process definition should be executed immediately or delayed. If the activation should happen delayed then an execution date must be provided on which the activation will be scheduled.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-show=\\\"processDefinition.suspended\\\">\\n              <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>\\n            </span>\\n            <span tooltip=\\\"Decide whether the suspension of this process definition should be executed immediately or delayed. If the suspension should happen delayed then an execution date must be provided on which the suspension will be scheduled.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-hide=\\\"processDefinition.suspended\\\">\\n              <span class=\\\"glyphicon glyphicon-question-sign\\\"></span>\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <label class=\\\"radio\\\">\\n              <input ng-model=\\\"data.executeImmediately\\\"\\n                     ng-value=\\\"true\\\"\\n                     type=\\\"radio\\\"\\n                     name=\\\"execute\\\">\\n              Immediately\\n            </label>\\n\\n            <label class=\\\"radio\\\">\\n              <input ng-model=\\\"data.executeImmediately\\\"\\n                     ng-value=\\\"false\\\"\\n                     type=\\\"radio\\\"\\n                     name=\\\"execute\\\">\\n              Delayed\\n            </label>\\n          </div>\\n\\n          <label class=\\\"control-label col-xs-4\\\"\\n                 for=\\\"executionDateValue\\\"\\n                 ng-show=\\\"!data.executeImmediately\\\">\\n            Schedule at\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\"\\n               ng-show=\\\"!data.executeImmediately\\\">\\n            <input date\\n                   name=\\\"executionDateValue\\\"\\n                   ng-model=\\\"data.executionDate\\\"\\n                   type=\\\"text\\\"\\n                   required />\\n\\n            <p class=\\\"invalid\\\"\\n               ng-show=\\\"this.updateSuspensionStateForm.executionDateValue.$error.date\\\">\\n              Supported pattern 'yyyy-MM-ddTHH:mm:ss'.\\n            </p>\\n          </div>\\n\\n        </div><!-- /.form-group -->\\n\\n      </fieldset>\\n    </form>\\n\\n    <p>\\n      Do you really want to {{ (processDefinition.suspended ? 'activate' : 'suspend') }} this process definition?\\n    </p>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'SUCCESS'\\\">\\n    <p ng-show=\\\"processDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the process definition has been updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"processDefinition.suspended && !data.executeImmediately\\\">\\n      The activation of the process definition has been scheduled to {{ data.executionDate | camDate  }} successfully.\\n    </p>\\n    <p ng-show=\\\"!processDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the process definition has been updated to \\\"suspended\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"!processDefinition.suspended && !data.executeImmediately\\\">\\n      The suspension of the process definition has been scheduled to {{ data.executionDate | camDate  }} successfully.\\n    </p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FAIL'\\\">\\n    <p ng-show=\\\"processDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the process definition could not be updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"processDefinition.suspended && !data.executeImmediately\\\">\\n      The activation of the process definition could not be scheduled to {{ data.executionDate | camDate  }} successfully.\\n    </p>\\n    <p ng-show=\\\"!processDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the process definition could not be updated to \\\"suspended\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"!processDefinition.suspended && !data.executeImmediately\\\">\\n      The suspension of the process definition could not be scheduled to {{ data.executionDate | camDate  }} successfully.\\n    </p>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'PERFORM_UDPATE'\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"updateSuspensionState()\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PERFORM_UDPATE'\\\">\\n    {{ (processDefinition.suspended ? 'Activate' : 'Suspend') }}\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\\n\";\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = ['ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.runtime.action', {\n    id: 'update-suspension-state-action',\n    label: 'Update Suspension State',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', '$modal',\n      function($scope,   $rootScope,   $modal) {\n\n        $scope.openDialog = function() {\n          var dialog = $modal.open({\n            resolve: {\n              processData: function() { return $scope.processData; },\n              processDefinition: function() { return $scope.processDefinition; }\n            },\n            controller: 'UpdateProcessDefinitionSuspensionStateController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n\n            // dialog closed. YEA!\n            if (result.status === 'SUCCESS') {\n              if (result.executeImmediately) {\n                $scope.processDefinition.suspended = result.suspended;\n                $rootScope.$broadcast('$processDefinition.suspensionState.changed', $scope.processDefinition);\n              }\n\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n        };\n\n      }],\n    priority: 50\n  });\n}];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/activityInstanceStatisticsOverlay.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/activity-instance-statistics-overlay.html -->\\n<span class=\\\"activity-bottom-left-position\\\"\\n      ng-show=\\\"activityInstance || activityInstanceMI\\\"\\n      ng-click=\\\"selectRunningInstances($event)\\\">\\n  <span class=\\\"badge\\\"\\n        tooltip=\\\"Running Activity Instances\\\"\\n        tooltip-placement=\\\"top\\\"\\n        tooltip-animation=\\\"false\\\"\\n        ng-show=\\\"activityInstance.instances || activityInstanceMI.instances\\\">\\n    {{ ((activityInstance.instances || 0) + (activityInstanceMI.instances || 0) | abbreviateNumber) }}\\n  </span>\\n\\n  <span class=\\\"badge badge-important\\\"\\n        tooltip=\\\"Open Incidents\\\"\\n        tooltip-placement=\\\"top\\\"\\n        tooltip-animation=\\\"false\\\"\\n        ng-show=\\\"activityInstance.incidents.length > 0 || activityInstanceMI.incidents.length > 0\\\">!</span>\\n</span>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/activity-instance-statistics-overlay.html -->\\n\";\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nmodule.exports = ['ViewsProvider',  function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.diagram.overlay', {\n    id: 'activity-instance-statistics-overlay',\n    template: template,\n    controller: [\n      '$scope',\n      'Loaders',\n      function($scope, Loaders) {\n\n        var bpmnElement = $scope.bpmnElement,\n            processData = $scope.processData.newChild($scope);\n\n        var stopLoading = Loaders.startLoading();\n\n        processData.provide('activityInstance', ['activityInstanceStatistics', function(activityInstanceStatistics) {\n          for (var i = 0; i < activityInstanceStatistics.length; i++) {\n            var current = activityInstanceStatistics[i];\n            if (current.id === bpmnElement.id) {\n              return current;\n            }\n          }\n          return null;\n        }]);\n\n        processData.provide('activityInstanceMI', ['activityInstanceStatistics', function(activityInstanceStatistics) {\n          for (var i = 0; i < activityInstanceStatistics.length; i++) {\n            var current = activityInstanceStatistics[i];\n            if (current.id === bpmnElement.id + '#multiInstanceBody') {\n              return current;\n            }\n          }\n          return null;\n        }]);\n\n        $scope.activityInstance = processData.observe('activityInstance', function(activityInstance) {\n          if (activityInstance) {\n            bpmnElement.isSelectable = true;\n          }\n\n          stopLoading();\n          $scope.activityInstance = activityInstance;\n        });\n        $scope.activityInstanceMI = processData.observe('activityInstanceMI', function(activityInstance) {\n          if (activityInstance) {\n            bpmnElement.isSelectable = true;\n          }\n\n          stopLoading();\n          $scope.activityInstanceMI = activityInstance;\n        });\n\n        var currentFilter = processData.observe('filter', function(filter) {\n          currentFilter = filter;\n        });\n\n        $scope.selectRunningInstances = function(e) {\n          var newFilter = angular.copy(currentFilter),\n              ctrl = e.ctrlKey,\n              activityId = bpmnElement.id,\n              activityIds = angular.copy(newFilter.activityIds) || [],\n              idx = activityIds.indexOf(activityId),\n              selected = idx !== -1;\n\n          if (!activityId) {\n            activityIds = null;\n\n          } else {\n\n            if (ctrl) {\n              if (selected) {\n                activityIds.splice(idx, 1);\n\n              } else {\n                activityIds.push(activityId);\n              }\n\n            } else {\n              activityIds = [ activityId ];\n            }\n          }\n\n          newFilter.activityIds = activityIds;\n\n          processData.set('filter', newFilter);\n        };\n\n      }],\n    priority: 20\n  });\n}];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9hY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljc092ZXJsYXkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5cblxudmFyIHRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0RlZmluaXRpb24vYWN0aXZpdHktaW5zdGFuY2Utc3RhdGlzdGljcy1vdmVybGF5Lmh0bWwgLS0+XFxuPHNwYW4gY2xhc3M9XFxcImFjdGl2aXR5LWJvdHRvbS1sZWZ0LXBvc2l0aW9uXFxcIlxcbiAgICAgIG5nLXNob3c9XFxcImFjdGl2aXR5SW5zdGFuY2UgfHwgYWN0aXZpdHlJbnN0YW5jZU1JXFxcIlxcbiAgICAgIG5nLWNsaWNrPVxcXCJzZWxlY3RSdW5uaW5nSW5zdGFuY2VzKCRldmVudClcXFwiPlxcbiAgPHNwYW4gY2xhc3M9XFxcImJhZGdlXFxcIlxcbiAgICAgICAgdG9vbHRpcD1cXFwiUnVubmluZyBBY3Rpdml0eSBJbnN0YW5jZXNcXFwiXFxuICAgICAgICB0b29sdGlwLXBsYWNlbWVudD1cXFwidG9wXFxcIlxcbiAgICAgICAgdG9vbHRpcC1hbmltYXRpb249XFxcImZhbHNlXFxcIlxcbiAgICAgICAgbmctc2hvdz1cXFwiYWN0aXZpdHlJbnN0YW5jZS5pbnN0YW5jZXMgfHwgYWN0aXZpdHlJbnN0YW5jZU1JLmluc3RhbmNlc1xcXCI+XFxuICAgIHt7ICgoYWN0aXZpdHlJbnN0YW5jZS5pbnN0YW5jZXMgfHwgMCkgKyAoYWN0aXZpdHlJbnN0YW5jZU1JLmluc3RhbmNlcyB8fCAwKSB8IGFiYnJldmlhdGVOdW1iZXIpIH19XFxuICA8L3NwYW4+XFxuXFxuICA8c3BhbiBjbGFzcz1cXFwiYmFkZ2UgYmFkZ2UtaW1wb3J0YW50XFxcIlxcbiAgICAgICAgdG9vbHRpcD1cXFwiT3BlbiBJbmNpZGVudHNcXFwiXFxuICAgICAgICB0b29sdGlwLXBsYWNlbWVudD1cXFwidG9wXFxcIlxcbiAgICAgICAgdG9vbHRpcC1hbmltYXRpb249XFxcImZhbHNlXFxcIlxcbiAgICAgICAgbmctc2hvdz1cXFwiYWN0aXZpdHlJbnN0YW5jZS5pbmNpZGVudHMubGVuZ3RoID4gMCB8fCBhY3Rpdml0eUluc3RhbmNlTUkuaW5jaWRlbnRzLmxlbmd0aCA+IDBcXFwiPiE8L3NwYW4+XFxuPC9zcGFuPlxcbjwhLS0gLyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9iYXNlL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9hY3Rpdml0eS1pbnN0YW5jZS1zdGF0aXN0aWNzLW92ZXJsYXkuaHRtbCAtLT5cXG5cIjtcbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFsnVmlld3NQcm92aWRlcicsICBmdW5jdGlvbihWaWV3c1Byb3ZpZGVyKSB7XG5cbiAgVmlld3NQcm92aWRlci5yZWdpc3RlckRlZmF1bHRWaWV3KCdjb2NrcGl0LnByb2Nlc3NEZWZpbml0aW9uLmRpYWdyYW0ub3ZlcmxheScsIHtcbiAgICBpZDogJ2FjdGl2aXR5LWluc3RhbmNlLXN0YXRpc3RpY3Mtb3ZlcmxheScsXG4gICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxuICAgIGNvbnRyb2xsZXI6IFtcbiAgICAgICckc2NvcGUnLFxuICAgICAgJ0xvYWRlcnMnLFxuICAgICAgZnVuY3Rpb24oJHNjb3BlLCBMb2FkZXJzKSB7XG5cbiAgICAgICAgdmFyIGJwbW5FbGVtZW50ID0gJHNjb3BlLmJwbW5FbGVtZW50LFxuICAgICAgICAgICAgcHJvY2Vzc0RhdGEgPSAkc2NvcGUucHJvY2Vzc0RhdGEubmV3Q2hpbGQoJHNjb3BlKTtcblxuICAgICAgICB2YXIgc3RvcExvYWRpbmcgPSBMb2FkZXJzLnN0YXJ0TG9hZGluZygpO1xuXG4gICAgICAgIHByb2Nlc3NEYXRhLnByb3ZpZGUoJ2FjdGl2aXR5SW5zdGFuY2UnLCBbJ2FjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzJywgZnVuY3Rpb24oYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3MpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudCA9IGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzW2ldO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnQuaWQgPT09IGJwbW5FbGVtZW50LmlkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjdXJyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfV0pO1xuXG4gICAgICAgIHByb2Nlc3NEYXRhLnByb3ZpZGUoJ2FjdGl2aXR5SW5zdGFuY2VNSScsIFsnYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3MnLCBmdW5jdGlvbihhY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljcykge1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50ID0gYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3NbaV07XG4gICAgICAgICAgICBpZiAoY3VycmVudC5pZCA9PT0gYnBtbkVsZW1lbnQuaWQgKyAnI211bHRpSW5zdGFuY2VCb2R5Jykge1xuICAgICAgICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1dKTtcblxuICAgICAgICAkc2NvcGUuYWN0aXZpdHlJbnN0YW5jZSA9IHByb2Nlc3NEYXRhLm9ic2VydmUoJ2FjdGl2aXR5SW5zdGFuY2UnLCBmdW5jdGlvbihhY3Rpdml0eUluc3RhbmNlKSB7XG4gICAgICAgICAgaWYgKGFjdGl2aXR5SW5zdGFuY2UpIHtcbiAgICAgICAgICAgIGJwbW5FbGVtZW50LmlzU2VsZWN0YWJsZSA9IHRydWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3RvcExvYWRpbmcoKTtcbiAgICAgICAgICAkc2NvcGUuYWN0aXZpdHlJbnN0YW5jZSA9IGFjdGl2aXR5SW5zdGFuY2U7XG4gICAgICAgIH0pO1xuICAgICAgICAkc2NvcGUuYWN0aXZpdHlJbnN0YW5jZU1JID0gcHJvY2Vzc0RhdGEub2JzZXJ2ZSgnYWN0aXZpdHlJbnN0YW5jZU1JJywgZnVuY3Rpb24oYWN0aXZpdHlJbnN0YW5jZSkge1xuICAgICAgICAgIGlmIChhY3Rpdml0eUluc3RhbmNlKSB7XG4gICAgICAgICAgICBicG1uRWxlbWVudC5pc1NlbGVjdGFibGUgPSB0cnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN0b3BMb2FkaW5nKCk7XG4gICAgICAgICAgJHNjb3BlLmFjdGl2aXR5SW5zdGFuY2VNSSA9IGFjdGl2aXR5SW5zdGFuY2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBjdXJyZW50RmlsdGVyID0gcHJvY2Vzc0RhdGEub2JzZXJ2ZSgnZmlsdGVyJywgZnVuY3Rpb24oZmlsdGVyKSB7XG4gICAgICAgICAgY3VycmVudEZpbHRlciA9IGZpbHRlcjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJHNjb3BlLnNlbGVjdFJ1bm5pbmdJbnN0YW5jZXMgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgdmFyIG5ld0ZpbHRlciA9IGFuZ3VsYXIuY29weShjdXJyZW50RmlsdGVyKSxcbiAgICAgICAgICAgICAgY3RybCA9IGUuY3RybEtleSxcbiAgICAgICAgICAgICAgYWN0aXZpdHlJZCA9IGJwbW5FbGVtZW50LmlkLFxuICAgICAgICAgICAgICBhY3Rpdml0eUlkcyA9IGFuZ3VsYXIuY29weShuZXdGaWx0ZXIuYWN0aXZpdHlJZHMpIHx8IFtdLFxuICAgICAgICAgICAgICBpZHggPSBhY3Rpdml0eUlkcy5pbmRleE9mKGFjdGl2aXR5SWQpLFxuICAgICAgICAgICAgICBzZWxlY3RlZCA9IGlkeCAhPT0gLTE7XG5cbiAgICAgICAgICBpZiAoIWFjdGl2aXR5SWQpIHtcbiAgICAgICAgICAgIGFjdGl2aXR5SWRzID0gbnVsbDtcblxuICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGlmIChjdHJsKSB7XG4gICAgICAgICAgICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgIGFjdGl2aXR5SWRzLnNwbGljZShpZHgsIDEpO1xuXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWN0aXZpdHlJZHMucHVzaChhY3Rpdml0eUlkKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhY3Rpdml0eUlkcyA9IFsgYWN0aXZpdHlJZCBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5ld0ZpbHRlci5hY3Rpdml0eUlkcyA9IGFjdGl2aXR5SWRzO1xuXG4gICAgICAgICAgcHJvY2Vzc0RhdGEuc2V0KCdmaWx0ZXInLCBuZXdGaWx0ZXIpO1xuICAgICAgICB9O1xuXG4gICAgICB9XSxcbiAgICBwcmlvcml0eTogMjBcbiAgfSk7XG59XTtcbiJdfQ==","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incidentsTab.js":{"source":"(function (global){\n'use strict';\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar incidentsTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incidents-tab.html -->\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No incidents\\\">\\n  <table class=\\\"incidents-tab cam-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"message\\\">Message</th>\\n        <th class=\\\"timestamp\\\">Timestamp</th>\\n        <th class=\\\"activity\\\">Activity</th>\\n        <th class=\\\"cause instance-id uuid\\\">Cause Process Instance ID</th>\\n        <th class=\\\"cause-root instance-id uuid\\\">Root Cause Process Instance ID</th>\\n        <th class=\\\"type\\\">Type</th>\\n        <th class=\\\"action\\\">Action</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr ng-repeat=\\\"incident in incidents\\\">\\n        <td class=\\\"message\\\"\\n            ng-show=\\\"incident.incidentType === 'failedJob'\\\">\\n          <!--\\n            it would be great to be able to copy the stacktrace from here\\n            using the clipboard widget but it comes from an API endpoint...\\n          -->\\n          <a ng-if=\\\"incident.rootCauseIncidentMessage\\\"\\n             href=\\\"{{ getJobStacktraceUrl(incident) }}\\\"\\n             target=\\\"_blank\\\"\\n             tooltip=\\\"Open stacktrace in new window\\\"\\n             tooltip-placement=\\\"top\\\"\\n             class=\\\"auto-cutoff\\\">\\n            {{ incident.rootCauseIncidentMessage }}\\n          </a>\\n          <a ng-if=\\\"!incident.rootCauseIncidentMessage\\\"\\n             href=\\\"{{ getJobStacktraceUrl(incident) }}\\\"\\n             target=\\\"_blank\\\"\\n             tooltip=\\\"Open stacktrace in new window\\\"\\n             tooltip-placement=\\\"top\\\">\\n            <i>Message is null.</i>\\n          </a>\\n        </td>\\n        <td class=\\\"message\\\"\\n            ng-if=\\\"incident.incidentType !== 'failedJob' && incident.rootCauseIncidentMessage\\\">\\n          <div class=\\\"auto-cutoff\\\"\\n               cam-widget-clipboard=\\\"incident.rootCauseIncidentMessage\\\">\\n            {{ incident.rootCauseIncidentMessage }}\\n          </div>\\n        </td>\\n        <td class=\\\"message\\\"\\n            ng-if=\\\"incident.incidentType !== 'failedJob' && !incident.rootCauseIncidentMessage\\\">\\n          <i>Message is null.</i>\\n        </td>\\n\\n        <td class=\\\"timestamp\\\">\\n          {{ incident.incidentTimestamp }}\\n        </td>\\n\\n        <td class=\\\"activity\\\">\\n          <span ng-show=\\\"incident.linkable\\\"\\n                cam-widget-clipboard=\\\"incident.activityId\\\">\\n            <a ng-href=\\\"#/process-instance/{{ processInstance.id }}/runtime?activityIds={{ incident.activityId }}&amp;detailsTab=incidents-tab\\\">\\n              {{ incident.activityName }}\\n            </a>\\n          </span>\\n          <span ng-hide=\\\"incident.linkable\\\">\\n            {{ incident.activityName }}\\n          </span>\\n        </td>\\n\\n        <td class=\\\"cause instance-id\\\">\\n          <span ng-show=\\\"incident.causeIncidentProcessInstanceId !== incident.processInstanceId\\\"\\n                cam-widget-clipboard=\\\"incident.causeIncidentProcessInstanceId\\\">\\n            <a ng-href=\\\"#/process-instance/{{incident.causeIncidentProcessInstanceId}}/runtime?activityIds={{ incident.causeIncidentActivityId }}&amp;detailsTab=incidents-tab\\\">\\n              {{ incident.causeIncidentProcessInstanceId }}\\n            </a>\\n          </span>\\n        </td>\\n\\n        <td class=\\\"cause-root instance-id\\\">\\n          <span ng-show=\\\"incident.rootCauseIncidentProcessInstanceId !== incident.processInstanceId\\\"\\n                cam-widget-clipboard=\\\"incident.rootCauseIncidentProcessInstanceId\\\">\\n            <a ng-href=\\\"#/process-instance/{{incident.rootCauseIncidentProcessInstanceId}}/runtime?activityIds={{ incident.rootCauseIncidentActivityId }}&amp;detailsTab=incidents-tab\\\">\\n              {{ incident.rootCauseIncidentProcessInstanceId }}\\n            </a>\\n          </span>\\n        </td>\\n\\n        <td class=\\\"type\\\">\\n          {{ getIncidentType(incident) }}\\n        </td>\\n\\n        <td class=\\\"action\\\">\\n          <span ng-repeat=\\\"actionProvider in incidentActions\\\">\\n            <view provider=\\\"actionProvider\\\"\\n              vars=\\\"incidentVars\\\" />\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n\\n  <pagination ng-if=\\\"pages.total > pages.size\\\"\\n              class=\\\"pagination-sm\\\"\\n\\n              page=\\\"pages.current\\\"\\n              ng-model=\\\"pages.current\\\"\\n\\n              total-items=\\\"pages.total\\\"\\n              items-per-page=\\\"pages.size\\\"\\n\\n              max-size=\\\"7\\\"\\n              boundary-links=\\\"true\\\"></pagination>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incidents-tab.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.tab', {\n    id: 'incidents-tab',\n    label: 'Incidents',\n    template: incidentsTemplate,\n    controller: [\n      '$scope', '$http', '$modal', 'search', 'Uri', 'Views',\n      function($scope,   $http,   $modal,   search,   Uri, Views) {\n\n        // input: processInstance, processData\n\n        var incidentData = $scope.processData.newChild($scope);\n        var processInstance = $scope.processInstance;\n\n        var DEFAULT_PAGES = { size: 50, total: 0, current: 1 };\n\n        var pages = $scope.pages = angular.copy(DEFAULT_PAGES);\n\n        var filter = null;\n\n        $scope.$watch('pages.current', function(newValue, oldValue) {\n          if (newValue == oldValue) {\n            return;\n          }\n\n          search('page', !newValue || newValue == 1 ? null : newValue);\n        });\n\n        incidentData.observe([ 'filter', 'bpmnElements', 'activityIdToInstancesMap' ], function(newFilter, bpmnElements, activityIdToInstancesMap) {\n          pages.current = newFilter.page || 1;\n\n          updateView(newFilter, bpmnElements, activityIdToInstancesMap);\n        });\n\n        function updateView(newFilter, bpmnElements, activityIdToInstancesMap) {\n          filter = angular.copy(newFilter);\n\n          delete filter.page;\n          delete filter.activityInstanceIds;\n          delete filter.scrollToBpmnElement;\n\n          var page = pages.current,\n              count = pages.size,\n              firstResult = (page - 1) * count;\n\n          var defaultParams = {\n            processInstanceIdIn: [ processInstance.id ]\n          };\n\n          var pagingParams = {\n            firstResult: firstResult,\n            maxResults: count\n          };\n\n          var params = angular.extend({}, filter, defaultParams);\n\n          // fix missmatch -> activityIds -> activityIdIn\n          params.activityIdIn = params.activityIds;\n          delete params.activityIds;\n\n          $scope.incidents = null;\n\n          // get the 'count' of incidents\n          $http.post(Uri.appUri('plugin://base/:engine/incident/count'), params).success(function(data) {\n            pages.total = data.count;\n          });\n\n          // get the incidents\n          $scope.loadingState = 'LOADING';\n          $http.post(Uri.appUri('plugin://base/:engine/incident'), params, {params: pagingParams }).success(function(data) {\n            angular.forEach(data, function(incident) {\n              var activityId = incident.activityId;\n              var bpmnElement = bpmnElements[activityId];\n              incident.activityName = (bpmnElement && (bpmnElement.name || bpmnElement.id)) || activityId;\n              incident.linkable = bpmnElements[activityId] && activityIdToInstancesMap[activityId] && activityIdToInstancesMap[activityId].length > 0;\n            });\n\n            $scope.incidents = data;\n            $scope.loadingState = data.length ? 'LOADED' : 'EMPTY';\n          });\n        }\n\n        $scope.getIncidentType = function(incident) {\n          if (incident.incidentType === 'failedJob') {\n            return 'Failed Job';\n          }\n\n          return incident.incidentType;\n        };\n\n        $scope.getJobStacktraceUrl = function(incident) {\n          return Uri.appUri('engine://engine/:engine/job/' + incident.rootCauseIncidentConfiguration + '/stacktrace');\n        };\n\n        $scope.incidentVars = { read: ['incident', 'processData', 'filter']};\n        $scope.incidentActions = Views.getProviders({ component: 'cockpit.incident.action' });\n      }],\n    priority: 15\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryBulkAction.js":{"source":"'use strict';\n\n\n\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Increment Number of Retries</h3>\\n</div>\\n\\n<div class=\\\"job-retry-bulk modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <form name=\\\"selectFailedJobsForm\\\"\\n        ng-hide=\\\"status === 'finished' || status === 'performing'\\\">\\n    <fieldset>\\n      <p>Select one of the following failed jobs to increment their number of retries:</p>\\n      <div cam-widget-loader\\n           loading-state=\\\"{{ loadingState }}\\\"\\n           text-empty=\\\"There are no failed jobs available to increment their retries.\\\">\\n        <table class=\\\"cam-table\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"row-select\\\">\\n                <input type=\\\"checkbox\\\"\\n                       title=\\\"Select all\\\"\\n                       ng-model=\\\"allJobsSelected\\\"\\n                       ng-change=\\\"selectAllJobs(allJobsSelected)\\\">\\n              </th>\\n              <th class=\\\"job-id uuid\\\">ID</th>\\n              <th class=\\\"scope\\\">Scope</th>\\n              <th class=\\\"exception\\\">Exception</th>\\n            </tr>\\n          </thead>\\n\\n          <tbody>\\n            <tr ng-repeat=\\\"job in failedJobs\\\">\\n              <td class=\\\"row-select\\\">\\n                <input type=\\\"checkbox\\\"\\n                       ng-model=\\\"job.selected\\\"\\n                       ng-change=\\\"selectFailedJob(job)\\\">\\n              </td>\\n\\n              <td class=\\\"job-id uuid\\\">{{ job.id }}</td>\\n\\n              <td class=\\\"scope\\\">{{ job.instance.name }}</td>\\n\\n              <td class=\\\"exception\\\">{{ job.exceptionMessage }}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n\\n        <pagination ng-if=\\\"jobPages.total > jobPages.size\\\"\\n                    class=\\\"pagination-sm\\\"\\n\\n                    page=\\\"jobPages.current\\\"\\n                    ng-model=\\\"jobPages.current\\\"\\n\\n                    total-items=\\\"jobPages.total\\\"\\n                    items-per-page=\\\"jobPages.size\\\"\\n\\n                    max-size=\\\"7\\\"\\n                    boundary-links=\\\"true\\\"></pagination>\\n      </div>\\n    </fieldset>\\n  </form>\\n\\n  <div ng-show=\\\"status === 'finished' || status === 'performing'\\\">\\n\\n    <table class=\\\"cam-table\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"job-id uuid\\\">ID</th>\\n          <th class=\\\"scope\\\">Scope</th>\\n          <th class=\\\"status\\\">Status</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr ng-repeat=\\\"job in showJobsRetried\\\">\\n          <td class=\\\"job-id uuid\\\">{{ job.id }}</td>\\n\\n          <td class=\\\"scope\\\">{{ job.instance.name }}</td>\\n\\n          <td class=\\\"status\\\">\\n            <span ng-show=\\\"job.status && job.status === 'performing'\\\">\\n              <span class=\\\"glyphicon glyphicon-loading\\\"></span>\\n            </span>\\n            <span ng-show=\\\"job.status && job.status === 'successful'\\\">\\n              <span class=\\\"glyphicon glyphicon-ok\\\"></span>&nbsp;Successful\\n            </span>\\n            <span ng-show=\\\"job.status && job.status === 'failed'\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span>&nbsp;Failed\\n            </span>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n\\n    <pagination ng-if=\\\"summarizePages.total > summarizePages.size\\\"\\n                class=\\\"pagination-sm\\\"\\n\\n                page=\\\"summarizePages.current\\\"\\n                ng-model=\\\"summarizePages.current\\\"\\n\\n                total-items=\\\"summarizePages.total\\\"\\n                items-per-page=\\\"summarizePages.size\\\"\\n\\n                max-size=\\\"7\\\"\\n                boundary-links=\\\"true\\\"></pagination>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close()\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'performing'\\\">\\n    Close\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"retryFailedJobs(selectedFailedJobIds)\\\"\\n          ng-disabled=\\\"!failedJobs || !failedJobs.length || !selectedFailedJobIds.length\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'performing'\\\">\\n    Retry <span ng-if=\\\"selectedFailedJobIds.length > 1\\\">{{ selectedFailedJobIds.length }} jobs</span>\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close()\\\"\\n          ng-disabled=\\\"status === 'performing'\\\"\\n          ng-show=\\\"status === 'performing' || status === 'finished'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\\n\";\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\\n<a class=\\\"btn btn-default btn-toolbar\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Increment Number of Retries of Failed Jobs\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-repeat\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\\n\";\n\nmodule.exports = function(ngModule) {\n  ngModule.controller('JobRetryActionController', [\n    '$scope', '$modal',\n    function($scope,   $modal) {\n      $scope.openDialog = function() {\n        $modal.open({\n          resolve: {\n            processData: function() { return $scope.processData; },\n            processInstance: function() { return $scope.processInstance; }\n          },\n          size: 'lg',\n          controller: 'JobRetriesController',\n          template: dialogTemplate\n        });\n      };\n    }]);\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n    ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.action', {\n      id: 'job-retry-action',\n      label: 'Job Retry Action',\n      template: actionTemplate,\n      controller: 'JobRetryActionController',\n      priority: 15\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  ngModule.config(Configuration);\n};\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/cancelProcessInstanceAction.js":{"source":"'use strict';\n\n\n\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Cancel Process Instance</h3>\\n</div>\\n\\n<div class=\\\"cancel-process-instance modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'cancellationSuccess' || status === 'cancellationFailed' || status === 'beforeCancellation' || status === 'loadingFailed'\\\">\\n    <span class=\\\"glyphicon glyphicon-loading\\\"></span>\\n    loading process instance information...\\n  </div>\\n\\n  <p ng-show=\\\"status === 'loadingFailed'\\\">\\n    It was not possible to get further process instance informations to be able to cancel this process instance. Refresh the current page by pressing F5 and try once again to cancel this process instance.\\n  </p>\\n\\n  <div ng-show=\\\"status === 'beforeCancellation'\\\">\\n    <div ng-show=\\\"subProcessInstances.length > 0\\\">\\n      <p>\\n        If you cancel this process instance the following sub process instances will also be canceled:\\n      </p>\\n\\n      <table class=\\\"table cam-table\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"instance-id uuid\\\">ID</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr ng-repeat=\\\"subProcessInstance in subProcessInstances\\\">\\n            <td class=\\\"instance-id uuid\\\">\\n              <a target=\\\"_blank\\\"\\n                 ng-href=\\\"#/process-instance/{{ subProcessInstance.id }}\\\">\\n                {{ subProcessInstance.id }}\\n              </a>\\n            </td>\\n          </tr>\\n\\n          <tr>\\n            <td ng-hide=\\\"subProcessInstances.length === subProcessInstancesCount\\\">\\n              and {{ subProcessInstancesCount - subProcessInstances.length }} other process instances.\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <p>Do you really want to cancel this process instance?</p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'cancellationSuccess'\\\">\\n    <p>The process instance was canceled successfully.</p>\\n    <p>After closing this dialog you will be redirected to the corresponding process definition overview.</p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'cancellationFailed'\\\">\\n    <p>The process instance could not be canceled successfully.</p>\\n    <p>Maybe the process instance has already been cancelled or finished. Try to press F5 to refresh the page.</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'performCancellation'\\\"\\n          ng-hide=\\\"status === 'cancellationSuccess' || status === 'cancellationFailed' || status === 'loadingFailed'\\\">\\n    Close\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'cancellationSuccess' || status === 'cancellationFailed' || status === 'loadingFailed'\\\">\\n    OK\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"cancelProcessInstance()\\\"\\n          ng-disabled=\\\"status !== 'beforeCancellation'\\\"\\n          ng-hide=\\\"status === 'cancellationSuccess' || status === 'cancellationFailed' || status === 'loadingFailed'\\\">\\n    Cancel Process Instance\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\\n\";\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\\n<a class=\\\"btn btn-default btn-toolbar\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Cancel running process instance\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\\n\";\n\nmodule.exports = function(ngModule) {\n  ngModule.controller('CancelProcessInstanceActionController', [\n    '$scope', '$http', 'search', 'Uri', '$modal',\n    function($scope,   $http,   search,   Uri,   $modal) {\n\n      $scope.openDialog = function() {\n        $modal.open({\n          resolve: {\n            processData: function() { return $scope.processData; },\n            processInstance: function() { return $scope.processInstance; }\n          },\n          controller: 'CancelProcessInstanceController',\n          template: dialogTemplate\n        });\n      };\n    }]);\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n    ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.action', {\n      id: 'cancel-process-instance-action',\n      label: 'Cancel Process Instance Action',\n      template: actionTemplate,\n      controller: 'CancelProcessInstanceActionController',\n      priority: 20\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  ngModule.config(Configuration);\n};\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/updateSuspensionStateAction.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\\n<a class=\\\"btn btn-default btn-toolbar btn-suspend-action\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Suspend Process Instance\\\"\\n   tooltip-placement=\\\"left\\\"\\n   ng-show=\\\"!processInstance.suspended\\\">\\n  <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</a>\\n<a class=\\\"btn btn-default btn-toolbar\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Activate Process Instance\\\"\\n   tooltip-placement=\\\"left\\\"\\n   ng-hide=\\\"!processInstance.suspended\\\">\\n  <span class=\\\"glyphicon glyphicon-play\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\\n\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>{{ (processInstance.suspended ? 'Activate' : 'Suspend') }} Process Instance</h3>\\n</div>\\n\\n<div class=\\\"process-instance update-suspension-state modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n\\n    <div ng-show=\\\"processInstance.suspended\\\">\\n      <!-- activation -->\\n      <p>\\n        Activating a process instance means that the execution is running, so the <i>token state</i> will change.\\n      </p>\\n\\n      <p>\\n        Tasks belonging to this process instance will also be activated.\\n      </p>\\n\\n      <p>\\n        If a process instance is in the state active, the engine will also execute jobs associated with this process instance.\\n      </p>\\n\\n      <p>\\n        If this process instance have a process instance hierarchy, activating this process instance from the hierarchy will not activate other process instances from that hierarchy.\\n      </p>\\n\\n      <p>Do you really want to activate this process instance?</p>\\n    </div>\\n\\n    <div ng-hide=\\\"processInstance.suspended\\\">\\n      <!-- suspension -->\\n      <p>\\n        Suspending a process instance means that the execution is stopped, so the <i>token state</i> will not change. However, actions that do not change token state, like setting or removing variables, etc. will still succeed.\\n      </p>\\n\\n      <p>\\n        Tasks belonging to this process instance will also be suspended. This means that any actions influencing the tasks' lifecycles will fail, such as\\n        <ul>\\n          <li>claiming</li>\\n          <li>completing</li>\\n          <li>delegation</li>\\n          <li>changes in task assignees, owners, etc.</li>\\n        </ul>\\n        Actions that only change task properties will still succeed, such as changing variables.\\n      </p>\\n\\n      <p>\\n        If a process instance is in the state suspended, the engine will also not execute jobs associated with this process instance.\\n      </p>\\n\\n      <p>\\n        If this process instance have a process instance hierarchy, suspending this process instance from the hierarchy will not suspend other process instances from that hierarchy.\\n      </p>\\n\\n      <p>Do you really want to suspend this process instance?</p>\\n    </div>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'SUCCESS'\\\">\\n    <p ng-show=\\\"processInstance.suspended\\\">\\n      The suspension state of the process instance has been updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-hide=\\\"processInstance.suspended\\\">\\n      The suspension state of the process instance has been updated to \\\"suspended\\\" successfully.\\n    </p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FAIL'\\\">\\n    <p ng-show=\\\"processInstance.suspended\\\">\\n      The suspension state of the process instance could not be updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-hide=\\\"processInstance.suspended\\\">\\n      The suspension state of the process instance could not be updated to \\\"suspended\\\" successfully.\\n    </p>\\n  </div>\\n\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'PERFORM_UDPATE'\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">Close</button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"updateSuspensionState()\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"status === 'PERFORM_UDPATE'\\\">\\n    {{ (processInstance.suspended ? 'Activate' : 'Suspend') }}\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">OK</button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\\n\";\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.action', {\n    id: 'update-suspension-state-action',\n    label: 'Update Suspension State',\n    template:actionTemplate,\n    controller: [\n      '$scope', '$rootScope', '$modal',\n      function($scope,   $rootScope,   $modal) {\n\n        $scope.openDialog = function() {\n          var dialog = $modal.open({\n            resolve: {\n              processData: function() { return $scope.processData; },\n              processInstance: function() { return $scope.processInstance; }\n            },\n            controller: 'UpdateProcessInstanceSuspensionStateController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n\n            // dialog closed. YEA!\n            if (result.status === 'SUCCESS') {\n              $scope.processInstance.suspended = result.suspended;\n              $rootScope.$broadcast('$processInstance.suspensionState.changed', $scope.processInstance);\n\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n\n          });\n        };\n\n      }],\n    priority: 5\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/activityInstanceStatisticsOverlay.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/activity-instance-statistics-overlay.html -->\\n<span class=\\\"activity-bottom-left-position\\\"\\n      ng-show=\\\"activityInstanceStatistics\\\"\\n      ng-click=\\\"selectRunningInstances($event)\\\">\\n  <span class=\\\"badge\\\"\\n        tooltip=\\\"Running Activity Instances\\\"\\n        tooltip-placement=\\\"top\\\"\\n        tooltip-animation=\\\"false\\\"\\n        ng-show=\\\"activityInstanceStatistics.instances   && activityInstanceStatistics.instances.length ||\\n                 activityInstanceStatistics.instancesMI && activityInstanceStatistics.instancesMI.length\\\">\\n    {{ getInstanceCount() }}\\n  </span>\\n\\n  <span class=\\\"badge badge-important\\\"\\n        tooltip=\\\"Open Incidents\\\"\\n        tooltip-placement=\\\"top\\\"\\n        tooltip-animation=\\\"false\\\"\\n        ng-show=\\\"activityInstanceStatistics.incidents   && activityInstanceStatistics.incidents.length ||\\n                 activityInstanceStatistics.incidentsMI && activityInstanceStatistics.incidentsMI.length\\\">!</span>\\n</span>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/activity-instance-statistics-overlay.html -->\\n\";\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processInstance.diagram.overlay', {\n    id: 'activity-instance-statistics-overlay',\n    template: template,\n    controller: [\n      '$scope',\n      'Loaders',\n      function($scope, Loaders) {\n        var bpmnElement = $scope.bpmnElement,\n            processData = $scope.processData.newChild($scope);\n\n        var multiInstance;\n\n        var stopLoading = Loaders.startLoading();\n\n        $scope.activityInstanceStatistics = processData.observe([ 'activityIdToInstancesMap', 'activityIdToIncidentsMap'],\n          function(activityIdToInstancesMap, activityIdToIncidentsMap) {\n\n            var activityId = bpmnElement.id,\n                instances = angular.copy(activityIdToInstancesMap[activityId] || []),\n                incidents = angular.copy(activityIdToIncidentsMap[activityId] || []);\n\n            stopLoading();\n\n            multiInstance = activityIdToInstancesMap[activityId+'#multiInstanceBody'];\n\n            var instancesMI = activityIdToInstancesMap[activityId+'#multiInstanceBody'] || [];\n            var incidentsMI = activityIdToIncidentsMap[activityId+'#multiInstanceBody'] || [];\n\n            if (instances.length || incidents.length || instancesMI.length || incidentsMI.length) {\n              bpmnElement.isSelectable = true;\n            }\n\n            $scope.activityInstanceStatistics = { instances: instances, incidents: incidents, instancesMI: instancesMI, incidentsMI: incidentsMI };\n          });\n\n        var currentFilter = processData.observe('filter', function(filter) {\n          currentFilter = filter;\n        });\n\n        $scope.getInstanceCount = function() {\n          var count = 0;\n\n          if($scope.activityInstanceStatistics.instances) {\n            count += $scope.activityInstanceStatistics.instances.length || 0;\n          }\n          if($scope.activityInstanceStatistics.instancesMI) {\n            count += $scope.activityInstanceStatistics.instancesMI.filter(function(instance) {\n              return instance.isTransitionInstance;\n            }).length || 0;\n          }\n\n          return count;\n        };\n\n        $scope.selectRunningInstances = function(e) {\n          var newFilter = angular.copy(currentFilter),\n              ctrl = e.ctrlKey,\n              activityId = bpmnElement.id,\n              activityIds = angular.copy(newFilter.activityIds) || [],\n              idx = activityIds.indexOf(activityId),\n              selected = idx !== -1;\n\n          if (!activityId) {\n            activityIds = null;\n\n          } else {\n\n            if (ctrl) {\n              if (selected) {\n                activityIds.splice(idx, 1);\n                if(multiInstance) {\n                  activityIds.splice(activityIds.indexOf(activityId + '#multiInstanceBody'), 1);\n                }\n\n              } else {\n                activityIds.push(activityId);\n                if(multiInstance) {\n                  activityIds.push(activityId + '#multiInstanceBody');\n                }\n              }\n\n            } else {\n              activityIds = [ activityId ];\n              if(multiInstance) {\n                activityIds.push(activityId + '#multiInstanceBody');\n              }\n            }\n          }\n\n          newFilter.activityIds = activityIds;\n\n          processData.set('filter', newFilter);\n        };\n\n      }],\n    priority: 20\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3NPdmVybGF5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5cblxudmFyIHRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2FjdGl2aXR5LWluc3RhbmNlLXN0YXRpc3RpY3Mtb3ZlcmxheS5odG1sIC0tPlxcbjxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0eS1ib3R0b20tbGVmdC1wb3NpdGlvblxcXCJcXG4gICAgICBuZy1zaG93PVxcXCJhY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljc1xcXCJcXG4gICAgICBuZy1jbGljaz1cXFwic2VsZWN0UnVubmluZ0luc3RhbmNlcygkZXZlbnQpXFxcIj5cXG4gIDxzcGFuIGNsYXNzPVxcXCJiYWRnZVxcXCJcXG4gICAgICAgIHRvb2x0aXA9XFxcIlJ1bm5pbmcgQWN0aXZpdHkgSW5zdGFuY2VzXFxcIlxcbiAgICAgICAgdG9vbHRpcC1wbGFjZW1lbnQ9XFxcInRvcFxcXCJcXG4gICAgICAgIHRvb2x0aXAtYW5pbWF0aW9uPVxcXCJmYWxzZVxcXCJcXG4gICAgICAgIG5nLXNob3c9XFxcImFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlcyAgICYmIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlcy5sZW5ndGggfHxcXG4gICAgICAgICAgICAgICAgIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlc01JICYmIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlc01JLmxlbmd0aFxcXCI+XFxuICAgIHt7IGdldEluc3RhbmNlQ291bnQoKSB9fVxcbiAgPC9zcGFuPlxcblxcbiAgPHNwYW4gY2xhc3M9XFxcImJhZGdlIGJhZGdlLWltcG9ydGFudFxcXCJcXG4gICAgICAgIHRvb2x0aXA9XFxcIk9wZW4gSW5jaWRlbnRzXFxcIlxcbiAgICAgICAgdG9vbHRpcC1wbGFjZW1lbnQ9XFxcInRvcFxcXCJcXG4gICAgICAgIHRvb2x0aXAtYW5pbWF0aW9uPVxcXCJmYWxzZVxcXCJcXG4gICAgICAgIG5nLXNob3c9XFxcImFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluY2lkZW50cyAgICYmIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluY2lkZW50cy5sZW5ndGggfHxcXG4gICAgICAgICAgICAgICAgIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluY2lkZW50c01JICYmIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluY2lkZW50c01JLmxlbmd0aFxcXCI+ITwvc3Bhbj5cXG48L3NwYW4+XFxuPCEtLSAvIENFIC0gY2FtdW5kYS1icG0td2ViYXBwL3dlYmFwcC9zcmMvbWFpbi9yZXNvdXJjZXMtcGx1Z2luL2Jhc2UvYXBwL3ZpZXdzL3Byb2Nlc3NJbnN0YW5jZS9hY3Rpdml0eS1pbnN0YW5jZS1zdGF0aXN0aWNzLW92ZXJsYXkuaHRtbCAtLT5cXG5cIjtcbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xuXG52YXIgQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIFBsdWdpbkNvbmZpZ3VyYXRpb24oVmlld3NQcm92aWRlcikge1xuXG4gIFZpZXdzUHJvdmlkZXIucmVnaXN0ZXJEZWZhdWx0VmlldygnY29ja3BpdC5wcm9jZXNzSW5zdGFuY2UuZGlhZ3JhbS5vdmVybGF5Jywge1xuICAgIGlkOiAnYWN0aXZpdHktaW5zdGFuY2Utc3RhdGlzdGljcy1vdmVybGF5JyxcbiAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXG4gICAgY29udHJvbGxlcjogW1xuICAgICAgJyRzY29wZScsXG4gICAgICAnTG9hZGVycycsXG4gICAgICBmdW5jdGlvbigkc2NvcGUsIExvYWRlcnMpIHtcbiAgICAgICAgdmFyIGJwbW5FbGVtZW50ID0gJHNjb3BlLmJwbW5FbGVtZW50LFxuICAgICAgICAgICAgcHJvY2Vzc0RhdGEgPSAkc2NvcGUucHJvY2Vzc0RhdGEubmV3Q2hpbGQoJHNjb3BlKTtcblxuICAgICAgICB2YXIgbXVsdGlJbnN0YW5jZTtcblxuICAgICAgICB2YXIgc3RvcExvYWRpbmcgPSBMb2FkZXJzLnN0YXJ0TG9hZGluZygpO1xuXG4gICAgICAgICRzY29wZS5hY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljcyA9IHByb2Nlc3NEYXRhLm9ic2VydmUoWyAnYWN0aXZpdHlJZFRvSW5zdGFuY2VzTWFwJywgJ2FjdGl2aXR5SWRUb0luY2lkZW50c01hcCddLFxuICAgICAgICAgIGZ1bmN0aW9uKGFjdGl2aXR5SWRUb0luc3RhbmNlc01hcCwgYWN0aXZpdHlJZFRvSW5jaWRlbnRzTWFwKSB7XG5cbiAgICAgICAgICAgIHZhciBhY3Rpdml0eUlkID0gYnBtbkVsZW1lbnQuaWQsXG4gICAgICAgICAgICAgICAgaW5zdGFuY2VzID0gYW5ndWxhci5jb3B5KGFjdGl2aXR5SWRUb0luc3RhbmNlc01hcFthY3Rpdml0eUlkXSB8fCBbXSksXG4gICAgICAgICAgICAgICAgaW5jaWRlbnRzID0gYW5ndWxhci5jb3B5KGFjdGl2aXR5SWRUb0luY2lkZW50c01hcFthY3Rpdml0eUlkXSB8fCBbXSk7XG5cbiAgICAgICAgICAgIHN0b3BMb2FkaW5nKCk7XG5cbiAgICAgICAgICAgIG11bHRpSW5zdGFuY2UgPSBhY3Rpdml0eUlkVG9JbnN0YW5jZXNNYXBbYWN0aXZpdHlJZCsnI211bHRpSW5zdGFuY2VCb2R5J107XG5cbiAgICAgICAgICAgIHZhciBpbnN0YW5jZXNNSSA9IGFjdGl2aXR5SWRUb0luc3RhbmNlc01hcFthY3Rpdml0eUlkKycjbXVsdGlJbnN0YW5jZUJvZHknXSB8fCBbXTtcbiAgICAgICAgICAgIHZhciBpbmNpZGVudHNNSSA9IGFjdGl2aXR5SWRUb0luY2lkZW50c01hcFthY3Rpdml0eUlkKycjbXVsdGlJbnN0YW5jZUJvZHknXSB8fCBbXTtcblxuICAgICAgICAgICAgaWYgKGluc3RhbmNlcy5sZW5ndGggfHwgaW5jaWRlbnRzLmxlbmd0aCB8fCBpbnN0YW5jZXNNSS5sZW5ndGggfHwgaW5jaWRlbnRzTUkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGJwbW5FbGVtZW50LmlzU2VsZWN0YWJsZSA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICRzY29wZS5hY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljcyA9IHsgaW5zdGFuY2VzOiBpbnN0YW5jZXMsIGluY2lkZW50czogaW5jaWRlbnRzLCBpbnN0YW5jZXNNSTogaW5zdGFuY2VzTUksIGluY2lkZW50c01JOiBpbmNpZGVudHNNSSB9O1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBjdXJyZW50RmlsdGVyID0gcHJvY2Vzc0RhdGEub2JzZXJ2ZSgnZmlsdGVyJywgZnVuY3Rpb24oZmlsdGVyKSB7XG4gICAgICAgICAgY3VycmVudEZpbHRlciA9IGZpbHRlcjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJHNjb3BlLmdldEluc3RhbmNlQ291bnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgY291bnQgPSAwO1xuXG4gICAgICAgICAgaWYoJHNjb3BlLmFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlcykge1xuICAgICAgICAgICAgY291bnQgKz0gJHNjb3BlLmFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlcy5sZW5ndGggfHwgMDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYoJHNjb3BlLmFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzLmluc3RhbmNlc01JKSB7XG4gICAgICAgICAgICBjb3VudCArPSAkc2NvcGUuYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3MuaW5zdGFuY2VzTUkuZmlsdGVyKGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5pc1RyYW5zaXRpb25JbnN0YW5jZTtcbiAgICAgICAgICAgIH0pLmxlbmd0aCB8fCAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBjb3VudDtcbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuc2VsZWN0UnVubmluZ0luc3RhbmNlcyA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICB2YXIgbmV3RmlsdGVyID0gYW5ndWxhci5jb3B5KGN1cnJlbnRGaWx0ZXIpLFxuICAgICAgICAgICAgICBjdHJsID0gZS5jdHJsS2V5LFxuICAgICAgICAgICAgICBhY3Rpdml0eUlkID0gYnBtbkVsZW1lbnQuaWQsXG4gICAgICAgICAgICAgIGFjdGl2aXR5SWRzID0gYW5ndWxhci5jb3B5KG5ld0ZpbHRlci5hY3Rpdml0eUlkcykgfHwgW10sXG4gICAgICAgICAgICAgIGlkeCA9IGFjdGl2aXR5SWRzLmluZGV4T2YoYWN0aXZpdHlJZCksXG4gICAgICAgICAgICAgIHNlbGVjdGVkID0gaWR4ICE9PSAtMTtcblxuICAgICAgICAgIGlmICghYWN0aXZpdHlJZCkge1xuICAgICAgICAgICAgYWN0aXZpdHlJZHMgPSBudWxsO1xuXG4gICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgaWYgKGN0cmwpIHtcbiAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgYWN0aXZpdHlJZHMuc3BsaWNlKGlkeCwgMSk7XG4gICAgICAgICAgICAgICAgaWYobXVsdGlJbnN0YW5jZSkge1xuICAgICAgICAgICAgICAgICAgYWN0aXZpdHlJZHMuc3BsaWNlKGFjdGl2aXR5SWRzLmluZGV4T2YoYWN0aXZpdHlJZCArICcjbXVsdGlJbnN0YW5jZUJvZHknKSwgMSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWN0aXZpdHlJZHMucHVzaChhY3Rpdml0eUlkKTtcbiAgICAgICAgICAgICAgICBpZihtdWx0aUluc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgICBhY3Rpdml0eUlkcy5wdXNoKGFjdGl2aXR5SWQgKyAnI211bHRpSW5zdGFuY2VCb2R5Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGFjdGl2aXR5SWRzID0gWyBhY3Rpdml0eUlkIF07XG4gICAgICAgICAgICAgIGlmKG11bHRpSW5zdGFuY2UpIHtcbiAgICAgICAgICAgICAgICBhY3Rpdml0eUlkcy5wdXNoKGFjdGl2aXR5SWQgKyAnI211bHRpSW5zdGFuY2VCb2R5Jyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXdGaWx0ZXIuYWN0aXZpdHlJZHMgPSBhY3Rpdml0eUlkcztcblxuICAgICAgICAgIHByb2Nlc3NEYXRhLnNldCgnZmlsdGVyJywgbmV3RmlsdGVyKTtcbiAgICAgICAgfTtcblxuICAgICAgfV0sXG4gICAgcHJpb3JpdHk6IDIwXG4gIH0pO1xufTtcblxuQ29uZmlndXJhdGlvbi4kaW5qZWN0ID0gWydWaWV3c1Byb3ZpZGVyJ107XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uZmlndXJhdGlvbjtcbiJdfQ==","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incidentJobRetryAction.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openJobRetryDialog(incident)\\\"\\n   ng-show=\\\"incident.incidentType === 'failedJob' && incident.configuration\\\"\\n   tooltip=\\\"Increment Number of Retries of Failed Job\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-repeat\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Increment Number of Retries</h3>\\n</div>\\n\\n<div class=\\\"job-retry modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'finished' || status === 'failed'\\\">\\n    <p>The number of retries of the corresponding failed job of the selected incident will be incremented.</p>\\n    <p>Are you sure to increment the number of retries?</p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'finished'\\\">\\n    The number of retries of the corresponding failed job of the selected incident has been incremented successfully.\\n  </div>\\n\\n  <div ng-show=\\\"status === 'failed'\\\">\\n    The number of retries of the corresponding failed job of the selected incident could not be incremented successfully.\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'performing'\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'failed'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"incrementRetry()\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'failed'\\\"\\n          ng-disabled=\\\"status === 'performing'\\\">\\n    Retry\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'finished' || status === 'failed'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.incident.action', {\n    id: 'increase-incident-job-retry',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', 'search', '$modal',\n      function($scope, $rootScope, search, $modal) {\n\n        $scope.openJobRetryDialog = function(incident) {\n          var dialog = $modal.open({\n            resolve: {\n              incident: function() { return incident; }\n            },\n            controller: 'JobRetryController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n            if (result === 'finished') {\n              // refresh filter and all views\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n\n        };\n\n      }],\n    priority: 50\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvaW5jaWRlbnRKb2JSZXRyeUFjdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xudmFyIGFjdGlvblRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50LWpvYi1yZXRyeS1hY3Rpb24uaHRtbCAtLT5cXG48YSBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGFjdGlvbi1idXR0b25cXFwiXFxuICAgbmctY2xpY2s9XFxcIm9wZW5Kb2JSZXRyeURpYWxvZyhpbmNpZGVudClcXFwiXFxuICAgbmctc2hvdz1cXFwiaW5jaWRlbnQuaW5jaWRlbnRUeXBlID09PSAnZmFpbGVkSm9iJyAmJiBpbmNpZGVudC5jb25maWd1cmF0aW9uXFxcIlxcbiAgIHRvb2x0aXA9XFxcIkluY3JlbWVudCBOdW1iZXIgb2YgUmV0cmllcyBvZiBGYWlsZWQgSm9iXFxcIlxcbiAgIHRvb2x0aXAtcGxhY2VtZW50PVxcXCJsZWZ0XFxcIj5cXG4gIDxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLXJlcGVhdFxcXCI+PC9zcGFuPlxcbjwvYT5cXG48IS0tIC8gQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50LWpvYi1yZXRyeS1hY3Rpb24uaHRtbCAtLT5cIjtcbnZhciBkaWFsb2dUZW1wbGF0ZSA9IFwiPCEtLSAjIENFIC0gY2FtdW5kYS1icG0td2ViYXBwL3dlYmFwcC9zcmMvbWFpbi9yZXNvdXJjZXMtcGx1Z2luL2Jhc2UvYXBwL3ZpZXdzL3Byb2Nlc3NJbnN0YW5jZS9qb2ItcmV0cnktZGlhbG9nLmh0bWwgLS0+XFxuPGRpdiBjbGFzcz1cXFwibW9kYWwtaGVhZGVyXFxcIj5cXG4gIDxoMz5JbmNyZW1lbnQgTnVtYmVyIG9mIFJldHJpZXM8L2gzPlxcbjwvZGl2PlxcblxcbjxkaXYgY2xhc3M9XFxcImpvYi1yZXRyeSBtb2RhbC1ib2R5XFxcIj5cXG4gIDxkaXYgbm90aWZpY2F0aW9ucy1wYW5lbD48L2Rpdj5cXG5cXG4gIDxkaXYgbmctaGlkZT1cXFwic3RhdHVzID09PSAnZmluaXNoZWQnIHx8IHN0YXR1cyA9PT0gJ2ZhaWxlZCdcXFwiPlxcbiAgICA8cD5UaGUgbnVtYmVyIG9mIHJldHJpZXMgb2YgdGhlIGNvcnJlc3BvbmRpbmcgZmFpbGVkIGpvYiBvZiB0aGUgc2VsZWN0ZWQgaW5jaWRlbnQgd2lsbCBiZSBpbmNyZW1lbnRlZC48L3A+XFxuICAgIDxwPkFyZSB5b3Ugc3VyZSB0byBpbmNyZW1lbnQgdGhlIG51bWJlciBvZiByZXRyaWVzPzwvcD5cXG4gIDwvZGl2PlxcblxcbiAgPGRpdiBuZy1zaG93PVxcXCJzdGF0dXMgPT09ICdmaW5pc2hlZCdcXFwiPlxcbiAgICBUaGUgbnVtYmVyIG9mIHJldHJpZXMgb2YgdGhlIGNvcnJlc3BvbmRpbmcgZmFpbGVkIGpvYiBvZiB0aGUgc2VsZWN0ZWQgaW5jaWRlbnQgaGFzIGJlZW4gaW5jcmVtZW50ZWQgc3VjY2Vzc2Z1bGx5LlxcbiAgPC9kaXY+XFxuXFxuICA8ZGl2IG5nLXNob3c9XFxcInN0YXR1cyA9PT0gJ2ZhaWxlZCdcXFwiPlxcbiAgICBUaGUgbnVtYmVyIG9mIHJldHJpZXMgb2YgdGhlIGNvcnJlc3BvbmRpbmcgZmFpbGVkIGpvYiBvZiB0aGUgc2VsZWN0ZWQgaW5jaWRlbnQgY291bGQgbm90IGJlIGluY3JlbWVudGVkIHN1Y2Nlc3NmdWxseS5cXG4gIDwvZGl2PlxcblxcbjwvZGl2PlxcblxcbjxkaXYgY2xhc3M9XFxcIm1vZGFsLWZvb3RlclxcXCI+XFxuICA8YnV0dG9uIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHRcXFwiXFxuICAgICAgICAgIG5nLWNsaWNrPVxcXCJjbG9zZShzdGF0dXMpXFxcIlxcbiAgICAgICAgICBuZy1kaXNhYmxlZD1cXFwic3RhdHVzID09PSAncGVyZm9ybWluZydcXFwiXFxuICAgICAgICAgIG5nLWhpZGU9XFxcInN0YXR1cyA9PT0gJ2ZpbmlzaGVkJyB8fCBzdGF0dXMgPT09ICdmYWlsZWQnXFxcIj5cXG4gICAgQ2xvc2VcXG4gIDwvYnV0dG9uPlxcblxcbiAgPGJ1dHRvbiB0eXBlPVxcXCJzdWJtaXRcXFwiXFxuICAgICAgICAgIGNsYXNzPVxcXCJidG4gYnRuLXByaW1hcnlcXFwiXFxuICAgICAgICAgIG5nLWNsaWNrPVxcXCJpbmNyZW1lbnRSZXRyeSgpXFxcIlxcbiAgICAgICAgICBuZy1oaWRlPVxcXCJzdGF0dXMgPT09ICdmaW5pc2hlZCcgfHwgc3RhdHVzID09PSAnZmFpbGVkJ1xcXCJcXG4gICAgICAgICAgbmctZGlzYWJsZWQ9XFxcInN0YXR1cyA9PT0gJ3BlcmZvcm1pbmcnXFxcIj5cXG4gICAgUmV0cnlcXG4gIDwvYnV0dG9uPlxcblxcbiAgPGJ1dHRvbiBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5XFxcIlxcbiAgICAgICAgICBuZy1jbGljaz1cXFwiY2xvc2Uoc3RhdHVzKVxcXCJcXG4gICAgICAgICAgbmctc2hvdz1cXFwic3RhdHVzID09PSAnZmluaXNoZWQnIHx8IHN0YXR1cyA9PT0gJ2ZhaWxlZCdcXFwiPlxcbiAgICBPS1xcbiAgPC9idXR0b24+XFxuPC9kaXY+XFxuPCEtLSAvIENFIC0gY2FtdW5kYS1icG0td2ViYXBwL3dlYmFwcC9zcmMvbWFpbi9yZXNvdXJjZXMtcGx1Z2luL2Jhc2UvYXBwL3ZpZXdzL3Byb2Nlc3NJbnN0YW5jZS9qb2ItcmV0cnktZGlhbG9nLmh0bWwgLS0+XFxuXCI7XG5cbnZhciBDb25maWd1cmF0aW9uID0gZnVuY3Rpb24gUGx1Z2luQ29uZmlndXJhdGlvbihWaWV3c1Byb3ZpZGVyKSB7XG4gIFZpZXdzUHJvdmlkZXIucmVnaXN0ZXJEZWZhdWx0VmlldygnY29ja3BpdC5pbmNpZGVudC5hY3Rpb24nLCB7XG4gICAgaWQ6ICdpbmNyZWFzZS1pbmNpZGVudC1qb2ItcmV0cnknLFxuICAgIHRlbXBsYXRlOiBhY3Rpb25UZW1wbGF0ZSxcbiAgICBjb250cm9sbGVyOiBbXG4gICAgICAnJHNjb3BlJywgJyRyb290U2NvcGUnLCAnc2VhcmNoJywgJyRtb2RhbCcsXG4gICAgICBmdW5jdGlvbigkc2NvcGUsICRyb290U2NvcGUsIHNlYXJjaCwgJG1vZGFsKSB7XG5cbiAgICAgICAgJHNjb3BlLm9wZW5Kb2JSZXRyeURpYWxvZyA9IGZ1bmN0aW9uKGluY2lkZW50KSB7XG4gICAgICAgICAgdmFyIGRpYWxvZyA9ICRtb2RhbC5vcGVuKHtcbiAgICAgICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICAgICAgaW5jaWRlbnQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gaW5jaWRlbnQ7IH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnSm9iUmV0cnlDb250cm9sbGVyJyxcbiAgICAgICAgICAgIHRlbXBsYXRlOiBkaWFsb2dUZW1wbGF0ZVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgZGlhbG9nLnJlc3VsdC50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCA9PT0gJ2ZpbmlzaGVkJykge1xuICAgICAgICAgICAgICAvLyByZWZyZXNoIGZpbHRlciBhbmQgYWxsIHZpZXdzXG4gICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRGF0YS5zZXQoJ2ZpbHRlcicsIGFuZ3VsYXIuZXh0ZW5kKHt9LCAkc2NvcGUuZmlsdGVyKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgfTtcblxuICAgICAgfV0sXG4gICAgcHJpb3JpdHk6IDUwXG4gIH0pO1xufTtcblxuQ29uZmlndXJhdGlvbi4kaW5qZWN0ID0gWydWaWV3c1Byb3ZpZGVyJ107XG5cbm1vZHVsZS5leHBvcnRzID0gQ29uZmlndXJhdGlvbjtcbiJdfQ==","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incident-externalTask-retry-action.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openExternalTaskRetryDialog(incident)\\\"\\n   ng-show=\\\"incident.incidentType === 'failedExternalTask' && incident.configuration\\\"\\n   tooltip=\\\"Increment Number of Retries of Failed External Tasks\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-repeat\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Increment Number of Retries</h3>\\n</div>\\n\\n<div class=\\\"job-retry modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'finished' || status === 'failed'\\\">\\n    <p>The number of retries of the corresponding failed job of the selected incident will be incremented.</p>\\n    <p>Are you sure to increment the number of retries?</p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'finished'\\\">\\n    The number of retries of the corresponding failed job of the selected incident has been incremented successfully.\\n  </div>\\n\\n  <div ng-show=\\\"status === 'failed'\\\">\\n    The number of retries of the corresponding failed job of the selected incident could not be incremented successfully.\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'performing'\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'failed'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"incrementRetry()\\\"\\n          ng-hide=\\\"status === 'finished' || status === 'failed'\\\"\\n          ng-disabled=\\\"status === 'performing'\\\">\\n    Retry\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'finished' || status === 'failed'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.incident.action', {\n    id: 'increase-incident-external-task-retry',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', 'search', '$modal',\n      function($scope, $rootScope, search, $modal) {\n\n        $scope.openExternalTaskRetryDialog = function(incident) {\n          var dialog = $modal.open({\n            resolve: {\n              incident: function() { return incident; }\n            },\n            controller: 'ExternalTaskRetryController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n            if (result === 'finished') {\n              // refresh filter and all views\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n\n        };\n\n      }],\n    priority: 50\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvaW5jaWRlbnQtZXh0ZXJuYWxUYXNrLXJldHJ5LWFjdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xudmFyIGFjdGlvblRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50LWV4dGVybmFsLXRhc2stcmV0cnktYWN0aW9uLmh0bWwgLS0+XFxuPGEgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBhY3Rpb24tYnV0dG9uXFxcIlxcbiAgIG5nLWNsaWNrPVxcXCJvcGVuRXh0ZXJuYWxUYXNrUmV0cnlEaWFsb2coaW5jaWRlbnQpXFxcIlxcbiAgIG5nLXNob3c9XFxcImluY2lkZW50LmluY2lkZW50VHlwZSA9PT0gJ2ZhaWxlZEV4dGVybmFsVGFzaycgJiYgaW5jaWRlbnQuY29uZmlndXJhdGlvblxcXCJcXG4gICB0b29sdGlwPVxcXCJJbmNyZW1lbnQgTnVtYmVyIG9mIFJldHJpZXMgb2YgRmFpbGVkIEV4dGVybmFsIFRhc2tzXFxcIlxcbiAgIHRvb2x0aXAtcGxhY2VtZW50PVxcXCJsZWZ0XFxcIj5cXG4gIDxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLXJlcGVhdFxcXCI+PC9zcGFuPlxcbjwvYT5cXG48IS0tIC8gQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50LWV4dGVybmFsLXRhc2stcmV0cnktYWN0aW9uLmh0bWwgLS0+XCI7XG52YXIgZGlhbG9nVGVtcGxhdGUgPSBcIjwhLS0gIyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2Uvam9iLXJldHJ5LWRpYWxvZy5odG1sIC0tPlxcbjxkaXYgY2xhc3M9XFxcIm1vZGFsLWhlYWRlclxcXCI+XFxuICA8aDM+SW5jcmVtZW50IE51bWJlciBvZiBSZXRyaWVzPC9oMz5cXG48L2Rpdj5cXG5cXG48ZGl2IGNsYXNzPVxcXCJqb2ItcmV0cnkgbW9kYWwtYm9keVxcXCI+XFxuICA8ZGl2IG5vdGlmaWNhdGlvbnMtcGFuZWw+PC9kaXY+XFxuXFxuICA8ZGl2IG5nLWhpZGU9XFxcInN0YXR1cyA9PT0gJ2ZpbmlzaGVkJyB8fCBzdGF0dXMgPT09ICdmYWlsZWQnXFxcIj5cXG4gICAgPHA+VGhlIG51bWJlciBvZiByZXRyaWVzIG9mIHRoZSBjb3JyZXNwb25kaW5nIGZhaWxlZCBqb2Igb2YgdGhlIHNlbGVjdGVkIGluY2lkZW50IHdpbGwgYmUgaW5jcmVtZW50ZWQuPC9wPlxcbiAgICA8cD5BcmUgeW91IHN1cmUgdG8gaW5jcmVtZW50IHRoZSBudW1iZXIgb2YgcmV0cmllcz88L3A+XFxuICA8L2Rpdj5cXG5cXG4gIDxkaXYgbmctc2hvdz1cXFwic3RhdHVzID09PSAnZmluaXNoZWQnXFxcIj5cXG4gICAgVGhlIG51bWJlciBvZiByZXRyaWVzIG9mIHRoZSBjb3JyZXNwb25kaW5nIGZhaWxlZCBqb2Igb2YgdGhlIHNlbGVjdGVkIGluY2lkZW50IGhhcyBiZWVuIGluY3JlbWVudGVkIHN1Y2Nlc3NmdWxseS5cXG4gIDwvZGl2PlxcblxcbiAgPGRpdiBuZy1zaG93PVxcXCJzdGF0dXMgPT09ICdmYWlsZWQnXFxcIj5cXG4gICAgVGhlIG51bWJlciBvZiByZXRyaWVzIG9mIHRoZSBjb3JyZXNwb25kaW5nIGZhaWxlZCBqb2Igb2YgdGhlIHNlbGVjdGVkIGluY2lkZW50IGNvdWxkIG5vdCBiZSBpbmNyZW1lbnRlZCBzdWNjZXNzZnVsbHkuXFxuICA8L2Rpdj5cXG5cXG48L2Rpdj5cXG5cXG48ZGl2IGNsYXNzPVxcXCJtb2RhbC1mb290ZXJcXFwiPlxcbiAgPGJ1dHRvbiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0XFxcIlxcbiAgICAgICAgICBuZy1jbGljaz1cXFwiY2xvc2Uoc3RhdHVzKVxcXCJcXG4gICAgICAgICAgbmctZGlzYWJsZWQ9XFxcInN0YXR1cyA9PT0gJ3BlcmZvcm1pbmcnXFxcIlxcbiAgICAgICAgICBuZy1oaWRlPVxcXCJzdGF0dXMgPT09ICdmaW5pc2hlZCcgfHwgc3RhdHVzID09PSAnZmFpbGVkJ1xcXCI+XFxuICAgIENsb3NlXFxuICA8L2J1dHRvbj5cXG5cXG4gIDxidXR0b24gdHlwZT1cXFwic3VibWl0XFxcIlxcbiAgICAgICAgICBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5XFxcIlxcbiAgICAgICAgICBuZy1jbGljaz1cXFwiaW5jcmVtZW50UmV0cnkoKVxcXCJcXG4gICAgICAgICAgbmctaGlkZT1cXFwic3RhdHVzID09PSAnZmluaXNoZWQnIHx8IHN0YXR1cyA9PT0gJ2ZhaWxlZCdcXFwiXFxuICAgICAgICAgIG5nLWRpc2FibGVkPVxcXCJzdGF0dXMgPT09ICdwZXJmb3JtaW5nJ1xcXCI+XFxuICAgIFJldHJ5XFxuICA8L2J1dHRvbj5cXG5cXG4gIDxidXR0b24gY2xhc3M9XFxcImJ0biBidG4tcHJpbWFyeVxcXCJcXG4gICAgICAgICAgbmctY2xpY2s9XFxcImNsb3NlKHN0YXR1cylcXFwiXFxuICAgICAgICAgIG5nLXNob3c9XFxcInN0YXR1cyA9PT0gJ2ZpbmlzaGVkJyB8fCBzdGF0dXMgPT09ICdmYWlsZWQnXFxcIj5cXG4gICAgT0tcXG4gIDwvYnV0dG9uPlxcbjwvZGl2PlxcbjwhLS0gLyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2Uvam9iLXJldHJ5LWRpYWxvZy5odG1sIC0tPlxcblwiO1xuXG52YXIgQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIFBsdWdpbkNvbmZpZ3VyYXRpb24oVmlld3NQcm92aWRlcikge1xuICBWaWV3c1Byb3ZpZGVyLnJlZ2lzdGVyRGVmYXVsdFZpZXcoJ2NvY2twaXQuaW5jaWRlbnQuYWN0aW9uJywge1xuICAgIGlkOiAnaW5jcmVhc2UtaW5jaWRlbnQtZXh0ZXJuYWwtdGFzay1yZXRyeScsXG4gICAgdGVtcGxhdGU6IGFjdGlvblRlbXBsYXRlLFxuICAgIGNvbnRyb2xsZXI6IFtcbiAgICAgICckc2NvcGUnLCAnJHJvb3RTY29wZScsICdzZWFyY2gnLCAnJG1vZGFsJyxcbiAgICAgIGZ1bmN0aW9uKCRzY29wZSwgJHJvb3RTY29wZSwgc2VhcmNoLCAkbW9kYWwpIHtcblxuICAgICAgICAkc2NvcGUub3BlbkV4dGVybmFsVGFza1JldHJ5RGlhbG9nID0gZnVuY3Rpb24oaW5jaWRlbnQpIHtcbiAgICAgICAgICB2YXIgZGlhbG9nID0gJG1vZGFsLm9wZW4oe1xuICAgICAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgICAgICBpbmNpZGVudDogZnVuY3Rpb24oKSB7IHJldHVybiBpbmNpZGVudDsgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdFeHRlcm5hbFRhc2tSZXRyeUNvbnRyb2xsZXInLFxuICAgICAgICAgICAgdGVtcGxhdGU6IGRpYWxvZ1RlbXBsYXRlXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBkaWFsb2cucmVzdWx0LnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09PSAnZmluaXNoZWQnKSB7XG4gICAgICAgICAgICAgIC8vIHJlZnJlc2ggZmlsdGVyIGFuZCBhbGwgdmlld3NcbiAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NEYXRhLnNldCgnZmlsdGVyJywgYW5ndWxhci5leHRlbmQoe30sICRzY29wZS5maWx0ZXIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICB9O1xuXG4gICAgICB9XSxcbiAgICBwcmlvcml0eTogNTBcbiAgfSk7XG59O1xuXG5Db25maWd1cmF0aW9uLiRpbmplY3QgPSBbJ1ZpZXdzUHJvdmlkZXInXTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb25maWd1cmF0aW9uO1xuIl19","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/inputTable.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\\n<!-- <div ng-repeat=\\\"variable in variables\\\"\\n     cam-widget-variable\\n     cam-variable=\\\"variable\\\"\\n     display=\\\"true\\\">\\n</div> -->\\n\\n<div cam-widget-loader loading-state=\\\"{{loadingState}}\\\" text-empty=\\\"No inputs for this decision instance\\\">\\n  <div cam-widget-variables-table\\n       cam-editable=\\\"[]\\\"\\n       cam-variables=\\\"variables\\\"></div>\\n</div>\\n\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\\n\";\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.decisionInstance.tab', {\n    id: 'decision-input-table',\n    label: 'Inputs',\n    template: template,\n    controller: [\n      '$scope',\n      function($scope) {\n        $scope.loadingState = $scope.decisionInstance.inputs.length > 0 ? 'LOADED' : 'EMPTY';\n\n        $scope.variables = $scope.decisionInstance.inputs.map(function(variable) {\n          return {\n            variable: {\n              type: variable.type,\n              value: variable.value,\n              name: variable.clauseName || variable.clauseId,\n              valueInfo: variable.valueInfo\n            }\n          };\n        });\n      }],\n    priority: 20\n  });\n}];\n\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/outputTable.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\\n<!-- <div ng-repeat=\\\"variable in variables\\\"\\n     cam-widget-variable\\n     cam-variable=\\\"variable\\\"\\n     display=\\\"true\\\">\\n</div> -->\\n\\n<div cam-widget-variables-table\\n     cam-editable=\\\"[]\\\"\\n     cam-variables=\\\"variables\\\"></div>\\n\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\\n\";\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.decisionInstance.tab', {\n    id: 'decision-input-table',\n    label: 'Outputs',\n    template: template,\n    controller: [\n      '$scope',\n      function($scope) {\n\n        $scope.variables = $scope.decisionInstance.outputs.map(function(variable) {\n          return {\n            variable: {\n              type: variable.type,\n              value: variable.value,\n              name: variable.clauseName || variable.clauseId || variable.variableName,\n              valueInfo: variable.valueInfo\n            }\n          };\n        });\n      }],\n    priority: 10\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionSuspensionOverlay.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\\n<span class=\\\"badge badge-warning activity-top-right-position\\\"\\n      tooltip=\\\"Suspended Job Definition\\\"\\n      tooltip-placement=\\\"top\\\"\\n      ng-show=\\\"isSuspended()\\\">\\n  <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</span>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\\n\";\n\nvar Controller = [ '$scope', function($scope) {\n\n  var bpmnElement = $scope.bpmnElement,\n      processData = $scope.processData.newChild($scope);\n\n  processData.provide('jobDefinitionsForElement', ['jobDefinitions', function(jobDefinitions) {\n    var matchedDefinitions = [];\n    for(var i = 0; i < jobDefinitions.length; i++) {\n      var jobDefinition = jobDefinitions[i];\n      if (jobDefinition.activityId === bpmnElement.id) {\n        matchedDefinitions.push(jobDefinition);\n      }\n    }\n    return matchedDefinitions;\n  }]);\n\n  $scope.jobDefinitionsForElement = processData.observe('jobDefinitionsForElement', function(jobDefinitionsForElement) {\n    if (jobDefinitionsForElement.length > 0) {\n      bpmnElement.isSelectable = true;\n    }\n    $scope.jobDefinitionsForElement = jobDefinitionsForElement;\n  });\n\n  $scope.isSuspended = function() {\n    return $scope.jobDefinitionsForElement.filter &&\n             $scope.jobDefinitionsForElement.filter(function(jobDefinition) {\n               return jobDefinition.suspended;\n             }).length > 0;\n  };\n\n}];\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.diagram.overlay', {\n    id: 'job-definition-diagram-overlay',\n    template: template,\n    controller: Controller,\n    priority: 10\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/suspensionStateAction.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openSuspensionStateDialog(jobDefinition)\\\"\\n   ng-show=\\\"jobDefinition.suspended\\\"\\n   tooltip=\\\"Activate Job Definition\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-play\\\"></span>\\n</a>\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openSuspensionStateDialog(jobDefinition)\\\"\\n   ng-hide=\\\"jobDefinition.suspended\\\"\\n   tooltip=\\\"Suspend Job Definition\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\\n\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>{{ (jobDefinition.suspended ? 'Activate' : 'Suspend') }} Job Definition</h3>\\n</div>\\n\\n<div class=\\\"job-definition-suspension-state modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n\\n    <p ng-show=\\\"jobDefinition.suspended\\\">\\n      <!-- activation -->\\n      This job definition will be activated, so that new jobs based on this job definition are initially active.\\n    </p>\\n\\n    <p ng-hide=\\\"jobDefinition.suspended\\\">\\n      <!-- suspension -->\\n      This job definition will be suspended, so that new jobs based on this job definition are initially suspended.\\n    </p>\\n\\n    <form class=\\\"form-horizontal\\\"\\n          name=\\\"updateSuspensionStateForm\\\"\\n          novalidate\\n          request-aware\\n          ng-submit=\\\"updateSuspensionState()\\\">\\n\\n      <fieldset>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"includeJobsValue\\\">\\n            Include Existing Jobs\\n            <!-- activation -->\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Including jobs means that all existing jobs of this job definition will be activated too, if the value is set to true.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-show=\\\"jobDefinition.suspended\\\">\\n            </span>\\n\\n            <!-- suspension -->\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Including jobs means that all existing jobs of this job definition will be suspended too, if the value is set to true.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-hide=\\\"jobDefinition.suspended\\\">\\n            </span>\\n          </label>\\n\\n\\n          <div class=\\\"col-xs-8 checkbox\\\">\\n            <label>\\n              <input id=\\\"includeJobsValueId\\\"\\n                     name=\\\"includeJobsValue\\\"\\n                     type=\\\"checkbox\\\"\\n                     ng-model=\\\"data.includeJobs\\\" />\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"executeImmediately\\\">\\n            Execute\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Decide whether the activation of this job definition should be executed immediately or delayed. If the activation should happen delayed then an execution date must be provided on which the activation will be scheduled.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-show=\\\"jobDefinition.suspended\\\">\\n            </span>\\n\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Decide whether the suspension of this job definition should be executed immediately or delayed. If the suspension should happen delayed then an execution date must be provided on which the suspension will be scheduled.\\\"\\n                  tooltip-placement=\\\"right\\\"\\n                  ng-hide=\\\"jobDefinition.suspended\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"data.executeImmediately\\\"\\n                       ng-value=\\\"true\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Immediately\\n              </label>\\n            </div>\\n\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"data.executeImmediately\\\"\\n                       ng-value=\\\"false\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Delayed\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\"\\n             ng-show=\\\"!data.executeImmediately\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"executionDateValue\\\">\\n            Schedule at\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <input name=\\\"executionDateValue\\\"\\n                   ng-model=\\\"data.executionDate\\\"\\n                   class=\\\"form-control\\\"\\n                   type=\\\"text\\\"\\n                   date\\n                   required />\\n\\n            <p class=\\\"invalid\\\"\\n               ng-show=\\\"this.updateSuspensionStateForm.executionDateValue.$error.date\\\">\\n              Supported pattern 'yyyy-MM-ddTHH:mm:ss'.\\n            </p>\\n          </div>\\n        </div>\\n\\n      </fieldset>\\n    </form>\\n\\n    <p>\\n      Do you really want to {{ (jobDefinition.suspended ? 'activate' : 'suspend') }} this job definition?\\n    </p>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'SUCCESS'\\\">\\n    <p ng-show=\\\"jobDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the Job Definition has been updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"jobDefinition.suspended && !data.executeImmediately\\\">\\n      The activation of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\\n    </p>\\n    <p ng-show=\\\"!jobDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the Job Definition has been updated to \\\"suspended\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"!jobDefinition.suspended && !data.executeImmediately\\\">\\n      The suspension of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\\n    </p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FAIL'\\\">\\n    <p ng-show=\\\"jobDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the Job Definition could not be updated to \\\"active\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"jobDefinition.suspended && !data.executeImmediately\\\">\\n      The activation of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\\n    </p>\\n    <p ng-show=\\\"!jobDefinition.suspended && data.executeImmediately\\\">\\n      The suspension state of the Job Definition could not be updated to \\\"suspended\\\" successfully.\\n    </p>\\n    <p ng-show=\\\"!jobDefinition.suspended && !data.executeImmediately\\\">\\n      The suspension of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\\n    </p>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'PERFORM_UDPATE'\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"updateSuspensionState()\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PERFORM_UDPATE'\\\">\\n    {{ (jobDefinition.suspended ? 'Activate' : 'Suspend') }}\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.jobDefinition.action', {\n    id: 'update-suspension-state',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', 'search', '$modal',\n      function($scope, $rootScope, search, $modal) {\n\n        $scope.openSuspensionStateDialog = function(jobDefinition) {\n          var dialog = $modal.open({\n            resolve: {\n              jobDefinition: function() { return jobDefinition; }\n            },\n            controller: 'JobDefinitionSuspensionStateController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n            // dialog closed. YEA!\n            if (result.status === 'SUCCESS') {\n              if (result.executeImmediately) {\n                jobDefinition.suspended = result.suspended;\n                $rootScope.$broadcast('$jobDefinition.suspensionState.changed', $scope.jobDefinition);\n              }\n\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n\n        };\n\n      }],\n    priority: 50\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/override-job-priority/override-job-priority-action.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openDialog(jobDefinition)\\\"\\n   tooltip=\\\"Change Overriding Job Priority\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\\n\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Change Overriding Job Priority</h3>\\n</div>\\n\\n<div class=\\\"job-definition-override-job-priority modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n\\n    <p>Change the overriding priority for jobs of the given job definition.</p>\\n\\n    <form class=\\\"form-horizontal\\\"\\n          name=\\\"overrideJobPriorityForm\\\"\\n          novalidate\\n          request-aware\\n          ng-submit=\\\"isValid() && submit()\\\">\\n\\n      <fieldset>\\n\\n        <div class=\\\"form-group\\\" ng-show=\\\"hasOverridingJobPriority()\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"execute\\\">\\n            Execute\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Decide whether to clear the job definition's overriding job priority or to set a new priority as job definition's overriding job priority.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"setJobPriority\\\"\\n                       ng-value=\\\"false\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Clear Overriding Job Priority\\n              </label>\\n            </div>\\n\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"setJobPriority\\\"\\n                       ng-value=\\\"true\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Set Overriding Job Priority\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" ng-show=\\\"setJobPriority\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"priority\\\">\\n            Priority\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <input name=\\\"priority\\\"\\n                   ng-model=\\\"data.priority\\\"\\n                   class=\\\"form-control\\\"\\n                   numeric integer=\\\"true\\\"\\n                   required />\\n            <p class=\\\"invalid\\\"\\n               ng-show=\\\"this.overrideJobPriorityForm.priority.$error.numeric\\\">\\n              Invalid value: Only an Integer value is allowed.\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" ng-show=\\\"setJobPriority\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"includeJobsPriority\\\">\\n            Include Existing Jobs\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Including jobs means that all existing jobs of the given definition will receive the priority as well.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8 checkbox\\\">\\n            <label>\\n              <input name=\\\"includeJobsPriority\\\"\\n                     type=\\\"checkbox\\\"\\n                     ng-model=\\\"data.includeJobs\\\" />\\n            </label>\\n          </div>\\n        </div>\\n\\n      </fieldset>\\n    </form>\\n\\n    <p>\\n      Do you really want to change the overriding job priority?\\n    </p>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'SUCCESS'\\\">\\n    <p ng-show=\\\"setJobPriority\\\">\\n      The overriding job priority has been updated to {{ data.priority }} successfully.\\n    </p>\\n    <p ng-hide=\\\"setJobPriority\\\">\\n      The overriding job priority has been cleared successfully.\\n    </p>\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FAIL'\\\">\\n    <p ng-show=\\\"setJobPriority\\\">\\n      The overriding job priority could not be updated to {{ data.priority }} successfully.\\n    </p>\\n    <p ng-hide=\\\"setJobPriority\\\">\\n      The overriding job priority could not be cleared successfully.\\n    </p>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'PERFORM_UDPATE'\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"submit()\\\"\\n          ng-hide=\\\"setJobPriority || status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PERFORM_UDPATE'\\\">\\n    Clear\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"submit()\\\"\\n          ng-hide=\\\"!setJobPriority || status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PERFORM_UDPATE'\\\">\\n    Override\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.jobDefinition.action', {\n    id: 'job-definition-override-job-priority-action',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', '$modal',\n      function($scope,   $rootScope,   $modal) {\n\n        $scope.openDialog = function(jobDefinition) {\n          var dialog = $modal.open({\n            resolve: {\n              jobDefinition: function() { return jobDefinition; }\n            },\n            controller: 'JobDefinitionOverrideJobPriorityController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n            // dialog closed. YEA!\n            if (result.status === 'SUCCESS') {\n              $scope.processData.changed('jobDefinitions');\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n        };\n      }],\n    priority: 10\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.js":{"source":"(function (global){\n'use strict';\n\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\\n<a class=\\\"btn btn-default action-button\\\"\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Change Overriding Job Priority for all Job Definitions\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\\n\";\nvar dialogTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Change Overriding Job Priority</h3>\\n</div>\\n\\n<div class=\\\"job-definition-override-job-priority modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <div ng-hide=\\\"status === 'FINISHED'\\\">\\n\\n    <p>Change for each job definition associated to this process definition the overriding job priority.</p>\\n\\n    <form class=\\\"form-horizontal\\\"\\n          name=\\\"overrideJobPriorityForm\\\"\\n          novalidate\\n          request-aware\\n          ng-submit=\\\"isValid() && submit()\\\">\\n\\n      <fieldset>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"execute\\\">\\n            Execute\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Decide whether to clear the job definition's overriding job priority or to set a new priority as job definition's overriding job priority.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"setJobPriority\\\"\\n                       ng-value=\\\"false\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Clear Overriding Job Priority\\n              </label>\\n            </div>\\n\\n            <div class=\\\"radio\\\">\\n              <label>\\n                <input ng-model=\\\"setJobPriority\\\"\\n                       ng-value=\\\"true\\\"\\n                       type=\\\"radio\\\"\\n                       name=\\\"execute\\\" />\\n                Set Overriding Job Priority\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" ng-show=\\\"setJobPriority\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"priority\\\">\\n            Priority\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8\\\">\\n            <input name=\\\"priority\\\"\\n                   ng-model=\\\"data.priority\\\"\\n                   class=\\\"form-control\\\"\\n                   numeric integer=\\\"true\\\"\\n                   required />\\n            <p class=\\\"invalid\\\"\\n               ng-show=\\\"this.overrideJobPriorityForm.priority.$error.numeric\\\">\\n              Invalid value: Only an Integer value is allowed.\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" ng-show=\\\"setJobPriority\\\">\\n          <label class=\\\"col-xs-4 control-label\\\"\\n                 for=\\\"includeJobsPriority\\\">\\n            Include Existing Jobs\\n            <span class=\\\"glyphicon glyphicon-question-sign\\\"\\n                  tooltip=\\\"Including jobs means that all existing jobs of the given definition will receive the priority as well.\\\"\\n                  tooltip-placement=\\\"right\\\">\\n            </span>\\n          </label>\\n\\n          <div class=\\\"col-xs-8 checkbox\\\">\\n            <label>\\n              <input name=\\\"includeJobsPriority\\\"\\n                     type=\\\"checkbox\\\"\\n                     ng-model=\\\"data.includeJobs\\\" />\\n            </label>\\n          </div>\\n        </div>\\n\\n      </fieldset>\\n    </form>\\n\\n    <p>\\n      Do you really want to change the overriding job priority?\\n    </p>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FINISHED' || status === 'PERFORMING'\\\">\\n\\n    <table class=\\\"cam-table\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"job-id uuid\\\">Activity</th>\\n          <th class=\\\"scope\\\">Type</th>\\n          <th class=\\\"status\\\">Status</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr ng-repeat=\\\"jobDefinition in showJobDefinitions\\\">\\n          <td class=\\\"activity\\\">\\n            {{ jobDefinition.activityName }}\\n          </td>\\n          <td class=\\\"type\\\">\\n            {{ jobDefinition.jobType }}\\n          </td>\\n          <td class=\\\"status\\\">\\n            <span ng-show=\\\"jobDefinition.status && jobDefinition.status === 'PERFORMING'\\\">\\n              <span class=\\\"glyphicon glyphicon-loading\\\"></span>\\n            </span>\\n            <span ng-show=\\\"jobDefinition.status && jobDefinition.status === 'SUCCESS'\\\">\\n              <span class=\\\"glyphicon glyphicon-ok\\\"></span>&nbsp;Successful\\n            </span>\\n            <span ng-show=\\\"jobDefinition.status && jobDefinition.status === 'FAILED'\\\">\\n              <span class=\\\"glyphicon glyphicon-remove\\\"></span>&nbsp;Failed\\n            </span>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <pagination ng-if=\\\"summarizePages.total > summarizePages.size\\\"\\n                class=\\\"pagination-sm\\\"\\n\\n                page=\\\"summarizePages.current\\\"\\n                ng-model=\\\"summarizePages.current\\\"\\n\\n                total-items=\\\"summarizePages.total\\\"\\n                items-per-page=\\\"summarizePages.size\\\"\\n\\n                max-size=\\\"7\\\"\\n                boundary-links=\\\"true\\\"></pagination>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-disabled=\\\"status === 'PERFORMING'\\\"\\n          ng-hide=\\\"status === 'FINISHED'\\\">\\n    Close\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"submit()\\\"\\n          ng-hide=\\\"setJobPriority || status === 'FINISHED'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PEFORMING'\\\">\\n    Clear\\n  </button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"submit()\\\"\\n          ng-hide=\\\"!setJobPriority || status === 'FINISHED'\\\"\\n          ng-disabled=\\\"!isValid() || status === 'PERFORMING'\\\">\\n    Override\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close(status)\\\"\\n          ng-show=\\\"status === 'FINISHED'\\\">\\n    OK\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\\n\";\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.runtime.action', {\n    id: 'bulk-job-definition-override-job-priority-action',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$rootScope', '$modal',\n      function($scope,   $rootScope,   $modal) {\n\n        var processData = $scope.processData.newChild($scope);\n\n        var jobDefinitions;\n        processData.observe('jobDefinitions', function(_jobDefinitions) {\n          jobDefinitions = _jobDefinitions;\n        });\n\n        $scope.openDialog = function() {\n          var dialog = $modal.open({\n            resolve: {\n              jobDefinitions: function() { return jobDefinitions; }\n            },\n            controller: 'BulkJobDefinitionOverrideJobPriorityController',\n            template: dialogTemplate\n          });\n\n          dialog.result.then(function(result) {\n            // dialog closed. YEA!\n            if (result.status === 'FINISHED') {\n              processData.changed('jobDefinitions');\n              processData.set('filter', angular.extend({}, $scope.filter));\n            }\n          });\n        };\n      }],\n    priority: 10\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n\n    // override job priority action\n    overrideJobPriorityAction = require('./override-job-priority/override-job-priority-action'),\n    overrideJobPriorityDialog = require('./override-job-priority/override-job-priority-dialog'),\n\n    // bulk override job priority action\n    bulkOverrideJobPriorityAction = require('./bulk-override-job-priority/bulk-override-job-priority-action'),\n    bulkOverrideJobPriorityDialog = require('./bulk-override-job-priority/bulk-override-job-priority-dialog');\n\nvar ngModule = angular.module('cockpit.plugin.jobDefinition.actions', []);\n\n  // override job priority action\nngModule.config(overrideJobPriorityAction);\nngModule.controller('JobDefinitionOverrideJobPriorityController', overrideJobPriorityDialog);\n\n  // bulk override job priority action\nngModule.config(bulkOverrideJobPriorityAction);\nngModule.controller('BulkJobDefinitionOverrideJobPriorityController', bulkOverrideJobPriorityDialog);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9hY3Rpb25zL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKSxcblxuICAgIC8vIG92ZXJyaWRlIGpvYiBwcmlvcml0eSBhY3Rpb25cbiAgICBvdmVycmlkZUpvYlByaW9yaXR5QWN0aW9uID0gcmVxdWlyZSgnLi9vdmVycmlkZS1qb2ItcHJpb3JpdHkvb3ZlcnJpZGUtam9iLXByaW9yaXR5LWFjdGlvbicpLFxuICAgIG92ZXJyaWRlSm9iUHJpb3JpdHlEaWFsb2cgPSByZXF1aXJlKCcuL292ZXJyaWRlLWpvYi1wcmlvcml0eS9vdmVycmlkZS1qb2ItcHJpb3JpdHktZGlhbG9nJyksXG5cbiAgICAvLyBidWxrIG92ZXJyaWRlIGpvYiBwcmlvcml0eSBhY3Rpb25cbiAgICBidWxrT3ZlcnJpZGVKb2JQcmlvcml0eUFjdGlvbiA9IHJlcXVpcmUoJy4vYnVsay1vdmVycmlkZS1qb2ItcHJpb3JpdHkvYnVsay1vdmVycmlkZS1qb2ItcHJpb3JpdHktYWN0aW9uJyksXG4gICAgYnVsa092ZXJyaWRlSm9iUHJpb3JpdHlEaWFsb2cgPSByZXF1aXJlKCcuL2J1bGstb3ZlcnJpZGUtam9iLXByaW9yaXR5L2J1bGstb3ZlcnJpZGUtam9iLXByaW9yaXR5LWRpYWxvZycpO1xuXG52YXIgbmdNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnY29ja3BpdC5wbHVnaW4uam9iRGVmaW5pdGlvbi5hY3Rpb25zJywgW10pO1xuXG4gIC8vIG92ZXJyaWRlIGpvYiBwcmlvcml0eSBhY3Rpb25cbm5nTW9kdWxlLmNvbmZpZyhvdmVycmlkZUpvYlByaW9yaXR5QWN0aW9uKTtcbm5nTW9kdWxlLmNvbnRyb2xsZXIoJ0pvYkRlZmluaXRpb25PdmVycmlkZUpvYlByaW9yaXR5Q29udHJvbGxlcicsIG92ZXJyaWRlSm9iUHJpb3JpdHlEaWFsb2cpO1xuXG4gIC8vIGJ1bGsgb3ZlcnJpZGUgam9iIHByaW9yaXR5IGFjdGlvblxubmdNb2R1bGUuY29uZmlnKGJ1bGtPdmVycmlkZUpvYlByaW9yaXR5QWN0aW9uKTtcbm5nTW9kdWxlLmNvbnRyb2xsZXIoJ0J1bGtKb2JEZWZpbml0aW9uT3ZlcnJpZGVKb2JQcmlvcml0eUNvbnRyb2xsZXInLCBidWxrT3ZlcnJpZGVKb2JQcmlvcml0eURpYWxvZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmdNb2R1bGU7XG4iXX0=","deps":{"./override-job-priority/override-job-priority-dialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.js","./bulk-override-job-priority/bulk-override-job-priority-dialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.js","./override-job-priority/override-job-priority-action":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/override-job-priority/override-job-priority-action.js","./bulk-override-job-priority/bulk-override-job-priority-action":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\\n<div class=\\\"dashboard-row\\\">\\n  <section class=\\\"col-xs-12 col-md-6\\\">\\n    <div class=\\\"inner\\\">\\n      <header>\\n        <h1 class=\\\"section-title\\\">Assignments by type</h1>\\n      </header>\\n      <table class=\\\"cam-table values-left\\\" id=\\\"open-task-statistics\\\">\\n        <thead>\\n          <tr>\\n            <th>Tasks</th>\\n            <th>Type</th>\\n          </tr>\\n        </thead>\\n\\n        <tfoot>\\n          <tr>\\n            <th>\\n              <span ng-if=\\\"!openTasksState.$loaded\\\" class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span>\\n              <span ng-if=\\\"openTasksState.$loaded && !hasSearchPlugin\\\">{{ openTasksCount }}</span>\\n              <span ng-if=\\\"openTasksState.$loaded && hasSearchPlugin\\\">\\n                <a class=\\\"search-link\\\" ng-click=\\\"createSearch('allOpenTasks', 'statistics')\\\">{{ openTasksCount }}</a>\\n              </span>\\n            </th>\\n            <th>Total</th>\\n          </tr>\\n        </tfoot>\\n\\n        <tbody>\\n          <tr ng-repeat=\\\"taskStatistic in taskStatistics\\\">\\n            <th>\\n              <span ng-if=\\\"!taskStatistic.state.$loaded\\\" class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span>\\n              <span ng-if=\\\"taskStatistic.state.$loaded && !hasSearchPlugin\\\">{{ taskStatistic.count }}</span>\\n              <span ng-if=\\\"taskStatistic.state.$loaded && hasSearchPlugin\\\">\\n                <a class=\\\"search-link\\\" ng-click=\\\"createSearch(taskStatistic.search, 'statistics')\\\"> {{ taskStatistic.count }}</a>\\n              </span>\\n            </th>\\n            <td>{{ taskStatistic.label }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"col-xs-12 col-md-6\\\">\\n    <div class=\\\"inner\\\">\\n      <header>\\n        <h1 class=\\\"section-title\\\">Assignments by group</h1>\\n      </header>\\n      <table class=\\\"cam-table values-left\\\" id=\\\"task-group-counts\\\">\\n        <thead>\\n          <tr>\\n            <th>Tasks</th>\\n            <th>Group</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr ng-if=\\\"!taskGroupState.$loaded\\\">\\n            <td colspan=\\\"2\\\"><span class=\\\"glyphicon glyphicon-refresh animate-spin\\\"></span></td>\\n          </tr>\\n          <tr ng-if=\\\"taskGroupState.$loaded\\\" ng-repeat=\\\"taskGroup in taskGroups\\\">\\n            <td ng-if=\\\"!hasSearchPlugin\\\">{{ taskGroup.taskCount }}</td>\\n            <td ng-if=\\\"hasSearchPlugin\\\">\\n              <a class=\\\"search-link\\\" ng-click=\\\"createSearch(taskGroup.groupName, 'group')\\\">{{ taskGroup.taskCount }}</a>\\n            </td>\\n            <td>{{ formatGroupName(taskGroup.groupName) }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <p id=\\\"multiple-groups-info\\\" ng-if=\\\"taskGroupState.$loaded\\\">\\n        <span class=\\\"glyphicon glyphicon-info-sign\\\"></span>\\n        A task may have multiple groups.\\n      </p>\\n    </div>\\n  </section>\\n</div>\\n<!-- / CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\\n\";\n\nmodule.exports = ['ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.tasks.dashboard', {\n    id : 'task-dashboard',\n    label : 'Task Dashboard',\n    template : template,\n    controller : [\n      '$scope', '$q', 'Views', 'camAPI', 'dataDepend', 'search', 'Notifications',\n      function($scope, $q, Views, camAPI, dataDepend, search, Notifications) {\n\n        var tasksPluginData = dataDepend.create($scope);\n\n        var HistoryResource       = camAPI.resource('history'),\n            TaskReportResource = camAPI.resource('task-report');\n\n        $scope.taskStatistics = [\n          {\n            // assigned to users\n            'state' : undefined,\n            'label' : 'assigned to a user',\n            'count' : 0,\n            'search': 'openAssignedTasks'\n          },\n          {\n            // assigned to groups\n            'state' : undefined,\n            'label' : 'assigned to 1 or more groups',\n            'count' : 0,\n            'search': 'openGroupTasks'\n          },\n          {\n            // assigned neither to groups nor to users\n            'state' : undefined,\n            'label' : 'unassigned',\n            'count' : 0,\n            'search': 'openUnassignedTasks'\n          }\n        ];\n\n        // -- provide task data --------------\n        var provideResourceData = function(resourceName, resource, method, params) {\n          var deferred = $q.defer();\n\n          var resourceCallback = function(err, res) {\n            if (err) {\n              Notifications.addError({\n                status: 'Could not fetch the resource for \\'' + resourceName + '\\'',\n                message: err.toString()\n              });\n              deferred.reject(err);\n            } else {\n              deferred.resolve(res);\n            }\n          };\n\n          if (params == undefined || params == null) {\n            resource[method](resourceCallback);\n          } else {\n            resource[method](params, resourceCallback);\n          }\n\n          return deferred.promise;\n        };\n\n        var defaultParameter = function() {\n          return {\n            unfinished: true\n          };\n        };\n\n        tasksPluginData.provide('openTaskCount', function() {\n          return provideResourceData('Open tasks', HistoryResource, 'taskCount', defaultParameter());\n        });\n\n        tasksPluginData.provide('assignedToUserCount', function() {\n          var params = defaultParameter();\n          params.assigned = true;\n          return provideResourceData('Tasks assigned to users', HistoryResource, 'taskCount', params);\n        });\n\n        tasksPluginData.provide('assignedToGroupCount', function() {\n          var params = defaultParameter();\n          params.unassigned = true;\n          params.withCandidateGroups = true;\n          return provideResourceData('Tasks assigned to groups', HistoryResource, 'taskCount', params);\n        });\n\n        tasksPluginData.provide('notAssignedCount', function() {\n          var params = defaultParameter();\n          params.unassigned = true;\n          params.withoutCandidateGroups = true;\n          return provideResourceData('Unassigned tasks', HistoryResource, 'taskCount', params);\n        });\n\n        tasksPluginData.provide('countByCandidateGroup', function() {\n          return provideResourceData('Tasks per group', TaskReportResource, 'countByCandidateGroup');\n        });\n\n        // -- observe task data --------------\n\n        $scope.openTasksState = tasksPluginData.observe(['openTaskCount'], function(_count) {\n          $scope.openTasksCount = _count.count || 0;\n        });\n\n        $scope.taskStatistics[0].state = tasksPluginData.observe(['assignedToUserCount'], function(_userCount) {\n          $scope.taskStatistics[0].count = (_userCount.count) || 0;\n        });\n\n        $scope.taskStatistics[1].state = tasksPluginData.observe(['assignedToGroupCount'], function(_groupCount) {\n          $scope.taskStatistics[1].count = (_groupCount.count) || 0;\n        });\n\n        $scope.taskStatistics[2].state = tasksPluginData.observe(['notAssignedCount'], function(_notAssignedCount) {\n          $scope.taskStatistics[2].count = (_notAssignedCount.count) || 0;\n        });\n\n        $scope.taskGroupState = tasksPluginData.observe(['countByCandidateGroup'], function(_candidateGroupCounts) {\n          $scope.taskGroups = _candidateGroupCounts;\n        });\n\n        $scope.formatGroupName = function(name) {\n          return ( name == null ) ? 'without group' : name;\n        };\n\n        var taskDashboardPlugins = Views.getProviders({component: 'cockpit.tasks.dashboard'});\n        var hasSearchPlugin = $scope.hasSearchPlugin = taskDashboardPlugins.filter(function(plugin) {\n          return plugin.id === 'search-tasks';\n        }).length > 0;\n\n        // -- SEARCH PLUGIN REQUIRED ------\n        if (hasSearchPlugin) {\n          var addTermToSearch = function(type, operator, value) {\n            if(arguments.length < 3) {\n              operator = 'eq';\n              value = '';\n            }\n\n            return {\n              'type' : type,\n              'operator' : operator,\n              'value' : value,\n              'name' : ''\n            };\n          };\n\n          // we take all data from unfinished tasks for the open task dashboard\n          var resetSearch = function() {\n            return [ addTermToSearch('unfinished') ];\n          };\n\n          var searchLinks = resetSearch();\n\n          $scope.createSearch = function(identifier, group) {\n            if(group === 'statistics') {\n              switch (identifier) {\n              case 'openAssignedTasks':\n                searchLinks.push(addTermToSearch('assigned'));\n                break;\n              case 'openGroupTasks':\n                searchLinks.push(addTermToSearch('withCandidateGroups'));\n                searchLinks.push(addTermToSearch('unassigned'));\n                break;\n              case 'openUnassignedTasks':\n                searchLinks.push(addTermToSearch('withoutCandidateGroups'));\n                searchLinks.push(addTermToSearch('unassigned'));\n                break;\n              }\n            } else {\n              if(identifier != null) {\n                searchLinks.push(addTermToSearch('taskHadCandidateGroup', 'eq', identifier));\n              } else {\n                // without group!\n                searchLinks.push(addTermToSearch('withoutCandidateGroups'));\n                searchLinks.push(addTermToSearch('unassigned'));\n              }\n            }\n\n            search.updateSilently({ searchQuery: JSON.stringify(searchLinks) }, true);\n            searchLinks = resetSearch();\n          };\n\n          // prevents the initializer from overwriting the exisiting search\n          if(!search().hasOwnProperty('searchQuery')) {\n            search.updateSilently({ searchQuery: JSON.stringify(searchLinks) }, true);\n          }\n        }\n      }],\n\n    priority : 0\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/views/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n\n    // dashboard\n    taskDashboard = require('./dashboard/task-dashboard'),\n\n    ngModule = angular.module('cockpit.plugin.tasks.views', []);\n\nngModule.config(taskDashboard);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy90YXNrcy9hcHAvdmlld3MvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG5cbiAgICAvLyBkYXNoYm9hcmRcbiAgICB0YXNrRGFzaGJvYXJkID0gcmVxdWlyZSgnLi9kYXNoYm9hcmQvdGFzay1kYXNoYm9hcmQnKSxcblxuICAgIG5nTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2NvY2twaXQucGx1Z2luLnRhc2tzLnZpZXdzJywgW10pO1xuXG5uZ01vZHVsZS5jb25maWcodGFza0Rhc2hib2FyZCk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmdNb2R1bGU7XG4iXX0=","deps":{"./dashboard/task-dashboard":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/plugin.js":{"source":"(function (global){\n/**\n * @namespace cam.cockpit.plugin.tasks\n */\n'use strict';\n\nvar angular     = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    viewsModule = require('./views/main');\n\nmodule.exports = angular.module('cockpit.plugin.tasks', [viewsModule.name]);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy90YXNrcy9hcHAvcGx1Z2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZXNwYWNlIGNhbS5jb2NrcGl0LnBsdWdpbi50YXNrc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyICAgICA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKSxcbiAgICB2aWV3c01vZHVsZSA9IHJlcXVpcmUoJy4vdmlld3MvbWFpbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFuZ3VsYXIubW9kdWxlKCdjb2NrcGl0LnBsdWdpbi50YXNrcycsIFt2aWV3c01vZHVsZS5uYW1lXSk7XG4iXX0=","deps":{"./views/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/views/main.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/processInstanceTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\nvar paginationUtils = require('../../../../../../common/scripts/util/pagination-utils');\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\\n<div cam-widget-search\\n     cam-widget-search-valid-searches=\\\"searchConfig.searches\\\"\\n     cam-widget-search-translations=\\\"searchConfig.tooltips\\\"\\n     cam-widget-search-types=\\\"searchConfig.types\\\"\\n     cam-widget-search-operators=\\\"searchConfig.operators\\\"\\n     cam-widget-search-mode=\\\"filter\\\">\\n</div>\\n\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No process instances matched by current filter.\\\">\\n  <table class=\\\"process-instances cam-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"state\\\">State</th>\\n        <th class=\\\"instance-id\\\">ID</th>\\n        <th class=\\\"start-time\\\">Start Time</th>\\n        <th class=\\\"business-key\\\">Business Key</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr ng-repeat=\\\"processInstance in processInstances\\\">\\n        <td class=\\\"state\\\">\\n          <a state-circle\\n             incidents=\\\"processInstance.incidents\\\"\\n             ng-href=\\\"{{ getProcessInstanceUrl(processInstance, { detailsTab: 'incidents-tab' }) }}\\\"></a>\\n          <span class=\\\"badge badge-warning badge-suspended\\\"\\n                ng-show=\\\"processInstance.suspended\\\"\\n                tooltip=\\\"Currently suspended\\\"\\n                tooltip-placement=\\\"left\\\">\\n            <span class=\\\"glyphicon glyphicon-pause white\\\"></span>\\n          </span>\\n        </td>\\n\\n        <td class=\\\"instance-id\\\"\\n            cam-widget-clipboard=\\\"processInstance.id\\\">\\n          <a ng-href=\\\"{{ getProcessInstanceUrl(processInstance) }}\\\"\\n             title=\\\"{{ processInstance.id }}\\\">\\n            {{ processInstance.id }}\\n          </a>\\n        </td>\\n\\n        <td class=\\\"start-time\\\"\\n            cam-widget-clipboard=\\\"processInstance.startTime\\\">\\n          {{ processInstance.startTime | camDate }}\\n        </td>\\n\\n        <td class=\\\"business-key\\\"\\n            ng-if=\\\"processInstance.businessKey\\\"\\n            cam-widget-clipboard=\\\"processInstance.businessKey\\\">\\n          {{ processInstance.businessKey }}\\n        </td>\\n        <td class=\\\"business-key\\\"\\n            ng-if=\\\"!processInstance.businessKey\\\"></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <pagination ng-if=\\\"pages.total > pages.size\\\"\\n              class=\\\"pagination-sm\\\"\\n\\n              page=\\\"pages.current\\\"\\n              ng-model=\\\"pages.current\\\"\\n\\n              total-items=\\\"pages.total\\\"\\n              items-per-page=\\\"pages.size\\\"\\n\\n              max-size=\\\"7\\\"\\n              boundary-links=\\\"true\\\"></pagination>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\\n\";\nvar searchConfig = JSON.parse(\"{\\n  \\\"types\\\": [\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"businessKey\\\",\\n        \\\"value\\\": \\\"Business Key\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"activityIdIn\\\",\\n        \\\"value\\\": \\\"Activity ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"startedDate\\\",\\n        \\\"value\\\": \\\"Start Date\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"Before\\\",\\n          \\\"value\\\": \\\"before\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"After\\\",\\n          \\\"value\\\": \\\"after\\\"\\n        }\\n      ],\\n      \\\"allowDates\\\": true,\\n      \\\"enforceDates\\\": true\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"variables\\\",\\n        \\\"value\\\": \\\"Variable\\\"\\n      },\\n      \\\"extended\\\": true,\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"neq\\\",\\n          \\\"value\\\": \\\"!=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"gt\\\",\\n          \\\"value\\\": \\\">\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"gteq\\\",\\n          \\\"value\\\": \\\">=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"lt\\\",\\n          \\\"value\\\": \\\"<\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"lteq\\\",\\n          \\\"value\\\": \\\"<=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"like\\\",\\n          \\\"value\\\": \\\"like\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"operators\\\": {\\n    \\\"undefined\\\":  [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"string\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"number\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      }\\n    ],\\n    \\\"boolean\\\":    [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }\\n    ],\\n    \\\"object\\\":     [{\\n      \\\"key\\\": \\\"eq\\\",\\n      \\\"value\\\": \\\"=\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }],\\n    \\\"date\\\":     [{\\n      \\\"key\\\": \\\"lteq\\\",\\n      \\\"value\\\": \\\"before\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\"after\\\"\\n      }]\\n  },\\n  \\\"tooltips\\\": {\\n    \\\"inputPlaceholder\\\": \\\"Add criteria\\\",\\n    \\\"invalid\\\": \\\"This search query is not valid\\\",\\n    \\\"deleteSearch\\\": \\\"Remove search\\\",\\n    \\\"type\\\": \\\"Type\\\",\\n    \\\"name\\\": \\\"Property\\\",\\n    \\\"operator\\\": \\\"Operator\\\",\\n    \\\"value\\\": \\\"Value\\\"\\n  }\\n}\\n\");\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.runtime.tab', {\n    id: 'process-instances-table',\n    label: 'Process Instances',\n    template: template,\n    controller: [\n      '$scope', '$location', 'search', 'routeUtil', 'PluginProcessInstanceResource',\n      function($scope,   $location,   search,   routeUtil,   PluginProcessInstanceResource) {\n        var processDefinition = $scope.processDefinition;\n        var pages = paginationUtils.initializePaginationInController($scope, search, function(newValue, oldValue) {\n          if (!angular.equals(newValue, oldValue)) {\n            updateView($scope.searchConfig.searches);\n          }\n        });\n\n        $scope.searchConfig = angular.copy(searchConfig);\n\n        $scope.$watch('searchConfig.searches', function(newValue, oldValue) {\n          if (!angular.equals(newValue, oldValue)) {\n            updateView($scope.searchConfig.searches);\n          }\n        }, true);\n\n        function updateView(searches) {\n          var page = pages.current,\n              count = pages.size,\n              firstResult = (page - 1) * count;\n\n          var defaultParams = {\n            processDefinitionId: processDefinition.id\n          };\n\n          var pagingParams = {\n            firstResult: firstResult,\n            maxResults: count,\n            sortBy: 'startTime',\n            sortOrder: 'desc'\n          };\n\n          var query = searchWidgetUtils.createSearchQueryForSearchWidget(searches, ['activityIdIn']);\n          var params = angular.extend({}, query, pagingParams, defaultParams);\n\n          $scope.processInstances = null;\n          $scope.loadingState = 'LOADING';\n\n          PluginProcessInstanceResource.query(pagingParams, params).$promise.then(function(data) {\n            $scope.processInstances = data;\n            $scope.loadingState = data.length ? 'LOADED' : 'EMPTY';\n          });\n\n          var countParams = angular.extend({}, query, defaultParams);\n\n          PluginProcessInstanceResource.count(countParams).$promise.then(function(data) {\n            pages.total = data.count;\n          });\n        }\n\n        $scope.getProcessInstanceUrl = function(processInstance, params) {\n          var path = '#/process-instance/' + processInstance.id;\n          var searches = angular.extend({}, ($location.search() || {}), (params || {}));\n\n          var keepSearchParams = [ 'viewbox' ];\n          for (var i in params) {\n            keepSearchParams.push(i);\n          }\n\n          return routeUtil.redirectTo(path, searches, keepSearchParams);\n        };\n\n      }],\n    priority: 10\n  });\n}];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js","../../../../../../common/scripts/util/pagination-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/pagination-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/calledProcessInstanceTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No called process instances\\\">\\n  <table class=\\\"called-process-instance cam-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"called-process-instance\\\">Called Process Instance</th>\\n        <th class=\\\"process-definition\\\">Process Definition</th>\\n        <th class=\\\"activity\\\">Activity</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr ng-repeat=\\\"calledProcessInstance in calledProcessInstances\\\">\\n        <td class=\\\"called-process-instance\\\"\\n            cam-widget-clipboard=\\\"calledProcessInstance.id\\\">\\n          <a href=\\\"#/process-instance/{{ calledProcessInstance.id }}/runtime\\\">\\n            {{ calledProcessInstance.id }}\\n          </a>\\n        </td>\\n\\n        <td class=\\\"process-definition\\\"\\n            cam-widget-clipboard=\\\"calledProcessInstance.processDefinitionId\\\">\\n          <a href=\\\"#/process-definition/{{ calledProcessInstance.processDefinitionId }}/runtime?parentProcessDefinitionId={{ processInstance.definitionId }}\\\">\\n            {{ calledProcessInstance.processDefinitionName }}\\n          </a>\\n        </td>\\n\\n        <td class=\\\"activity\\\">\\n          <span ng-if=\\\"!!calledProcessInstance.instance\\\"\\n                cam-widget-clipboard=\\\"calledProcessInstance.instance.id\\\">\\n            <a ng-href=\\\"#/process-instance/{{ processInstance.id }}/runtime?detailsTab=called-process-instances-tab&{{ getSearchQueryForSearchType(calledProcessInstance.instance.id) }}\\\">\\n              {{ calledProcessInstance.instance.name }}\\n            </a>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\\n\";\n\nmodule.exports = function(ngModule) {\n  ngModule.controller('CalledProcessInstanceController', [\n    '$scope', 'PluginProcessInstanceResource',\n    function($scope,   PluginProcessInstanceResource) {\n\n        // input: processInstance, processData\n\n      var calledProcessInstanceData = $scope.processData.newChild($scope);\n        // var processInstance = $scope.processInstance;\n\n      var filter = null;\n\n      $scope.getSearchQueryForSearchType = searchWidgetUtils.getSearchQueryForSearchType.bind(null, 'activityInstanceIdIn');\n\n      calledProcessInstanceData.observe([ 'filter', 'instanceIdToInstanceMap' ], function(newFilter, instanceIdToInstanceMap) {\n        updateView(newFilter, instanceIdToInstanceMap);\n      });\n\n      function updateView(newFilter, instanceIdToInstanceMap) {\n        filter = angular.copy(newFilter);\n\n        delete filter.page;\n        delete filter.activityIds;\n        delete filter.scrollToBpmnElement;\n\n          // fix missmatch -> activityInstanceIds -> activityInstanceIdIn\n        filter.activityInstanceIdIn = filter.activityInstanceIds;\n        delete filter.activityInstanceIds;\n\n        $scope.calledProcessInstances = null;\n\n        $scope.loadingState = 'LOADING';\n        PluginProcessInstanceResource\n          .processInstances({\n            id: $scope.processInstance.id\n          }, filter)\n          .$promise.then(function(response) {\n\n            // angular.forEach(response.data, function (calledInstance) {\n            angular.forEach(response, function(calledInstance) {\n              var instance = instanceIdToInstanceMap[calledInstance.callActivityInstanceId];\n              calledInstance.instance = instance;\n            });\n\n            $scope.loadingState = response.length ? 'LOADED' : 'EMPTY';\n            $scope.calledProcessInstances = response;\n          });\n      }\n    }]);\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n    ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.tab', {\n      id: 'called-process-instances-tab',\n      label: 'Called Process Instances',\n      template: template,\n      controller: 'CalledProcessInstanceController',\n      priority: 10\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  ngModule.config(Configuration);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvY2FsbGVkUHJvY2Vzc0luc3RhbmNlVGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxudmFyIHNlYXJjaFdpZGdldFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vLi4vLi4vLi4vLi4vY29tbW9uL3NjcmlwdHMvdXRpbC9zZWFyY2gtd2lkZ2V0LXV0aWxzJyk7XG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcblxudmFyIHRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0luc3RhbmNlL2NhbGxlZC1wcm9jZXNzLWluc3RhbmNlLXRhYmxlLmh0bWwgLS0+XFxuPGRpdiBjYW0td2lkZ2V0LWxvYWRlclxcbiAgICAgbG9hZGluZy1zdGF0ZT1cXFwie3sgbG9hZGluZ1N0YXRlIH19XFxcIlxcbiAgICAgdGV4dC1lbXB0eT1cXFwiTm8gY2FsbGVkIHByb2Nlc3MgaW5zdGFuY2VzXFxcIj5cXG4gIDx0YWJsZSBjbGFzcz1cXFwiY2FsbGVkLXByb2Nlc3MtaW5zdGFuY2UgY2FtLXRhYmxlXFxcIj5cXG4gICAgPHRoZWFkPlxcbiAgICAgIDx0cj5cXG4gICAgICAgIDx0aCBjbGFzcz1cXFwiY2FsbGVkLXByb2Nlc3MtaW5zdGFuY2VcXFwiPkNhbGxlZCBQcm9jZXNzIEluc3RhbmNlPC90aD5cXG4gICAgICAgIDx0aCBjbGFzcz1cXFwicHJvY2Vzcy1kZWZpbml0aW9uXFxcIj5Qcm9jZXNzIERlZmluaXRpb248L3RoPlxcbiAgICAgICAgPHRoIGNsYXNzPVxcXCJhY3Rpdml0eVxcXCI+QWN0aXZpdHk8L3RoPlxcbiAgICAgIDwvdHI+XFxuICAgIDwvdGhlYWQ+XFxuXFxuICAgIDx0Ym9keT5cXG4gICAgICA8dHIgbmctcmVwZWF0PVxcXCJjYWxsZWRQcm9jZXNzSW5zdGFuY2UgaW4gY2FsbGVkUHJvY2Vzc0luc3RhbmNlc1xcXCI+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImNhbGxlZC1wcm9jZXNzLWluc3RhbmNlXFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJjYWxsZWRQcm9jZXNzSW5zdGFuY2UuaWRcXFwiPlxcbiAgICAgICAgICA8YSBocmVmPVxcXCIjL3Byb2Nlc3MtaW5zdGFuY2Uve3sgY2FsbGVkUHJvY2Vzc0luc3RhbmNlLmlkIH19L3J1bnRpbWVcXFwiPlxcbiAgICAgICAgICAgIHt7IGNhbGxlZFByb2Nlc3NJbnN0YW5jZS5pZCB9fVxcbiAgICAgICAgICA8L2E+XFxuICAgICAgICA8L3RkPlxcblxcbiAgICAgICAgPHRkIGNsYXNzPVxcXCJwcm9jZXNzLWRlZmluaXRpb25cXFwiXFxuICAgICAgICAgICAgY2FtLXdpZGdldC1jbGlwYm9hcmQ9XFxcImNhbGxlZFByb2Nlc3NJbnN0YW5jZS5wcm9jZXNzRGVmaW5pdGlvbklkXFxcIj5cXG4gICAgICAgICAgPGEgaHJlZj1cXFwiIy9wcm9jZXNzLWRlZmluaXRpb24ve3sgY2FsbGVkUHJvY2Vzc0luc3RhbmNlLnByb2Nlc3NEZWZpbml0aW9uSWQgfX0vcnVudGltZT9wYXJlbnRQcm9jZXNzRGVmaW5pdGlvbklkPXt7IHByb2Nlc3NJbnN0YW5jZS5kZWZpbml0aW9uSWQgfX1cXFwiPlxcbiAgICAgICAgICAgIHt7IGNhbGxlZFByb2Nlc3NJbnN0YW5jZS5wcm9jZXNzRGVmaW5pdGlvbk5hbWUgfX1cXG4gICAgICAgICAgPC9hPlxcbiAgICAgICAgPC90ZD5cXG5cXG4gICAgICAgIDx0ZCBjbGFzcz1cXFwiYWN0aXZpdHlcXFwiPlxcbiAgICAgICAgICA8c3BhbiBuZy1pZj1cXFwiISFjYWxsZWRQcm9jZXNzSW5zdGFuY2UuaW5zdGFuY2VcXFwiXFxuICAgICAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJjYWxsZWRQcm9jZXNzSW5zdGFuY2UuaW5zdGFuY2UuaWRcXFwiPlxcbiAgICAgICAgICAgIDxhIG5nLWhyZWY9XFxcIiMvcHJvY2Vzcy1pbnN0YW5jZS97eyBwcm9jZXNzSW5zdGFuY2UuaWQgfX0vcnVudGltZT9kZXRhaWxzVGFiPWNhbGxlZC1wcm9jZXNzLWluc3RhbmNlcy10YWIme3sgZ2V0U2VhcmNoUXVlcnlGb3JTZWFyY2hUeXBlKGNhbGxlZFByb2Nlc3NJbnN0YW5jZS5pbnN0YW5jZS5pZCkgfX1cXFwiPlxcbiAgICAgICAgICAgICAge3sgY2FsbGVkUHJvY2Vzc0luc3RhbmNlLmluc3RhbmNlLm5hbWUgfX1cXG4gICAgICAgICAgICA8L2E+XFxuICAgICAgICAgIDwvc3Bhbj5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgPC90cj5cXG4gICAgPC90Ym9keT5cXG4gIDwvdGFibGU+XFxuPC9kaXY+XFxuPCEtLSAvIENFIC0gY2FtdW5kYS1icG0td2ViYXBwL3dlYmFwcC9zcmMvbWFpbi9yZXNvdXJjZXMtcGx1Z2luL2Jhc2UvYXBwL3ZpZXdzL3Byb2Nlc3NJbnN0YW5jZS9jYWxsZWQtcHJvY2Vzcy1pbnN0YW5jZS10YWJsZS5odG1sIC0tPlxcblwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG5nTW9kdWxlKSB7XG4gIG5nTW9kdWxlLmNvbnRyb2xsZXIoJ0NhbGxlZFByb2Nlc3NJbnN0YW5jZUNvbnRyb2xsZXInLCBbXG4gICAgJyRzY29wZScsICdQbHVnaW5Qcm9jZXNzSW5zdGFuY2VSZXNvdXJjZScsXG4gICAgZnVuY3Rpb24oJHNjb3BlLCAgIFBsdWdpblByb2Nlc3NJbnN0YW5jZVJlc291cmNlKSB7XG5cbiAgICAgICAgLy8gaW5wdXQ6IHByb2Nlc3NJbnN0YW5jZSwgcHJvY2Vzc0RhdGFcblxuICAgICAgdmFyIGNhbGxlZFByb2Nlc3NJbnN0YW5jZURhdGEgPSAkc2NvcGUucHJvY2Vzc0RhdGEubmV3Q2hpbGQoJHNjb3BlKTtcbiAgICAgICAgLy8gdmFyIHByb2Nlc3NJbnN0YW5jZSA9ICRzY29wZS5wcm9jZXNzSW5zdGFuY2U7XG5cbiAgICAgIHZhciBmaWx0ZXIgPSBudWxsO1xuXG4gICAgICAkc2NvcGUuZ2V0U2VhcmNoUXVlcnlGb3JTZWFyY2hUeXBlID0gc2VhcmNoV2lkZ2V0VXRpbHMuZ2V0U2VhcmNoUXVlcnlGb3JTZWFyY2hUeXBlLmJpbmQobnVsbCwgJ2FjdGl2aXR5SW5zdGFuY2VJZEluJyk7XG5cbiAgICAgIGNhbGxlZFByb2Nlc3NJbnN0YW5jZURhdGEub2JzZXJ2ZShbICdmaWx0ZXInLCAnaW5zdGFuY2VJZFRvSW5zdGFuY2VNYXAnIF0sIGZ1bmN0aW9uKG5ld0ZpbHRlciwgaW5zdGFuY2VJZFRvSW5zdGFuY2VNYXApIHtcbiAgICAgICAgdXBkYXRlVmlldyhuZXdGaWx0ZXIsIGluc3RhbmNlSWRUb0luc3RhbmNlTWFwKTtcbiAgICAgIH0pO1xuXG4gICAgICBmdW5jdGlvbiB1cGRhdGVWaWV3KG5ld0ZpbHRlciwgaW5zdGFuY2VJZFRvSW5zdGFuY2VNYXApIHtcbiAgICAgICAgZmlsdGVyID0gYW5ndWxhci5jb3B5KG5ld0ZpbHRlcik7XG5cbiAgICAgICAgZGVsZXRlIGZpbHRlci5wYWdlO1xuICAgICAgICBkZWxldGUgZmlsdGVyLmFjdGl2aXR5SWRzO1xuICAgICAgICBkZWxldGUgZmlsdGVyLnNjcm9sbFRvQnBtbkVsZW1lbnQ7XG5cbiAgICAgICAgICAvLyBmaXggbWlzc21hdGNoIC0+IGFjdGl2aXR5SW5zdGFuY2VJZHMgLT4gYWN0aXZpdHlJbnN0YW5jZUlkSW5cbiAgICAgICAgZmlsdGVyLmFjdGl2aXR5SW5zdGFuY2VJZEluID0gZmlsdGVyLmFjdGl2aXR5SW5zdGFuY2VJZHM7XG4gICAgICAgIGRlbGV0ZSBmaWx0ZXIuYWN0aXZpdHlJbnN0YW5jZUlkcztcblxuICAgICAgICAkc2NvcGUuY2FsbGVkUHJvY2Vzc0luc3RhbmNlcyA9IG51bGw7XG5cbiAgICAgICAgJHNjb3BlLmxvYWRpbmdTdGF0ZSA9ICdMT0FESU5HJztcbiAgICAgICAgUGx1Z2luUHJvY2Vzc0luc3RhbmNlUmVzb3VyY2VcbiAgICAgICAgICAucHJvY2Vzc0luc3RhbmNlcyh7XG4gICAgICAgICAgICBpZDogJHNjb3BlLnByb2Nlc3NJbnN0YW5jZS5pZFxuICAgICAgICAgIH0sIGZpbHRlcilcbiAgICAgICAgICAuJHByb21pc2UudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuXG4gICAgICAgICAgICAvLyBhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UuZGF0YSwgZnVuY3Rpb24gKGNhbGxlZEluc3RhbmNlKSB7XG4gICAgICAgICAgICBhbmd1bGFyLmZvckVhY2gocmVzcG9uc2UsIGZ1bmN0aW9uKGNhbGxlZEluc3RhbmNlKSB7XG4gICAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IGluc3RhbmNlSWRUb0luc3RhbmNlTWFwW2NhbGxlZEluc3RhbmNlLmNhbGxBY3Rpdml0eUluc3RhbmNlSWRdO1xuICAgICAgICAgICAgICBjYWxsZWRJbnN0YW5jZS5pbnN0YW5jZSA9IGluc3RhbmNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICRzY29wZS5sb2FkaW5nU3RhdGUgPSByZXNwb25zZS5sZW5ndGggPyAnTE9BREVEJyA6ICdFTVBUWSc7XG4gICAgICAgICAgICAkc2NvcGUuY2FsbGVkUHJvY2Vzc0luc3RhbmNlcyA9IHJlc3BvbnNlO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1dKTtcblxuICB2YXIgQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIFBsdWdpbkNvbmZpZ3VyYXRpb24oVmlld3NQcm92aWRlcikge1xuICAgIFZpZXdzUHJvdmlkZXIucmVnaXN0ZXJEZWZhdWx0VmlldygnY29ja3BpdC5wcm9jZXNzSW5zdGFuY2UucnVudGltZS50YWInLCB7XG4gICAgICBpZDogJ2NhbGxlZC1wcm9jZXNzLWluc3RhbmNlcy10YWInLFxuICAgICAgbGFiZWw6ICdDYWxsZWQgUHJvY2VzcyBJbnN0YW5jZXMnLFxuICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxuICAgICAgY29udHJvbGxlcjogJ0NhbGxlZFByb2Nlc3NJbnN0YW5jZUNvbnRyb2xsZXInLFxuICAgICAgcHJpb3JpdHk6IDEwXG4gICAgfSk7XG4gIH07XG5cbiAgQ29uZmlndXJhdGlvbi4kaW5qZWN0ID0gWydWaWV3c1Byb3ZpZGVyJ107XG5cbiAgbmdNb2R1bGUuY29uZmlnKENvbmZpZ3VyYXRpb24pO1xufTtcbiJdfQ==","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/userTasksTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\nvar identityLinksTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3 class=\\\"modal-title\\\">{{ title }}</h3>\\n</div>\\n\\n<div class=\\\"identity-links modal-body\\\">\\n  <div notifications-panel></div>\\n\\n  <form name=\\\"editForm\\\"\\n        ng-submit=\\\"!invalid() && addItem()\\\">\\n    <fieldset ng-show=\\\"identityLinks.length\\\">\\n      <legend>{{ decorator.table.label }}</legend>\\n\\n      <table class=\\\"table cam-table\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"id\\\">{{ decorator.table.id }}</th>\\n            <th class=\\\"action text-right\\\">Action</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr ng-repeat=\\\"(delta, identityLink) in identityLinks\\\">\\n            <td class=\\\"id\\\">{{ identityLink[key] }}</td>\\n            <td class=\\\"action text-right\\\">\\n              <span class=\\\"btn btn-default action-button\\\"\\n                    ng-click=\\\"removeItem()\\\">\\n                <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </fieldset>\\n\\n    <fieldset>\\n      <legend>{{ decorator.add.label }}</legend>\\n\\n      <div class=\\\"input-group\\\">\\n        <input class=\\\"form-control\\\"\\n               type=\\\"text\\\"\\n               ng-model=\\\"newItem\\\"\\n               name=\\\"newItem\\\"\\n               required />\\n        <span class=\\\"btn btn-primary input-group-addon\\\"\\n              ng-click=\\\"addItem()\\\"\\n              ng-disabled=\\\"invalid()\\\">\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n        </span>\\n      </div>\\n    </fieldset>\\n  </form>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button ng-click=\\\"$dismiss()\\\"\\n          class=\\\"btn btn-default\\\">\\n    Close\\n  </button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\\n\";\nvar userTasksTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No user tasks\\\">\\n  <table class=\\\"process-instance user-tasks cam-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"activity uuid\\\">Activity</th>\\n        <th class=\\\"assignee\\\">Assignee</th>\\n        <th class=\\\"owner\\\">Owner</th>\\n        <th class=\\\"created\\\">Creation Date</th>\\n        <th class=\\\"due\\\">Due Date</th>\\n        <th class=\\\"follow-up\\\">Follow Up Date</th>\\n        <th class=\\\"priority\\\">Priority</th>\\n        <th class=\\\"delegation-state\\\">Delegation State</th>\\n        <th class=\\\"task-id uuid\\\">Task ID</th>\\n        <th class=\\\"action\\\">Action</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr ng-repeat=\\\"userTask in userTasks\\\">\\n        <td class=\\\"activity\\\">\\n          <a ng-href=\\\"{{ getHref(userTask) }}\\\">{{ userTask.instance.name || userTask.instance.id }}</a>\\n        </td>\\n\\n        <td class=\\\"assignee\\\">\\n          <cam-in-place-text-field\\n            submit=\\\"submitAssigneeChange\\\"\\n            context=\\\"userTask\\\"\\n            property=\\\"assignee\\\" />\\n        </td>\\n\\n        <td class=\\\"owner\\\">\\n          {{ userTask.owner }}\\n        </td>\\n\\n        <td class=\\\"created\\\">\\n          {{ userTask.created }}\\n        </td>\\n        <td class=\\\"due\\\">\\n          {{ userTask.due }}\\n        </td>\\n        <td class=\\\"follow-up\\\">\\n          {{ userTask.followUp }}\\n        </td>\\n        <td class=\\\"priority\\\">\\n          {{ userTask.priority }}\\n        </td>\\n        <td class=\\\"delegation-state\\\">\\n          {{ userTask.delegationState }}\\n        </td>\\n        <td class=\\\"task-id uuid\\\"\\n            cam-widget-clipboard=\\\"userTask.id\\\">\\n          {{ userTask.id }}\\n        </td>\\n\\n        <td class=\\\"action\\\">\\n          <a ng-click=\\\"changeGroupIdentityLinks()\\\"\\n             ng-model=\\\"userTask\\\"\\n             class=\\\"btn btn-default action-button change-group-identity-links\\\"\\n             tooltip-placement=\\\"left\\\"\\n             tooltip=\\\"Manage group(s) for '{{ userTask.name || userTask.id }}'\\\">\\n            <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n          </a>\\n          <a ng-click=\\\"changeUserIdentityLinks()\\\"\\n             ng-model=\\\"userTask\\\"\\n             class=\\\"btn btn-default action-button change-user-identity-links\\\"\\n             tooltip-placement=\\\"left\\\"\\n             tooltip=\\\"Manage user(s) for '{{ userTask.name || userTask.id }}'\\\">\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n\\n  <pagination ng-if=\\\"pages.total > pages.size\\\"\\n              class=\\\"pagination-sm\\\"\\n\\n              page=\\\"pages.current\\\"\\n              ng-model=\\\"pages.current\\\"\\n\\n              total-items=\\\"pages.total\\\"\\n              items-per-page=\\\"pages.size\\\"\\n\\n              max-size=\\\"7\\\"\\n              boundary-links=\\\"true\\\"></pagination>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\\n\";\n\nmodule.exports = function(ngModule) {\n\n    /**\n     * @name userTaskTable\n     * @memberof cam.cockpit.plugin.base.views\n     * @description ---\n     * @example\n        TODO\n     */\n\n    /**\n     * Map an array with a callback - similar to {@link http://underscorejs.org/#map|_.map()}\n     *\n     * @param {array} array   - the array on which iteration has to be performed\n     * @param {function} cb   - the function returning the new value for each array value\n     * @returns {array}       - a new array with the values produced\n     */\n  function map(array, cb) {\n    var newArray = [];\n    angular.forEach(array, function(val, key) {\n      newArray[key] = cb(val, key);\n    });\n    return newArray;\n  }\n\n    /**\n     * Removes \"empty\" values of an array - {@link http://underscorejs.org/#compact|_.compact()}\n     *\n     * @param {array} array   - the original array\n     * @returns {array}       - a new array with the values produced\n     */\n  function compact(array) {\n    var newArray = [];\n    angular.forEach(array, function(val) {\n      if (val) {\n        newArray.push(val);\n      }\n    });\n    return newArray;\n  }\n\n    /**\n     * Ensure a function\n     *\n     * @param {?function} func - the original function\n     * @returns {function}     - a function\n     */\n  function ensureCallback(func) {\n    return angular.isFunction(func) ? func : angular.noop;\n  }\n\n  ngModule.controller('UserTaskController', [\n    '$scope', 'search', 'camAPI', 'TaskResource', 'Notifications', '$modal',\n    function($scope,   search,   camAPI,   TaskResource,   Notifications,   $modal) {\n\n      // input: processInstance, processData\n\n      var userTaskData = $scope.processData.newChild($scope),\n          processInstance = $scope.processInstance,\n          taskIdIdToExceptionMessageMap,\n          taskCopies;\n\n      var DEFAULT_PAGES = { size: 50, total: 0, current: 1 };\n\n      var pages = $scope.pages = angular.copy(DEFAULT_PAGES);\n\n      var filter = null;\n\n      var Task = camAPI.resource('task');\n\n      $scope.getSearchQueryForSearchType = searchWidgetUtils.getSearchQueryForSearchType.bind(null, 'activityInstanceIdIn');\n\n      $scope.$watch('pages.current', function(newValue, oldValue) {\n        if (newValue == oldValue) {\n          return;\n        }\n\n        search('page', !newValue || newValue == 1 ? null : newValue);\n      });\n\n      userTaskData.observe([ 'filter', 'executionIdToInstanceMap' ], function(newFilter, executionIdToInstanceMap) {\n        pages.current = newFilter.page || 1;\n\n        updateView(newFilter, executionIdToInstanceMap);\n      });\n\n      function updateView(newFilter, executionIdToInstanceMap) {\n        filter = angular.copy(newFilter);\n\n        delete filter.page;\n        delete filter.activityIds;\n        delete filter.scrollToBpmnElement;\n\n        var page = pages.current,\n            count = pages.size,\n            firstResult = (page - 1) * count;\n\n        var defaultParams = {\n          processInstanceId: processInstance.id,\n          processDefinitionId: processInstance.definitionId\n        };\n\n        var pagingParams = {\n          firstResult: firstResult,\n          maxResults: count\n        };\n\n        var params = angular.extend({}, filter, defaultParams);\n\n        // fix missmatch -> activityInstanceIds -> activityInstanceIdIn\n        params.activityInstanceIdIn = params.activityInstanceIds;\n        delete params.activityInstanceIds;\n\n        $scope.userTasks = null;\n        $scope.loadingState = 'LOADING';\n\n        taskIdIdToExceptionMessageMap = {};\n        taskCopies = {};\n\n        TaskResource.count(params).$promise.then(function(response) {\n          pages.total = response.count;\n        });\n\n        TaskResource.query(pagingParams, params).$promise.then(function(response) {\n          for (var i = 0, task; (task = response[i]); i++) {\n            task.instance = executionIdToInstanceMap[task.executionId];\n            taskCopies[task.id] = angular.copy(task);\n          }\n\n          $scope.userTasks = response;\n          $scope.loadingState = response.length ? 'LOADED' : 'EMPTY';\n        });\n\n      }\n\n      $scope.getHref = function(userTask) {\n        if(userTask.instance) {\n          return '#/process-instance/' + processInstance.id + '/runtime?detailsTab=user-tasks-tab&' +\n            $scope.getSearchQueryForSearchType(userTask.instance.id);\n        }\n\n        return '';\n      };\n\n      $scope.submitAssigneeChange = function(editForm, cb) {\n        cb = ensureCallback(cb);\n\n        var userTask = editForm.context;\n        var copy = taskCopies[userTask.id];\n        var defaultParams = {id: userTask.id};\n        var params = {userId : editForm.value};\n\n        TaskResource.setAssignee(defaultParams, params).$promise.then(\n          // success\n          function(response) {\n            var assignee = copy.assignee = userTask.assignee = response.userId;\n\n            var message;\n            if (assignee) {\n              message = 'The assignee of the user task \\'' +\n                         userTask.instance.name +\n                         '\\' has been set to \\'' +\n                         copy.assignee + '\\' successfully.';\n            }\n            else {\n              message = 'The assignee of the user task \\'' +\n                         userTask.instance.name +\n                         '\\' has been reseted successfully.';\n            }\n\n            Notifications.addMessage({\n              status: 'Assignee',\n              message: message,\n              duration: 5000\n            });\n\n            cb();\n          },\n\n          // error\n          function(error) {\n            var message;\n            if (userTask.assignee) {\n              message = 'The assignee of the user task \\'' +\n                         userTask.instance.name +\n                         '\\' could not be set to \\'' + userTask.assignee +\n                         '\\'. ' + error.data.message;\n            }\n            else {\n              message = 'The assignee of the user task \\'' +\n                         userTask.instance.name +\n                         '\\' could not be reseted. ' + error.data.message;\n            }\n\n            var err = {\n              status: 'Assignee',\n              message: message,\n              exclusive: true\n            };\n\n            userTask.assignee = copy.assignee;\n\n            Notifications.addError(err);\n            taskIdIdToExceptionMessageMap[userTask.id] = error.data;\n            cb(err);\n          }\n        );\n      };\n\n      $scope.openDialog = function(userTask, decorator) {\n\n        // 1. load the identityLinks\n        Task.identityLinks(userTask.id, function(err, response) {\n\n          // 2. filter the response.data to exclude links\n          var identityLinks = compact(map(response, function(item) {\n            var ok = item[decorator.key] && item.type !== 'assignee' && item.type !== 'owner';\n            return ok ? item : null;\n          }));\n\n          // 3. open a dialog\n          $modal.open({\n            resolve: {\n              userTask: function() { return userTask; },\n              identityLinks: function() { return identityLinks; },\n              decorator: function() { return decorator; }\n            },\n            controller: 'IdentityLinksController',\n            template: identityLinksTemplate,\n            windowClass:  'identity-link-modal'\n          });\n        });\n\n      };\n\n      $scope.changeGroupIdentityLinks = function() {\n        var userTask = this.userTask;\n\n        $scope.openDialog(userTask, {\n          title: 'Manage groups',\n          table: {\n            label: 'Current group(s)',\n            id: 'Group ID'\n          },\n          add: {\n            label: 'Add a group'\n          },\n          notifications: {\n            remove: 'Could not remove group',\n            add: 'Could not add group'\n          },\n          key: 'groupId'\n        });\n      };\n\n      $scope.changeUserIdentityLinks = function() {\n        var userTask = this.userTask;\n\n        $scope.openDialog(userTask, {\n          title: 'Manage users',\n          table: {\n            label: 'Current user(s)',\n            id: 'User ID'\n          },\n          add: {\n            label: 'Add a user'\n          },\n          notifications: {\n            remove: 'Could not remove user',\n            add: 'Could not add user'\n          },\n          key: 'userId'\n        });\n      };\n\n      $scope.getExceptionForUserTask = function(userTask) {\n        return taskIdIdToExceptionMessageMap[userTask.id];\n      };\n\n    }]);\n\n  ngModule.controller('IdentityLinksController', [\n    '$modalInstance', 'camAPI', '$scope', 'Notifications', 'userTask', 'identityLinks', 'decorator',\n    function($modalInstance,   camAPI,   $scope,   Notifications,   userTask,   identityLinks,   decorator) {\n\n      var Task = camAPI.resource('task');\n\n      $scope.identityLinks = identityLinks;\n      $scope.decorator = decorator;\n\n      $scope.title = decorator.title;\n      var key = $scope.key = decorator.key;\n\n      $scope.$on('$routeChangeStart', function() {\n        $modalInstance.close();\n      });\n\n      $scope.removeItem = function() {\n        var delta = this.delta;\n\n        Task.identityLinksDelete(userTask.id, this.identityLink, function(err) {\n\n          if (err) {\n            return Notifications.addError({\n              status: decorator.notifications.remove,\n              message: err.message,\n              exclusive: true\n            });\n          }\n\n          // deleting an entry is not enough, we need to \"rebuild\" the identiy links\n          identityLinks = $scope.identityLinks = compact(map(identityLinks, function(g, d) {\n            return delta !== d ? g : false;\n          }));\n\n        });\n      };\n\n      $scope.invalid = function() {\n        var editForm = this.editForm;\n\n        if (editForm.$invalid) {\n          return true;\n        }\n\n        var exists;\n        var newItem = editForm.newItem.$modelValue;\n        angular.forEach(identityLinks, function(identityLink) {\n          exists = (exists || (identityLink[key] === newItem));\n        });\n\n        return exists;\n      };\n\n      $scope.addItem = function() {\n        var editForm = this;\n\n        var newIdentityLink = {\n          type: 'candidate'\n        };\n\n        newIdentityLink[key] = editForm.newItem;\n\n        Task.identityLinksAdd(userTask.id, newIdentityLink, function(err) {\n\n          if (err) {\n            return Notifications.addError({\n              status: decorator.notifications.add,\n              message: err.message,\n              exclusive: true\n            });\n          }\n\n          identityLinks.push(newIdentityLink);\n          editForm.newItem = '';\n\n        });\n      };\n\n    }]);\n\n  var Configuration = function(ViewsProvider) {\n    ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.tab', {\n      id: 'user-tasks-tab',\n      label: 'User Tasks',\n      template: userTasksTemplate,\n      controller: 'UserTaskController',\n      priority: 5\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  ngModule.config(Configuration);\n\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionDefinition/decisionInstanceTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar createSearchQueryForSearchWidget = require('./../../../../../../common/scripts/util/search-widget-utils').createSearchQueryForSearchWidget;\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\\n<div cam-widget-search\\n     cam-widget-search-valid-searches=\\\"decisionSearchConfig.searches\\\"\\n     cam-widget-search-translations=\\\"decisionSearchConfig.tooltips\\\"\\n     cam-widget-search-types=\\\"decisionSearchConfig.types\\\"\\n     cam-widget-search-operators=\\\"decisionSearchConfig.operators\\\"\\n     cam-widget-search-mode=\\\"filter\\\">\\n</div>\\n\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No decision instances matched by current filter.\\\">\\n  <table class=\\\"decision-instances cam-table cam-fixed-layout\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"instance-id\\\">ID</th>\\n        <th class=\\\"start-time\\\">Evaluation Time</th>\\n        <th class=\\\"definition-key\\\">Calling Process/Case</th>\\n        <th class=\\\"instance-id\\\">Calling Instance ID</th>\\n        <th class=\\\"activity-id\\\">Activity ID</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr ng-repeat=\\\"decisionInstance in decisionInstances\\\">\\n        <td class=\\\"instance-id\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.id\\\">\\n          <a ng-href=\\\"#/decision-instance/{{ decisionInstance.id }}\\\" title=\\\"{{ decisionInstance.id }}\\\">\\n            {{ decisionInstance.id }}\\n          </a>\\n        </td>\\n\\n        <td class=\\\"start-time\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.evaluationTime\\\">\\n          {{ decisionInstance.evaluationTime | camDate }}\\n        </td>\\n\\n        <td class=\\\"definition-key\\\"\\n            ng-if=\\\"decisionInstance.processDefinitionKey\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.processDefinitionKey\\\">\\n          <a ng-href=\\\"{{ getProcessDefinitionLink(decisionInstance) }}\\\">\\n            {{ decisionInstance.processDefinitionKey }}\\n          </a>\\n        </td>\\n        <td class=\\\"definition-key\\\"\\n            ng-if=\\\"decisionInstance.caseDefinitionKey\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.caseDefinitionKey\\\">\\n          <a ng-if=\\\"hasCasePlugin\\\"\\n             ng-href=\\\"#/case-definition/{{ decisionInstance.caseDefinitionId }}?searchQuery={{ getActivitySearch(decisionInstance) }}\\\">\\n            {{ decisionInstance.caseDefinitionKey }}\\n          </a>\\n          <span ng-if=\\\"!hasCasePlugin\\\">\\n            {{ decisionInstance.caseDefinitionKey }}\\n          </span>\\n        </td>\\n        <td class=\\\"definition-key\\\"\\n            ng-if=\\\"!decisionInstance.processDefinitionKey && !decisionInstance.caseDefinitionKey\\\">\\n        </td>\\n\\n        <td class=\\\"instance-id\\\"\\n            ng-if=\\\"decisionInstance.processInstanceId\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.processInstanceId\\\">\\n          <a ng-href=\\\"{{ getProcessInstanceLink(decisionInstance) }}\\\">\\n            {{ decisionInstance.processInstanceId }}\\n          </a>\\n        </td>\\n        <td class=\\\"instance-id\\\"\\n            ng-if=\\\"decisionInstance.caseInstanceId\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.caseInstanceId\\\">\\n          <a ng-if=\\\"hasCasePlugin\\\"\\n             ng-href=\\\"#/case-instance/{{ decisionInstance.caseInstanceId }}?searchQuery={{ getActivitySearch(decisionInstance) }}\\\">\\n            {{ decisionInstance.caseInstanceId }}\\n          </a>\\n          <span ng-if=\\\"!hasCasePlugin\\\">\\n            {{ decisionInstance.caseInstanceId }}\\n          </span>\\n        </td>\\n        <td class=\\\"instance-id\\\"\\n            ng-if=\\\"!decisionInstance.processInstanceId && !decisionInstance.caseInstanceId\\\">\\n        </td>\\n\\n        <td class=\\\"activity-id\\\"\\n            ng-if=\\\"decisionInstance.activityId\\\"\\n            cam-widget-clipboard=\\\"decisionInstance.activityId\\\">\\n          {{ decisionInstance.activityId }}\\n        </td>\\n        <td class=\\\"activity-id\\\"\\n            ng-if=\\\"!decisionInstance.activityId\\\">\\n        </td>\\n\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <pagination ng-if=\\\"pages.total > pages.size\\\"\\n              class=\\\"pagination-sm\\\"\\n\\n              page=\\\"pages.current\\\"\\n              ng-model=\\\"pages.current\\\"\\n\\n              total-items=\\\"pages.total\\\"\\n              items-per-page=\\\"pages.size\\\"\\n\\n              max-size=\\\"7\\\"\\n              boundary-links=\\\"true\\\"></pagination>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\\n\";\nvar decisionSearchConfig = JSON.parse(\"{\\n  \\\"types\\\": [\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"decisionInstanceId\\\",\\n        \\\"value\\\": \\\"ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ],\\n      \\\"default\\\": true\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"processDefinitionId\\\",\\n        \\\"value\\\": \\\"Process Definition ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"processDefinitionKey\\\",\\n        \\\"value\\\": \\\"Process Definition Key\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"processInstanceId\\\",\\n        \\\"value\\\": \\\"Process Instance ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"caseDefinitionId\\\",\\n        \\\"value\\\": \\\"Case Definition ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"caseDefinitionKey\\\",\\n        \\\"value\\\": \\\"Case Definition Key\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"caseInstanceId\\\",\\n        \\\"value\\\": \\\"Case Instance ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"activityIdIn\\\",\\n        \\\"value\\\": \\\"Activity ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"activityInstanceIdIn\\\",\\n        \\\"value\\\": \\\"Activity Instance ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"evaluatedDate\\\",\\n        \\\"value\\\": \\\"Evaluated Date\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"Before\\\",\\n          \\\"value\\\": \\\"before\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"After\\\",\\n          \\\"value\\\": \\\"after\\\"\\n        }\\n      ],\\n      \\\"allowDates\\\": true,\\n      \\\"enforceDates\\\": true\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"userId\\\",\\n        \\\"value\\\": \\\"User ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"operators\\\": {\\n    \\\"undefined\\\":  [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"string\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"number\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      }\\n    ],\\n    \\\"boolean\\\":    [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }\\n    ],\\n    \\\"object\\\":     [{\\n      \\\"key\\\": \\\"eq\\\",\\n      \\\"value\\\": \\\"=\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }],\\n    \\\"date\\\":     [{\\n      \\\"key\\\": \\\"lteq\\\",\\n      \\\"value\\\": \\\"before\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\"after\\\"\\n      }]\\n  },\\n  \\\"tooltips\\\": {\\n    \\\"inputPlaceholder\\\": \\\"Add criteria\\\",\\n    \\\"invalid\\\": \\\"This search query is not valid\\\",\\n    \\\"deleteSearch\\\": \\\"Remove search\\\",\\n    \\\"type\\\": \\\"Type\\\",\\n    \\\"name\\\": \\\"Property\\\",\\n    \\\"operator\\\": \\\"Operator\\\",\\n    \\\"value\\\": \\\"Value\\\"\\n  }\\n}\\n\");\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.decisionDefinition.tab', {\n    id: 'decision-instances-table',\n    label: 'Decision Instances',\n    template: template,\n    controller: [\n      '$scope', '$location', 'search', 'routeUtil', 'camAPI', 'Views', '$rootScope',\n      function($scope,   $location,   search,   routeUtil,   camAPI,   Views,   $rootScope) {\n\n        var processInstancePlugins = Views.getProviders({ component: 'cockpit.processInstance.view' });\n\n        var hasHistoryPlugin = processInstancePlugins.filter(function(plugin) {\n          return plugin.id === 'history';\n        }).length > 0;\n\n        $scope.hasCasePlugin = false;\n        try {\n          $scope.hasCasePlugin = !!angular.module('cockpit.plugin.case');\n        }\n        catch (e) {\n          // do nothing\n        }\n\n        $scope.getProcessDefinitionLink = function(decisionInstance) {\n          if(hasHistoryPlugin) {\n            return '#/process-definition/' + decisionInstance.processDefinitionId + '/history';\n          } else {\n            return '#/process-definition/' + decisionInstance.processDefinitionId;\n          }\n        };\n\n        $scope.getProcessInstanceLink = function(decisionInstance) {\n          if(hasHistoryPlugin) {\n            return '#/process-instance/' + decisionInstance.processInstanceId + '/history' +\n            '?activityInstanceIds=' + decisionInstance.activityInstanceId +\n            '&activityIds=' + decisionInstance.activityId;\n          } else {\n            return '#/process-instance/' + decisionInstance.processInstanceId;\n          }\n        };\n\n        $scope.getActivitySearch = function(decisionInstance) {\n\n          return JSON.stringify([{\n            type: 'caseActivityIdIn',\n            operator: 'eq',\n            value: decisionInstance.activityId\n          }]);\n\n        };\n\n        $scope.decisionSearchConfig = angular.copy(decisionSearchConfig);\n\n        $scope.$on('$routeChanged', function() {\n          pages.current = search().page || 1;\n        });\n\n        $scope.$watch('decisionSearchConfig.searches', function(newValue, oldValue) {\n          if (newValue !== oldValue) {\n            updateView();\n          }\n        }, true);\n\n        var historyService = camAPI.resource('history');\n\n        var DEFAULT_PAGES = { size: 50, total: 0, current: search().page || 1 };\n\n        var pages = $scope.pages = angular.copy(DEFAULT_PAGES);\n\n        $scope.$watch('pages.current', function(newValue, oldValue) {\n          if (newValue == oldValue) {\n            return;\n          }\n\n          search('page', !newValue || newValue == 1 ? null : newValue);\n          updateView();\n        });\n\n        function updateView() {\n          var page = pages.current,\n              count = pages.size,\n              firstResult = (page - 1) * count,\n              searchQuery = createSearchQueryForSearchWidget($scope.decisionSearchConfig.searches,\n                ['activityIdIn', 'activityInstanceIdIn']);\n\n          $scope.decisionInstances = null;\n          $scope.loadingState = 'LOADING';\n\n          var decisionInstanceQuery = angular.extend(\n            {\n              decisionDefinitionId: $scope.decisionDefinition.id,\n              firstResult: firstResult,\n              maxResults: count,\n              sortBy: 'evaluationTime',\n              sortOrder: 'desc'\n            },\n            searchQuery\n          );\n\n          historyService.decisionInstance(decisionInstanceQuery, function(err, data) {\n            $scope.decisionInstances = data;\n            $scope.loadingState = data.length ? 'LOADED' : 'EMPTY';\n\n            var phase = $rootScope.$$phase;\n            if(phase !== '$apply' && phase !== '$digest') {\n              $scope.$apply();\n            }\n          });\n\n          var countQuery = angular.extend(\n            {\n              decisionDefinitionId: $scope.decisionDefinition.id\n            },\n            searchQuery\n          );\n\n          historyService.decisionInstanceCount(countQuery, function(err, data) {\n            pages.total = data.count;\n\n            var phase = $rootScope.$$phase;\n            if(phase !== '$apply' && phase !== '$digest') {\n              $scope.$apply();\n            }\n\n          });\n        }\n      }],\n    priority: 10\n  });\n}];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9kZWNpc2lvbkxpc3QvYXBwL3ZpZXdzL2RlY2lzaW9uRGVmaW5pdGlvbi9kZWNpc2lvbkluc3RhbmNlVGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xudmFyIGNyZWF0ZVNlYXJjaFF1ZXJ5Rm9yU2VhcmNoV2lkZ2V0ID0gcmVxdWlyZSgnLi8uLi8uLi8uLi8uLi8uLi8uLi9jb21tb24vc2NyaXB0cy91dGlsL3NlYXJjaC13aWRnZXQtdXRpbHMnKS5jcmVhdGVTZWFyY2hRdWVyeUZvclNlYXJjaFdpZGdldDtcblxudmFyIHRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vZGVjaXNpb25MaXN0L2FwcC92aWV3cy9kZWNpc2lvbkRlZmluaXRpb24vZGVjaXNpb24taW5zdGFuY2UtdGFibGUuaHRtbCAtLT5cXG48ZGl2IGNhbS13aWRnZXQtc2VhcmNoXFxuICAgICBjYW0td2lkZ2V0LXNlYXJjaC12YWxpZC1zZWFyY2hlcz1cXFwiZGVjaXNpb25TZWFyY2hDb25maWcuc2VhcmNoZXNcXFwiXFxuICAgICBjYW0td2lkZ2V0LXNlYXJjaC10cmFuc2xhdGlvbnM9XFxcImRlY2lzaW9uU2VhcmNoQ29uZmlnLnRvb2x0aXBzXFxcIlxcbiAgICAgY2FtLXdpZGdldC1zZWFyY2gtdHlwZXM9XFxcImRlY2lzaW9uU2VhcmNoQ29uZmlnLnR5cGVzXFxcIlxcbiAgICAgY2FtLXdpZGdldC1zZWFyY2gtb3BlcmF0b3JzPVxcXCJkZWNpc2lvblNlYXJjaENvbmZpZy5vcGVyYXRvcnNcXFwiXFxuICAgICBjYW0td2lkZ2V0LXNlYXJjaC1tb2RlPVxcXCJmaWx0ZXJcXFwiPlxcbjwvZGl2PlxcblxcbjxkaXYgY2FtLXdpZGdldC1sb2FkZXJcXG4gICAgIGxvYWRpbmctc3RhdGU9XFxcInt7IGxvYWRpbmdTdGF0ZSB9fVxcXCJcXG4gICAgIHRleHQtZW1wdHk9XFxcIk5vIGRlY2lzaW9uIGluc3RhbmNlcyBtYXRjaGVkIGJ5IGN1cnJlbnQgZmlsdGVyLlxcXCI+XFxuICA8dGFibGUgY2xhc3M9XFxcImRlY2lzaW9uLWluc3RhbmNlcyBjYW0tdGFibGUgY2FtLWZpeGVkLWxheW91dFxcXCI+XFxuICAgIDx0aGVhZD5cXG4gICAgICA8dHI+XFxuICAgICAgICA8dGggY2xhc3M9XFxcImluc3RhbmNlLWlkXFxcIj5JRDwvdGg+XFxuICAgICAgICA8dGggY2xhc3M9XFxcInN0YXJ0LXRpbWVcXFwiPkV2YWx1YXRpb24gVGltZTwvdGg+XFxuICAgICAgICA8dGggY2xhc3M9XFxcImRlZmluaXRpb24ta2V5XFxcIj5DYWxsaW5nIFByb2Nlc3MvQ2FzZTwvdGg+XFxuICAgICAgICA8dGggY2xhc3M9XFxcImluc3RhbmNlLWlkXFxcIj5DYWxsaW5nIEluc3RhbmNlIElEPC90aD5cXG4gICAgICAgIDx0aCBjbGFzcz1cXFwiYWN0aXZpdHktaWRcXFwiPkFjdGl2aXR5IElEPC90aD5cXG4gICAgICA8L3RyPlxcbiAgICA8L3RoZWFkPlxcbiAgICA8dGJvZHk+XFxuICAgICAgPHRyIG5nLXJlcGVhdD1cXFwiZGVjaXNpb25JbnN0YW5jZSBpbiBkZWNpc2lvbkluc3RhbmNlc1xcXCI+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImluc3RhbmNlLWlkXFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLmlkXFxcIj5cXG4gICAgICAgICAgPGEgbmctaHJlZj1cXFwiIy9kZWNpc2lvbi1pbnN0YW5jZS97eyBkZWNpc2lvbkluc3RhbmNlLmlkIH19XFxcIiB0aXRsZT1cXFwie3sgZGVjaXNpb25JbnN0YW5jZS5pZCB9fVxcXCI+XFxuICAgICAgICAgICAge3sgZGVjaXNpb25JbnN0YW5jZS5pZCB9fVxcbiAgICAgICAgICA8L2E+XFxuICAgICAgICA8L3RkPlxcblxcbiAgICAgICAgPHRkIGNsYXNzPVxcXCJzdGFydC10aW1lXFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLmV2YWx1YXRpb25UaW1lXFxcIj5cXG4gICAgICAgICAge3sgZGVjaXNpb25JbnN0YW5jZS5ldmFsdWF0aW9uVGltZSB8IGNhbURhdGUgfX1cXG4gICAgICAgIDwvdGQ+XFxuXFxuICAgICAgICA8dGQgY2xhc3M9XFxcImRlZmluaXRpb24ta2V5XFxcIlxcbiAgICAgICAgICAgIG5nLWlmPVxcXCJkZWNpc2lvbkluc3RhbmNlLnByb2Nlc3NEZWZpbml0aW9uS2V5XFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLnByb2Nlc3NEZWZpbml0aW9uS2V5XFxcIj5cXG4gICAgICAgICAgPGEgbmctaHJlZj1cXFwie3sgZ2V0UHJvY2Vzc0RlZmluaXRpb25MaW5rKGRlY2lzaW9uSW5zdGFuY2UpIH19XFxcIj5cXG4gICAgICAgICAgICB7eyBkZWNpc2lvbkluc3RhbmNlLnByb2Nlc3NEZWZpbml0aW9uS2V5IH19XFxuICAgICAgICAgIDwvYT5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImRlZmluaXRpb24ta2V5XFxcIlxcbiAgICAgICAgICAgIG5nLWlmPVxcXCJkZWNpc2lvbkluc3RhbmNlLmNhc2VEZWZpbml0aW9uS2V5XFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLmNhc2VEZWZpbml0aW9uS2V5XFxcIj5cXG4gICAgICAgICAgPGEgbmctaWY9XFxcImhhc0Nhc2VQbHVnaW5cXFwiXFxuICAgICAgICAgICAgIG5nLWhyZWY9XFxcIiMvY2FzZS1kZWZpbml0aW9uL3t7IGRlY2lzaW9uSW5zdGFuY2UuY2FzZURlZmluaXRpb25JZCB9fT9zZWFyY2hRdWVyeT17eyBnZXRBY3Rpdml0eVNlYXJjaChkZWNpc2lvbkluc3RhbmNlKSB9fVxcXCI+XFxuICAgICAgICAgICAge3sgZGVjaXNpb25JbnN0YW5jZS5jYXNlRGVmaW5pdGlvbktleSB9fVxcbiAgICAgICAgICA8L2E+XFxuICAgICAgICAgIDxzcGFuIG5nLWlmPVxcXCIhaGFzQ2FzZVBsdWdpblxcXCI+XFxuICAgICAgICAgICAge3sgZGVjaXNpb25JbnN0YW5jZS5jYXNlRGVmaW5pdGlvbktleSB9fVxcbiAgICAgICAgICA8L3NwYW4+XFxuICAgICAgICA8L3RkPlxcbiAgICAgICAgPHRkIGNsYXNzPVxcXCJkZWZpbml0aW9uLWtleVxcXCJcXG4gICAgICAgICAgICBuZy1pZj1cXFwiIWRlY2lzaW9uSW5zdGFuY2UucHJvY2Vzc0RlZmluaXRpb25LZXkgJiYgIWRlY2lzaW9uSW5zdGFuY2UuY2FzZURlZmluaXRpb25LZXlcXFwiPlxcbiAgICAgICAgPC90ZD5cXG5cXG4gICAgICAgIDx0ZCBjbGFzcz1cXFwiaW5zdGFuY2UtaWRcXFwiXFxuICAgICAgICAgICAgbmctaWY9XFxcImRlY2lzaW9uSW5zdGFuY2UucHJvY2Vzc0luc3RhbmNlSWRcXFwiXFxuICAgICAgICAgICAgY2FtLXdpZGdldC1jbGlwYm9hcmQ9XFxcImRlY2lzaW9uSW5zdGFuY2UucHJvY2Vzc0luc3RhbmNlSWRcXFwiPlxcbiAgICAgICAgICA8YSBuZy1ocmVmPVxcXCJ7eyBnZXRQcm9jZXNzSW5zdGFuY2VMaW5rKGRlY2lzaW9uSW5zdGFuY2UpIH19XFxcIj5cXG4gICAgICAgICAgICB7eyBkZWNpc2lvbkluc3RhbmNlLnByb2Nlc3NJbnN0YW5jZUlkIH19XFxuICAgICAgICAgIDwvYT5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImluc3RhbmNlLWlkXFxcIlxcbiAgICAgICAgICAgIG5nLWlmPVxcXCJkZWNpc2lvbkluc3RhbmNlLmNhc2VJbnN0YW5jZUlkXFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLmNhc2VJbnN0YW5jZUlkXFxcIj5cXG4gICAgICAgICAgPGEgbmctaWY9XFxcImhhc0Nhc2VQbHVnaW5cXFwiXFxuICAgICAgICAgICAgIG5nLWhyZWY9XFxcIiMvY2FzZS1pbnN0YW5jZS97eyBkZWNpc2lvbkluc3RhbmNlLmNhc2VJbnN0YW5jZUlkIH19P3NlYXJjaFF1ZXJ5PXt7IGdldEFjdGl2aXR5U2VhcmNoKGRlY2lzaW9uSW5zdGFuY2UpIH19XFxcIj5cXG4gICAgICAgICAgICB7eyBkZWNpc2lvbkluc3RhbmNlLmNhc2VJbnN0YW5jZUlkIH19XFxuICAgICAgICAgIDwvYT5cXG4gICAgICAgICAgPHNwYW4gbmctaWY9XFxcIiFoYXNDYXNlUGx1Z2luXFxcIj5cXG4gICAgICAgICAgICB7eyBkZWNpc2lvbkluc3RhbmNlLmNhc2VJbnN0YW5jZUlkIH19XFxuICAgICAgICAgIDwvc3Bhbj5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImluc3RhbmNlLWlkXFxcIlxcbiAgICAgICAgICAgIG5nLWlmPVxcXCIhZGVjaXNpb25JbnN0YW5jZS5wcm9jZXNzSW5zdGFuY2VJZCAmJiAhZGVjaXNpb25JbnN0YW5jZS5jYXNlSW5zdGFuY2VJZFxcXCI+XFxuICAgICAgICA8L3RkPlxcblxcbiAgICAgICAgPHRkIGNsYXNzPVxcXCJhY3Rpdml0eS1pZFxcXCJcXG4gICAgICAgICAgICBuZy1pZj1cXFwiZGVjaXNpb25JbnN0YW5jZS5hY3Rpdml0eUlkXFxcIlxcbiAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJkZWNpc2lvbkluc3RhbmNlLmFjdGl2aXR5SWRcXFwiPlxcbiAgICAgICAgICB7eyBkZWNpc2lvbkluc3RhbmNlLmFjdGl2aXR5SWQgfX1cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcImFjdGl2aXR5LWlkXFxcIlxcbiAgICAgICAgICAgIG5nLWlmPVxcXCIhZGVjaXNpb25JbnN0YW5jZS5hY3Rpdml0eUlkXFxcIj5cXG4gICAgICAgIDwvdGQ+XFxuXFxuICAgICAgPC90cj5cXG4gICAgPC90Ym9keT5cXG4gIDwvdGFibGU+XFxuXFxuICA8cGFnaW5hdGlvbiBuZy1pZj1cXFwicGFnZXMudG90YWwgPiBwYWdlcy5zaXplXFxcIlxcbiAgICAgICAgICAgICAgY2xhc3M9XFxcInBhZ2luYXRpb24tc21cXFwiXFxuXFxuICAgICAgICAgICAgICBwYWdlPVxcXCJwYWdlcy5jdXJyZW50XFxcIlxcbiAgICAgICAgICAgICAgbmctbW9kZWw9XFxcInBhZ2VzLmN1cnJlbnRcXFwiXFxuXFxuICAgICAgICAgICAgICB0b3RhbC1pdGVtcz1cXFwicGFnZXMudG90YWxcXFwiXFxuICAgICAgICAgICAgICBpdGVtcy1wZXItcGFnZT1cXFwicGFnZXMuc2l6ZVxcXCJcXG5cXG4gICAgICAgICAgICAgIG1heC1zaXplPVxcXCI3XFxcIlxcbiAgICAgICAgICAgICAgYm91bmRhcnktbGlua3M9XFxcInRydWVcXFwiPjwvcGFnaW5hdGlvbj5cXG48L2Rpdj5cXG48IS0tIC8gQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vZGVjaXNpb25MaXN0L2FwcC92aWV3cy9kZWNpc2lvbkRlZmluaXRpb24vZGVjaXNpb24taW5zdGFuY2UtdGFibGUuaHRtbCAtLT5cXG5cIjtcbnZhciBkZWNpc2lvblNlYXJjaENvbmZpZyA9IEpTT04ucGFyc2UoXCJ7XFxuICBcXFwidHlwZXNcXFwiOiBbXFxuICAgIHtcXG4gICAgICBcXFwiaWRcXFwiOiB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImRlY2lzaW9uSW5zdGFuY2VJZFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiSURcXFwiXFxuICAgICAgfSxcXG4gICAgICBcXFwib3BlcmF0b3JzXFxcIjogW1xcbiAgICAgICAge1xcbiAgICAgICAgICBcXFwia2V5XFxcIjogXFxcImVxXFxcIixcXG4gICAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj1cXFwiXFxuICAgICAgICB9XFxuICAgICAgXSxcXG4gICAgICBcXFwiZGVmYXVsdFxcXCI6IHRydWVcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIFxcXCJpZFxcXCI6IHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwicHJvY2Vzc0RlZmluaXRpb25JZFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiUHJvY2VzcyBEZWZpbml0aW9uIElEXFxcIlxcbiAgICAgIH0sXFxuICAgICAgXFxcIm9wZXJhdG9yc1xcXCI6IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgXFxcImtleVxcXCI6IFxcXCJlcVxcXCIsXFxuICAgICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgICAgfVxcbiAgICAgIF1cXG4gICAgfSxcXG4gICAge1xcbiAgICAgIFxcXCJpZFxcXCI6IHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwicHJvY2Vzc0RlZmluaXRpb25LZXlcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIlByb2Nlc3MgRGVmaW5pdGlvbiBLZXlcXFwiXFxuICAgICAgfSxcXG4gICAgICBcXFwib3BlcmF0b3JzXFxcIjogW1xcbiAgICAgICAge1xcbiAgICAgICAgICBcXFwia2V5XFxcIjogXFxcImVxXFxcIixcXG4gICAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj1cXFwiXFxuICAgICAgICB9XFxuICAgICAgXVxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgXFxcImlkXFxcIjoge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJwcm9jZXNzSW5zdGFuY2VJZFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiUHJvY2VzcyBJbnN0YW5jZSBJRFxcXCJcXG4gICAgICB9LFxcbiAgICAgIFxcXCJvcGVyYXRvcnNcXFwiOiBbXFxuICAgICAgICB7XFxuICAgICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXFcXFwiLFxcbiAgICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPVxcXCJcXG4gICAgICAgIH1cXG4gICAgICBdXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICBcXFwiaWRcXFwiOiB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImNhc2VEZWZpbml0aW9uSWRcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIkNhc2UgRGVmaW5pdGlvbiBJRFxcXCJcXG4gICAgICB9LFxcbiAgICAgIFxcXCJvcGVyYXRvcnNcXFwiOiBbXFxuICAgICAgICB7XFxuICAgICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXFcXFwiLFxcbiAgICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPVxcXCJcXG4gICAgICAgIH1cXG4gICAgICBdXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICBcXFwiaWRcXFwiOiB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImNhc2VEZWZpbml0aW9uS2V5XFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCJDYXNlIERlZmluaXRpb24gS2V5XFxcIlxcbiAgICAgIH0sXFxuICAgICAgXFxcIm9wZXJhdG9yc1xcXCI6IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgXFxcImtleVxcXCI6IFxcXCJlcVxcXCIsXFxuICAgICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgICAgfVxcbiAgICAgIF1cXG4gICAgfSxcXG4gICAge1xcbiAgICAgIFxcXCJpZFxcXCI6IHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiY2FzZUluc3RhbmNlSWRcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIkNhc2UgSW5zdGFuY2UgSURcXFwiXFxuICAgICAgfSxcXG4gICAgICBcXFwib3BlcmF0b3JzXFxcIjogW1xcbiAgICAgICAge1xcbiAgICAgICAgICBcXFwia2V5XFxcIjogXFxcImVxXFxcIixcXG4gICAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj1cXFwiXFxuICAgICAgICB9XFxuICAgICAgXVxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgXFxcImlkXFxcIjoge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJhY3Rpdml0eUlkSW5cXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIkFjdGl2aXR5IElEXFxcIlxcbiAgICAgIH0sXFxuICAgICAgXFxcIm9wZXJhdG9yc1xcXCI6IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgXFxcImtleVxcXCI6IFxcXCJlcVxcXCIsXFxuICAgICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgICAgfVxcbiAgICAgIF1cXG4gICAgfSxcXG4gICAge1xcbiAgICAgIFxcXCJpZFxcXCI6IHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiYWN0aXZpdHlJbnN0YW5jZUlkSW5cXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIkFjdGl2aXR5IEluc3RhbmNlIElEXFxcIlxcbiAgICAgIH0sXFxuICAgICAgXFxcIm9wZXJhdG9yc1xcXCI6IFtcXG4gICAgICAgIHtcXG4gICAgICAgICAgXFxcImtleVxcXCI6IFxcXCJlcVxcXCIsXFxuICAgICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgICAgfVxcbiAgICAgIF1cXG4gICAgfSxcXG4gICAge1xcbiAgICAgIFxcXCJpZFxcXCI6IHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXZhbHVhdGVkRGF0ZVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiRXZhbHVhdGVkIERhdGVcXFwiXFxuICAgICAgfSxcXG4gICAgICBcXFwib3BlcmF0b3JzXFxcIjogW1xcbiAgICAgICAge1xcbiAgICAgICAgICBcXFwia2V5XFxcIjogXFxcIkJlZm9yZVxcXCIsXFxuICAgICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCJiZWZvcmVcXFwiXFxuICAgICAgICB9LFxcbiAgICAgICAge1xcbiAgICAgICAgICBcXFwia2V5XFxcIjogXFxcIkFmdGVyXFxcIixcXG4gICAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcImFmdGVyXFxcIlxcbiAgICAgICAgfVxcbiAgICAgIF0sXFxuICAgICAgXFxcImFsbG93RGF0ZXNcXFwiOiB0cnVlLFxcbiAgICAgIFxcXCJlbmZvcmNlRGF0ZXNcXFwiOiB0cnVlXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICBcXFwiaWRcXFwiOiB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcInVzZXJJZFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiVXNlciBJRFxcXCJcXG4gICAgICB9LFxcbiAgICAgIFxcXCJvcGVyYXRvcnNcXFwiOiBbXFxuICAgICAgICB7XFxuICAgICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXFcXFwiLFxcbiAgICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPVxcXCJcXG4gICAgICAgIH1cXG4gICAgICBdXFxuICAgIH1cXG4gIF0sXFxuICBcXFwib3BlcmF0b3JzXFxcIjoge1xcbiAgICBcXFwidW5kZWZpbmVkXFxcIjogIFtcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJuZXFcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIiE9XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJndFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPlxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZ3RlcVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPj1cXFwiXFxuICAgICAgfSxcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImx0XFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI8XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJsdGVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI8PVxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwibGlrZVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwibGlrZVxcXCJcXG4gICAgICB9XFxuICAgIF0sXFxuICAgIFxcXCJzdHJpbmdcXFwiOiAgICAgW1xcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXFcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj1cXFwiXFxuICAgICAgfSxcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcIm5lcVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiIT1cXFwiXFxuICAgICAgfSxcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImd0XFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI+XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJndGVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI+PVxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwibHRcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIjxcXFwiXFxuICAgICAgfSxcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImx0ZXFcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIjw9XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJsaWtlXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCJsaWtlXFxcIlxcbiAgICAgIH1cXG4gICAgXSxcXG4gICAgXFxcIm51bWJlclxcXCI6ICAgICBbXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJlcVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPVxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwibmVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCIhPVxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZ3RcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj5cXFwiXFxuICAgICAgfSxcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImd0ZXFcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIj49XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJsdFxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPFxcXCJcXG4gICAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwibHRlcVxcXCIsXFxuICAgICAgICBcXFwidmFsdWVcXFwiOiBcXFwiPD1cXFwiXFxuICAgICAgfVxcbiAgICBdLFxcbiAgICBcXFwiYm9vbGVhblxcXCI6ICAgIFtcXG4gICAgICB7XFxuICAgICAgICBcXFwia2V5XFxcIjogXFxcImVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJuZXFcXFwiLFxcbiAgICAgICAgXFxcInZhbHVlXFxcIjogXFxcIiE9XFxcIlxcbiAgICAgIH1cXG4gICAgXSxcXG4gICAgXFxcIm9iamVjdFxcXCI6ICAgICBbe1xcbiAgICAgIFxcXCJrZXlcXFwiOiBcXFwiZXFcXFwiLFxcbiAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCI9XFxcIlxcbiAgICB9LFxcbiAgICAgIHtcXG4gICAgICAgIFxcXCJrZXlcXFwiOiBcXFwibmVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCIhPVxcXCJcXG4gICAgICB9XSxcXG4gICAgXFxcImRhdGVcXFwiOiAgICAgW3tcXG4gICAgICBcXFwia2V5XFxcIjogXFxcImx0ZXFcXFwiLFxcbiAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCJiZWZvcmVcXFwiXFxuICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgXFxcImtleVxcXCI6IFxcXCJndGVxXFxcIixcXG4gICAgICAgIFxcXCJ2YWx1ZVxcXCI6IFxcXCJhZnRlclxcXCJcXG4gICAgICB9XVxcbiAgfSxcXG4gIFxcXCJ0b29sdGlwc1xcXCI6IHtcXG4gICAgXFxcImlucHV0UGxhY2Vob2xkZXJcXFwiOiBcXFwiQWRkIGNyaXRlcmlhXFxcIixcXG4gICAgXFxcImludmFsaWRcXFwiOiBcXFwiVGhpcyBzZWFyY2ggcXVlcnkgaXMgbm90IHZhbGlkXFxcIixcXG4gICAgXFxcImRlbGV0ZVNlYXJjaFxcXCI6IFxcXCJSZW1vdmUgc2VhcmNoXFxcIixcXG4gICAgXFxcInR5cGVcXFwiOiBcXFwiVHlwZVxcXCIsXFxuICAgIFxcXCJuYW1lXFxcIjogXFxcIlByb3BlcnR5XFxcIixcXG4gICAgXFxcIm9wZXJhdG9yXFxcIjogXFxcIk9wZXJhdG9yXFxcIixcXG4gICAgXFxcInZhbHVlXFxcIjogXFxcIlZhbHVlXFxcIlxcbiAgfVxcbn1cXG5cIik7XG5cbm1vZHVsZS5leHBvcnRzID0gWyAnVmlld3NQcm92aWRlcicsIGZ1bmN0aW9uKFZpZXdzUHJvdmlkZXIpIHtcblxuICBWaWV3c1Byb3ZpZGVyLnJlZ2lzdGVyRGVmYXVsdFZpZXcoJ2NvY2twaXQuZGVjaXNpb25EZWZpbml0aW9uLnRhYicsIHtcbiAgICBpZDogJ2RlY2lzaW9uLWluc3RhbmNlcy10YWJsZScsXG4gICAgbGFiZWw6ICdEZWNpc2lvbiBJbnN0YW5jZXMnLFxuICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZSxcbiAgICBjb250cm9sbGVyOiBbXG4gICAgICAnJHNjb3BlJywgJyRsb2NhdGlvbicsICdzZWFyY2gnLCAncm91dGVVdGlsJywgJ2NhbUFQSScsICdWaWV3cycsICckcm9vdFNjb3BlJyxcbiAgICAgIGZ1bmN0aW9uKCRzY29wZSwgICAkbG9jYXRpb24sICAgc2VhcmNoLCAgIHJvdXRlVXRpbCwgICBjYW1BUEksICAgVmlld3MsICAgJHJvb3RTY29wZSkge1xuXG4gICAgICAgIHZhciBwcm9jZXNzSW5zdGFuY2VQbHVnaW5zID0gVmlld3MuZ2V0UHJvdmlkZXJzKHsgY29tcG9uZW50OiAnY29ja3BpdC5wcm9jZXNzSW5zdGFuY2UudmlldycgfSk7XG5cbiAgICAgICAgdmFyIGhhc0hpc3RvcnlQbHVnaW4gPSBwcm9jZXNzSW5zdGFuY2VQbHVnaW5zLmZpbHRlcihmdW5jdGlvbihwbHVnaW4pIHtcbiAgICAgICAgICByZXR1cm4gcGx1Z2luLmlkID09PSAnaGlzdG9yeSc7XG4gICAgICAgIH0pLmxlbmd0aCA+IDA7XG5cbiAgICAgICAgJHNjb3BlLmhhc0Nhc2VQbHVnaW4gPSBmYWxzZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAkc2NvcGUuaGFzQ2FzZVBsdWdpbiA9ICEhYW5ndWxhci5tb2R1bGUoJ2NvY2twaXQucGx1Z2luLmNhc2UnKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICAgICAgfVxuXG4gICAgICAgICRzY29wZS5nZXRQcm9jZXNzRGVmaW5pdGlvbkxpbmsgPSBmdW5jdGlvbihkZWNpc2lvbkluc3RhbmNlKSB7XG4gICAgICAgICAgaWYoaGFzSGlzdG9yeVBsdWdpbikge1xuICAgICAgICAgICAgcmV0dXJuICcjL3Byb2Nlc3MtZGVmaW5pdGlvbi8nICsgZGVjaXNpb25JbnN0YW5jZS5wcm9jZXNzRGVmaW5pdGlvbklkICsgJy9oaXN0b3J5JztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuICcjL3Byb2Nlc3MtZGVmaW5pdGlvbi8nICsgZGVjaXNpb25JbnN0YW5jZS5wcm9jZXNzRGVmaW5pdGlvbklkO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuZ2V0UHJvY2Vzc0luc3RhbmNlTGluayA9IGZ1bmN0aW9uKGRlY2lzaW9uSW5zdGFuY2UpIHtcbiAgICAgICAgICBpZihoYXNIaXN0b3J5UGx1Z2luKSB7XG4gICAgICAgICAgICByZXR1cm4gJyMvcHJvY2Vzcy1pbnN0YW5jZS8nICsgZGVjaXNpb25JbnN0YW5jZS5wcm9jZXNzSW5zdGFuY2VJZCArICcvaGlzdG9yeScgK1xuICAgICAgICAgICAgJz9hY3Rpdml0eUluc3RhbmNlSWRzPScgKyBkZWNpc2lvbkluc3RhbmNlLmFjdGl2aXR5SW5zdGFuY2VJZCArXG4gICAgICAgICAgICAnJmFjdGl2aXR5SWRzPScgKyBkZWNpc2lvbkluc3RhbmNlLmFjdGl2aXR5SWQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAnIy9wcm9jZXNzLWluc3RhbmNlLycgKyBkZWNpc2lvbkluc3RhbmNlLnByb2Nlc3NJbnN0YW5jZUlkO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAkc2NvcGUuZ2V0QWN0aXZpdHlTZWFyY2ggPSBmdW5jdGlvbihkZWNpc2lvbkluc3RhbmNlKSB7XG5cbiAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoW3tcbiAgICAgICAgICAgIHR5cGU6ICdjYXNlQWN0aXZpdHlJZEluJyxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAnZXEnLFxuICAgICAgICAgICAgdmFsdWU6IGRlY2lzaW9uSW5zdGFuY2UuYWN0aXZpdHlJZFxuICAgICAgICAgIH1dKTtcblxuICAgICAgICB9O1xuXG4gICAgICAgICRzY29wZS5kZWNpc2lvblNlYXJjaENvbmZpZyA9IGFuZ3VsYXIuY29weShkZWNpc2lvblNlYXJjaENvbmZpZyk7XG5cbiAgICAgICAgJHNjb3BlLiRvbignJHJvdXRlQ2hhbmdlZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHBhZ2VzLmN1cnJlbnQgPSBzZWFyY2goKS5wYWdlIHx8IDE7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRzY29wZS4kd2F0Y2goJ2RlY2lzaW9uU2VhcmNoQ29uZmlnLnNlYXJjaGVzJywgZnVuY3Rpb24obmV3VmFsdWUsIG9sZFZhbHVlKSB7XG4gICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBvbGRWYWx1ZSkge1xuICAgICAgICAgICAgdXBkYXRlVmlldygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgdHJ1ZSk7XG5cbiAgICAgICAgdmFyIGhpc3RvcnlTZXJ2aWNlID0gY2FtQVBJLnJlc291cmNlKCdoaXN0b3J5Jyk7XG5cbiAgICAgICAgdmFyIERFRkFVTFRfUEFHRVMgPSB7IHNpemU6IDUwLCB0b3RhbDogMCwgY3VycmVudDogc2VhcmNoKCkucGFnZSB8fCAxIH07XG5cbiAgICAgICAgdmFyIHBhZ2VzID0gJHNjb3BlLnBhZ2VzID0gYW5ndWxhci5jb3B5KERFRkFVTFRfUEFHRVMpO1xuXG4gICAgICAgICRzY29wZS4kd2F0Y2goJ3BhZ2VzLmN1cnJlbnQnLCBmdW5jdGlvbihuZXdWYWx1ZSwgb2xkVmFsdWUpIHtcbiAgICAgICAgICBpZiAobmV3VmFsdWUgPT0gb2xkVmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzZWFyY2goJ3BhZ2UnLCAhbmV3VmFsdWUgfHwgbmV3VmFsdWUgPT0gMSA/IG51bGwgOiBuZXdWYWx1ZSk7XG4gICAgICAgICAgdXBkYXRlVmlldygpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVWaWV3KCkge1xuICAgICAgICAgIHZhciBwYWdlID0gcGFnZXMuY3VycmVudCxcbiAgICAgICAgICAgICAgY291bnQgPSBwYWdlcy5zaXplLFxuICAgICAgICAgICAgICBmaXJzdFJlc3VsdCA9IChwYWdlIC0gMSkgKiBjb3VudCxcbiAgICAgICAgICAgICAgc2VhcmNoUXVlcnkgPSBjcmVhdGVTZWFyY2hRdWVyeUZvclNlYXJjaFdpZGdldCgkc2NvcGUuZGVjaXNpb25TZWFyY2hDb25maWcuc2VhcmNoZXMsXG4gICAgICAgICAgICAgICAgWydhY3Rpdml0eUlkSW4nLCAnYWN0aXZpdHlJbnN0YW5jZUlkSW4nXSk7XG5cbiAgICAgICAgICAkc2NvcGUuZGVjaXNpb25JbnN0YW5jZXMgPSBudWxsO1xuICAgICAgICAgICRzY29wZS5sb2FkaW5nU3RhdGUgPSAnTE9BRElORyc7XG5cbiAgICAgICAgICB2YXIgZGVjaXNpb25JbnN0YW5jZVF1ZXJ5ID0gYW5ndWxhci5leHRlbmQoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGRlY2lzaW9uRGVmaW5pdGlvbklkOiAkc2NvcGUuZGVjaXNpb25EZWZpbml0aW9uLmlkLFxuICAgICAgICAgICAgICBmaXJzdFJlc3VsdDogZmlyc3RSZXN1bHQsXG4gICAgICAgICAgICAgIG1heFJlc3VsdHM6IGNvdW50LFxuICAgICAgICAgICAgICBzb3J0Qnk6ICdldmFsdWF0aW9uVGltZScsXG4gICAgICAgICAgICAgIHNvcnRPcmRlcjogJ2Rlc2MnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VhcmNoUXVlcnlcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaGlzdG9yeVNlcnZpY2UuZGVjaXNpb25JbnN0YW5jZShkZWNpc2lvbkluc3RhbmNlUXVlcnksIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgJHNjb3BlLmRlY2lzaW9uSW5zdGFuY2VzID0gZGF0YTtcbiAgICAgICAgICAgICRzY29wZS5sb2FkaW5nU3RhdGUgPSBkYXRhLmxlbmd0aCA/ICdMT0FERUQnIDogJ0VNUFRZJztcblxuICAgICAgICAgICAgdmFyIHBoYXNlID0gJHJvb3RTY29wZS4kJHBoYXNlO1xuICAgICAgICAgICAgaWYocGhhc2UgIT09ICckYXBwbHknICYmIHBoYXNlICE9PSAnJGRpZ2VzdCcpIHtcbiAgICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdmFyIGNvdW50UXVlcnkgPSBhbmd1bGFyLmV4dGVuZChcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZGVjaXNpb25EZWZpbml0aW9uSWQ6ICRzY29wZS5kZWNpc2lvbkRlZmluaXRpb24uaWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZWFyY2hRdWVyeVxuICAgICAgICAgICk7XG5cbiAgICAgICAgICBoaXN0b3J5U2VydmljZS5kZWNpc2lvbkluc3RhbmNlQ291bnQoY291bnRRdWVyeSwgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICAgICAgICBwYWdlcy50b3RhbCA9IGRhdGEuY291bnQ7XG5cbiAgICAgICAgICAgIHZhciBwaGFzZSA9ICRyb290U2NvcGUuJCRwaGFzZTtcbiAgICAgICAgICAgIGlmKHBoYXNlICE9PSAnJGFwcGx5JyAmJiBwaGFzZSAhPT0gJyRkaWdlc3QnKSB7XG4gICAgICAgICAgICAgICRzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICBwcmlvcml0eTogMTBcbiAgfSk7XG59XTtcbiJdfQ==","deps":{"./../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\\n<table class=\\\"job-definition cam-table\\\">\\n  <thead>\\n    <tr>\\n      <th class=\\\"state\\\">State</th>\\n      <th class=\\\"activity\\\">Activity</th>\\n      <th class=\\\"type\\\">Type</th>\\n      <th class=\\\"configuration\\\">Configuration</th>\\n      <th class=\\\"overriding-job-priority\\\">Overriding Job Priority</th>\\n      <th class=\\\"action\\\">Action</th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr ng-repeat=\\\"jobDefinition in jobDefinitions\\\">\\n      <td class=\\\"state\\\">\\n        <span ng-show=\\\"jobDefinition.suspended\\\">\\n          Suspended\\n        </span>\\n        <span ng-hide=\\\"jobDefinition.suspended\\\">\\n          Active\\n        </span>\\n      </td>\\n      <td class=\\\"activity\\\"\\n          cam-widget-clipboard=\\\"jobDefinition.activityId\\\">\\n        <a ng-href=\\\"#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(jobDefinition.activityId) }}&amp;detailsTab=job-definition-table\\\">\\n          {{ jobDefinition.activityName }}\\n        </a>\\n      </td>\\n      <td class=\\\"type\\\"\\n          cam-widget-clipboard=\\\"jobDefinition.jobType\\\">\\n        {{ jobDefinition.jobType }}\\n      </td>\\n      <td class=\\\"configuration\\\">\\n        {{ jobDefinition.jobConfiguration }}\\n      </td>\\n      <td class=\\\"overriding-job-priority\\\">\\n        {{ jobDefinition.overridingJobPriority }}\\n      </td>\\n      <td class=\\\"action\\\">\\n        <span ng-repeat=\\\"actionProvider in jobDefinitionActions\\\">\\n          <view provider=\\\"actionProvider\\\" vars=\\\"jobDefinitionVars\\\"/>\\n        </span>\\n      </td>\\n    </tr>\\n\\n    <tr ng-if=\\\"!jobDefinitions\\\">\\n      <td colspan=\\\"6\\\">\\n        <span class=\\\"glyphicon glyphicon-loading\\\"></span>\\n        loading job definitions...\\n      </td>\\n    </tr>\\n\\n    <tr ng-if=\\\"jobDefinitions && !jobDefinitions.length\\\">\\n      <td colspan=\\\"6\\\">\\n        No job definitions matched by current filter.\\n      </td>\\n    </tr>\\n\\n  </tbody>\\n</table>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\\n\";\n\nvar Controller = [\n  '$scope',\n  'Views',\n  function($scope, Views) {\n\n    var processData = $scope.processData.newChild($scope);\n\n    processData.observe([ 'filter', 'jobDefinitions', 'bpmnElements' ], function(filter, jobDefinitions) {\n      updateView(filter, jobDefinitions);\n    });\n\n    function updateView(filter, jobDefinitions) {\n\n      $scope.jobDefinitions = null;\n\n      var activityIds = filter.activityIds;\n\n      if (!activityIds || !activityIds.length) {\n        $scope.jobDefinitions = jobDefinitions;\n        return;\n      }\n\n      var jobDefinitionSelection = [];\n\n      angular.forEach(jobDefinitions, function(jobDefinition) {\n\n        var activityId = jobDefinition.activityId;\n\n        if (activityIds.indexOf(activityId) != -1) {\n          jobDefinitionSelection.push(jobDefinition);\n        }\n\n      });\n\n      $scope.jobDefinitions = jobDefinitionSelection;\n\n    }\n\n    $scope.jobDefinitionVars = { read: [ 'jobDefinition', 'processData', 'filter' ] };\n    $scope.jobDefinitionActions = Views.getProviders({ component: 'cockpit.jobDefinition.action' });\n\n    $scope.getSearchQueryForSearchType = searchWidgetUtils.getSearchQueryForSearchType.bind(null, 'activityIdIn');\n  }];\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.runtime.tab', {\n    id: 'job-definition-table',\n    label: 'Job Definitions',\n    template: template,\n    controller: Controller,\n    priority: 2\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9qb2JEZWZpbml0aW9uVGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCk7XG52YXIgc2VhcmNoV2lkZ2V0VXRpbHMgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi8uLi8uLi9jb21tb24vc2NyaXB0cy91dGlsL3NlYXJjaC13aWRnZXQtdXRpbHMnKTtcblxudmFyIHRlbXBsYXRlID0gXCI8IS0tICMgQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vam9iRGVmaW5pdGlvbi9hcHAvdmlld3MvcHJvY2Vzc0RlZmluaXRpb24vam9iLWRlZmluaXRpb24tdGFibGUuaHRtbCAtLT5cXG48dGFibGUgY2xhc3M9XFxcImpvYi1kZWZpbml0aW9uIGNhbS10YWJsZVxcXCI+XFxuICA8dGhlYWQ+XFxuICAgIDx0cj5cXG4gICAgICA8dGggY2xhc3M9XFxcInN0YXRlXFxcIj5TdGF0ZTwvdGg+XFxuICAgICAgPHRoIGNsYXNzPVxcXCJhY3Rpdml0eVxcXCI+QWN0aXZpdHk8L3RoPlxcbiAgICAgIDx0aCBjbGFzcz1cXFwidHlwZVxcXCI+VHlwZTwvdGg+XFxuICAgICAgPHRoIGNsYXNzPVxcXCJjb25maWd1cmF0aW9uXFxcIj5Db25maWd1cmF0aW9uPC90aD5cXG4gICAgICA8dGggY2xhc3M9XFxcIm92ZXJyaWRpbmctam9iLXByaW9yaXR5XFxcIj5PdmVycmlkaW5nIEpvYiBQcmlvcml0eTwvdGg+XFxuICAgICAgPHRoIGNsYXNzPVxcXCJhY3Rpb25cXFwiPkFjdGlvbjwvdGg+XFxuICAgIDwvdHI+XFxuICA8L3RoZWFkPlxcblxcbiAgPHRib2R5PlxcbiAgICA8dHIgbmctcmVwZWF0PVxcXCJqb2JEZWZpbml0aW9uIGluIGpvYkRlZmluaXRpb25zXFxcIj5cXG4gICAgICA8dGQgY2xhc3M9XFxcInN0YXRlXFxcIj5cXG4gICAgICAgIDxzcGFuIG5nLXNob3c9XFxcImpvYkRlZmluaXRpb24uc3VzcGVuZGVkXFxcIj5cXG4gICAgICAgICAgU3VzcGVuZGVkXFxuICAgICAgICA8L3NwYW4+XFxuICAgICAgICA8c3BhbiBuZy1oaWRlPVxcXCJqb2JEZWZpbml0aW9uLnN1c3BlbmRlZFxcXCI+XFxuICAgICAgICAgIEFjdGl2ZVxcbiAgICAgICAgPC9zcGFuPlxcbiAgICAgIDwvdGQ+XFxuICAgICAgPHRkIGNsYXNzPVxcXCJhY3Rpdml0eVxcXCJcXG4gICAgICAgICAgY2FtLXdpZGdldC1jbGlwYm9hcmQ9XFxcImpvYkRlZmluaXRpb24uYWN0aXZpdHlJZFxcXCI+XFxuICAgICAgICA8YSBuZy1ocmVmPVxcXCIjL3Byb2Nlc3MtZGVmaW5pdGlvbi97eyBwcm9jZXNzRGVmaW5pdGlvbi5pZCB9fS9ydW50aW1lP3t7IGdldFNlYXJjaFF1ZXJ5Rm9yU2VhcmNoVHlwZShqb2JEZWZpbml0aW9uLmFjdGl2aXR5SWQpIH19JmFtcDtkZXRhaWxzVGFiPWpvYi1kZWZpbml0aW9uLXRhYmxlXFxcIj5cXG4gICAgICAgICAge3sgam9iRGVmaW5pdGlvbi5hY3Rpdml0eU5hbWUgfX1cXG4gICAgICAgIDwvYT5cXG4gICAgICA8L3RkPlxcbiAgICAgIDx0ZCBjbGFzcz1cXFwidHlwZVxcXCJcXG4gICAgICAgICAgY2FtLXdpZGdldC1jbGlwYm9hcmQ9XFxcImpvYkRlZmluaXRpb24uam9iVHlwZVxcXCI+XFxuICAgICAgICB7eyBqb2JEZWZpbml0aW9uLmpvYlR5cGUgfX1cXG4gICAgICA8L3RkPlxcbiAgICAgIDx0ZCBjbGFzcz1cXFwiY29uZmlndXJhdGlvblxcXCI+XFxuICAgICAgICB7eyBqb2JEZWZpbml0aW9uLmpvYkNvbmZpZ3VyYXRpb24gfX1cXG4gICAgICA8L3RkPlxcbiAgICAgIDx0ZCBjbGFzcz1cXFwib3ZlcnJpZGluZy1qb2ItcHJpb3JpdHlcXFwiPlxcbiAgICAgICAge3sgam9iRGVmaW5pdGlvbi5vdmVycmlkaW5nSm9iUHJpb3JpdHkgfX1cXG4gICAgICA8L3RkPlxcbiAgICAgIDx0ZCBjbGFzcz1cXFwiYWN0aW9uXFxcIj5cXG4gICAgICAgIDxzcGFuIG5nLXJlcGVhdD1cXFwiYWN0aW9uUHJvdmlkZXIgaW4gam9iRGVmaW5pdGlvbkFjdGlvbnNcXFwiPlxcbiAgICAgICAgICA8dmlldyBwcm92aWRlcj1cXFwiYWN0aW9uUHJvdmlkZXJcXFwiIHZhcnM9XFxcImpvYkRlZmluaXRpb25WYXJzXFxcIi8+XFxuICAgICAgICA8L3NwYW4+XFxuICAgICAgPC90ZD5cXG4gICAgPC90cj5cXG5cXG4gICAgPHRyIG5nLWlmPVxcXCIham9iRGVmaW5pdGlvbnNcXFwiPlxcbiAgICAgIDx0ZCBjb2xzcGFuPVxcXCI2XFxcIj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLWxvYWRpbmdcXFwiPjwvc3Bhbj5cXG4gICAgICAgIGxvYWRpbmcgam9iIGRlZmluaXRpb25zLi4uXFxuICAgICAgPC90ZD5cXG4gICAgPC90cj5cXG5cXG4gICAgPHRyIG5nLWlmPVxcXCJqb2JEZWZpbml0aW9ucyAmJiAham9iRGVmaW5pdGlvbnMubGVuZ3RoXFxcIj5cXG4gICAgICA8dGQgY29sc3Bhbj1cXFwiNlxcXCI+XFxuICAgICAgICBObyBqb2IgZGVmaW5pdGlvbnMgbWF0Y2hlZCBieSBjdXJyZW50IGZpbHRlci5cXG4gICAgICA8L3RkPlxcbiAgICA8L3RyPlxcblxcbiAgPC90Ym9keT5cXG48L3RhYmxlPlxcbjwhLS0gLyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9qb2JEZWZpbml0aW9uL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9qb2ItZGVmaW5pdGlvbi10YWJsZS5odG1sIC0tPlxcblwiO1xuXG52YXIgQ29udHJvbGxlciA9IFtcbiAgJyRzY29wZScsXG4gICdWaWV3cycsXG4gIGZ1bmN0aW9uKCRzY29wZSwgVmlld3MpIHtcblxuICAgIHZhciBwcm9jZXNzRGF0YSA9ICRzY29wZS5wcm9jZXNzRGF0YS5uZXdDaGlsZCgkc2NvcGUpO1xuXG4gICAgcHJvY2Vzc0RhdGEub2JzZXJ2ZShbICdmaWx0ZXInLCAnam9iRGVmaW5pdGlvbnMnLCAnYnBtbkVsZW1lbnRzJyBdLCBmdW5jdGlvbihmaWx0ZXIsIGpvYkRlZmluaXRpb25zKSB7XG4gICAgICB1cGRhdGVWaWV3KGZpbHRlciwgam9iRGVmaW5pdGlvbnMpO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gdXBkYXRlVmlldyhmaWx0ZXIsIGpvYkRlZmluaXRpb25zKSB7XG5cbiAgICAgICRzY29wZS5qb2JEZWZpbml0aW9ucyA9IG51bGw7XG5cbiAgICAgIHZhciBhY3Rpdml0eUlkcyA9IGZpbHRlci5hY3Rpdml0eUlkcztcblxuICAgICAgaWYgKCFhY3Rpdml0eUlkcyB8fCAhYWN0aXZpdHlJZHMubGVuZ3RoKSB7XG4gICAgICAgICRzY29wZS5qb2JEZWZpbml0aW9ucyA9IGpvYkRlZmluaXRpb25zO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBqb2JEZWZpbml0aW9uU2VsZWN0aW9uID0gW107XG5cbiAgICAgIGFuZ3VsYXIuZm9yRWFjaChqb2JEZWZpbml0aW9ucywgZnVuY3Rpb24oam9iRGVmaW5pdGlvbikge1xuXG4gICAgICAgIHZhciBhY3Rpdml0eUlkID0gam9iRGVmaW5pdGlvbi5hY3Rpdml0eUlkO1xuXG4gICAgICAgIGlmIChhY3Rpdml0eUlkcy5pbmRleE9mKGFjdGl2aXR5SWQpICE9IC0xKSB7XG4gICAgICAgICAgam9iRGVmaW5pdGlvblNlbGVjdGlvbi5wdXNoKGpvYkRlZmluaXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgIH0pO1xuXG4gICAgICAkc2NvcGUuam9iRGVmaW5pdGlvbnMgPSBqb2JEZWZpbml0aW9uU2VsZWN0aW9uO1xuXG4gICAgfVxuXG4gICAgJHNjb3BlLmpvYkRlZmluaXRpb25WYXJzID0geyByZWFkOiBbICdqb2JEZWZpbml0aW9uJywgJ3Byb2Nlc3NEYXRhJywgJ2ZpbHRlcicgXSB9O1xuICAgICRzY29wZS5qb2JEZWZpbml0aW9uQWN0aW9ucyA9IFZpZXdzLmdldFByb3ZpZGVycyh7IGNvbXBvbmVudDogJ2NvY2twaXQuam9iRGVmaW5pdGlvbi5hY3Rpb24nIH0pO1xuXG4gICAgJHNjb3BlLmdldFNlYXJjaFF1ZXJ5Rm9yU2VhcmNoVHlwZSA9IHNlYXJjaFdpZGdldFV0aWxzLmdldFNlYXJjaFF1ZXJ5Rm9yU2VhcmNoVHlwZS5iaW5kKG51bGwsICdhY3Rpdml0eUlkSW4nKTtcbiAgfV07XG5cbnZhciBDb25maWd1cmF0aW9uID0gZnVuY3Rpb24gUGx1Z2luQ29uZmlndXJhdGlvbihWaWV3c1Byb3ZpZGVyKSB7XG5cbiAgVmlld3NQcm92aWRlci5yZWdpc3RlckRlZmF1bHRWaWV3KCdjb2NrcGl0LnByb2Nlc3NEZWZpbml0aW9uLnJ1bnRpbWUudGFiJywge1xuICAgIGlkOiAnam9iLWRlZmluaXRpb24tdGFibGUnLFxuICAgIGxhYmVsOiAnSm9iIERlZmluaXRpb25zJyxcbiAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXG4gICAgY29udHJvbGxlcjogQ29udHJvbGxlcixcbiAgICBwcmlvcml0eTogMlxuICB9KTtcbn07XG5cbkNvbmZpZ3VyYXRpb24uJGluamVjdCA9IFsnVmlld3NQcm92aWRlciddO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENvbmZpZ3VyYXRpb247XG4iXX0=","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    jobDefinitionTable = require('./processDefinition/jobDefinitionTable'),\n    jobDefinitionSuspensionState = require('./processDefinition/jobDefinitionSuspensionState'),\n    jobDefinitionSuspensionOverlay = require('./processDefinition/jobDefinitionSuspensionOverlay'),\n    suspensionStateAction = require('./processDefinition/suspensionStateAction');\n\nvar ngModule = angular.module('cockpit.plugin.jobDefinition.views', []);\n\nngModule.config(jobDefinitionTable);\nngModule.controller('JobDefinitionSuspensionStateController', jobDefinitionSuspensionState);\nngModule.config(jobDefinitionSuspensionOverlay);\nngModule.config(suspensionStateAction);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC92aWV3cy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpLFxuICAgIGpvYkRlZmluaXRpb25UYWJsZSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0RlZmluaXRpb24vam9iRGVmaW5pdGlvblRhYmxlJyksXG4gICAgam9iRGVmaW5pdGlvblN1c3BlbnNpb25TdGF0ZSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0RlZmluaXRpb24vam9iRGVmaW5pdGlvblN1c3BlbnNpb25TdGF0ZScpLFxuICAgIGpvYkRlZmluaXRpb25TdXNwZW5zaW9uT3ZlcmxheSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0RlZmluaXRpb24vam9iRGVmaW5pdGlvblN1c3BlbnNpb25PdmVybGF5JyksXG4gICAgc3VzcGVuc2lvblN0YXRlQWN0aW9uID0gcmVxdWlyZSgnLi9wcm9jZXNzRGVmaW5pdGlvbi9zdXNwZW5zaW9uU3RhdGVBY3Rpb24nKTtcblxudmFyIG5nTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2NvY2twaXQucGx1Z2luLmpvYkRlZmluaXRpb24udmlld3MnLCBbXSk7XG5cbm5nTW9kdWxlLmNvbmZpZyhqb2JEZWZpbml0aW9uVGFibGUpO1xubmdNb2R1bGUuY29udHJvbGxlcignSm9iRGVmaW5pdGlvblN1c3BlbnNpb25TdGF0ZUNvbnRyb2xsZXInLCBqb2JEZWZpbml0aW9uU3VzcGVuc2lvblN0YXRlKTtcbm5nTW9kdWxlLmNvbmZpZyhqb2JEZWZpbml0aW9uU3VzcGVuc2lvbk92ZXJsYXkpO1xubmdNb2R1bGUuY29uZmlnKHN1c3BlbnNpb25TdGF0ZUFjdGlvbik7XG5cbm1vZHVsZS5leHBvcnRzID0gbmdNb2R1bGU7XG4iXX0=","deps":{"./processDefinition/jobDefinitionSuspensionState":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionSuspensionState.js","./processDefinition/jobDefinitionSuspensionOverlay":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionSuspensionOverlay.js","./processDefinition/suspensionStateAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/suspensionStateAction.js","./processDefinition/jobDefinitionTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/processDefinition/jobDefinitionTable.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/plugin.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    viewsModule = require('./views/main'),\n    dataModule = require('./data/main'),\n    actionsModule = require('./actions/main');\n\nmodule.exports = angular.module('cockpit.plugin.jobDefinition', [viewsModule.name, dataModule.name, actionsModule.name]);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9qb2JEZWZpbml0aW9uL2FwcC9wbHVnaW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKSxcbiAgICB2aWV3c01vZHVsZSA9IHJlcXVpcmUoJy4vdmlld3MvbWFpbicpLFxuICAgIGRhdGFNb2R1bGUgPSByZXF1aXJlKCcuL2RhdGEvbWFpbicpLFxuICAgIGFjdGlvbnNNb2R1bGUgPSByZXF1aXJlKCcuL2FjdGlvbnMvbWFpbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFuZ3VsYXIubW9kdWxlKCdjb2NrcGl0LnBsdWdpbi5qb2JEZWZpbml0aW9uJywgW3ZpZXdzTW9kdWxlLm5hbWUsIGRhdGFNb2R1bGUubmFtZSwgYWN0aW9uc01vZHVsZS5uYW1lXSk7XG4iXX0=","deps":{"./data/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/data/main.js","./actions/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/actions/main.js","./views/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/views/main.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-inspect-dialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Inspect \\\"{{ variable.name }}\\\" variable</h3>\\n</div>\\n\\n\\n<div class=\\\"modal-body variable-inspect\\\">\\n\\n  <div notifications-panel></div>\\n\\n  <div ng-show=\\\"status === 'beforeChange' || status === 'confirmChange'\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Object Type Name:</label>\\n      <code class=\\\"form-control-static\\\"\\n            cam-widget-clipboard=\\\"variable.valueInfo.objectTypeName\\\">{{ variable.valueInfo.objectTypeName }}</code>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Serialization Data Format:</label>\\n      <code class=\\\"form-control-static\\\"\\n            cam-widget-clipboard=\\\"variable.valueInfo.serializationDataFormat\\\">{{ variable.valueInfo.serializationDataFormat }}</code>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n\\n      <ul class=\\\"nav nav-tabs\\\">\\n        <li ng-class=\\\"{ active: selectedTab === 'serialized' }\\\">\\n          <a href ng-click=\\\"selectTab('serialized')\\\">Serialized</a>\\n        </li>\\n        <li ng-class=\\\"{ active: selectedTab === 'deserialized' }\\\">\\n          <a href ng-click=\\\"selectTab('deserialized')\\\">Deserialized</a>\\n        </li>\\n      </ul>\\n\\n      <textarea ng-if=\\\"selectedTab === 'serialized'\\\"\\n                name=\\\"currentValue\\\"\\n                ng-readonly=\\\"readonly\\\"\\n                ng-model=\\\"currentValue\\\"\\n                ng-keyup=\\\"typeIn(this, 'serialized')\\\"\\n                rows=\\\"10\\\"\\n                class=\\\"form-control\\\">\\n      </textarea>\\n\\n      <div ng-if=\\\"selectedTab === 'deserialized'\\\">\\n        <div class=\\\"alert alert-danger\\\"\\n             ng-show=\\\"deserializationError\\\">\\n          <strong>Deserialization Error</strong>:\\n          {{deserializationError}}\\n        </div>\\n\\n        <div ng-show=\\\"!deserializationError\\\">\\n          <textarea name=\\\"currentDeserializedValue\\\"\\n                    ng-readonly=\\\"readonly\\\"\\n                    ng-model=\\\"currentDeserializedValue\\\"\\n                    ng-keyup=\\\"typeIn(this, 'deserialized')\\\"\\n                    rows=\\\"10\\\"\\n                    class=\\\"form-control\\\">\\n          </textarea>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"alert alert-warning\\\"\\n       ng-show=\\\"status === 'confirmChange'\\\">\\n    <span class=\\\"glyphicon glyphicon-alert\\\"></span>\\n    <strong>Warning:</strong>\\n    Are you sure you want to change the value of this Object? Changing the variable in an incompatible way may lead to severe runtime problems.\\n  </div>\\n\\n</div>\\n\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"$dismiss()\\\"\\n          ng-hide=\\\"status === 'changeSuccess'\\\">\\n    Close\\n  </button>\\n\\n  <![if gt IE 9]>\\n    <button class=\\\"btn btn-primary\\\"\\n            ng-click=\\\"$close()\\\"\\n            ng-show=\\\"!readlonly && status === 'changeSuccess'\\\">\\n      OK\\n    </button>\\n\\n    <button class=\\\"btn btn-primary\\\"\\n            ng-click=\\\"change()\\\"\\n            ng-disabled=\\\"status !== 'beforeChange' || !hasChanged()\\\"\\n            ng-hide=\\\"readonly || status !== 'beforeChange'\\\">\\n      Change\\n    </button>\\n\\n    <button class=\\\"btn btn-warning\\\"\\n            ng-click=\\\"change()\\\"\\n            ng-hide=\\\"readonly || status !== 'confirmChange'\\\">\\n      Confirm Change\\n    </button>\\n  <![endif]>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\\n\";\n\nvar Controller = [\n  '$http',\n  '$modalInstance',\n  '$scope',\n  'Notifications',\n  'Uri',\n  'basePath',\n  'history',\n  'readonly',\n  'variable',\n  function(\n    $http,\n    $modalInstance,\n    $scope,\n    Notifications,\n    Uri,\n    basePath,\n    history,\n    readonly,\n    variable\n  ) {\n\n    var BEFORE_CHANGE = 'beforeChange',\n        CONFIRM_CHANGE = 'confirmChange',\n        CHANGE_SUCCESS = 'changeSuccess';\n\n    $scope.selectedTab = 'serialized';\n    $scope.status = BEFORE_CHANGE;\n\n    $scope.variable = variable;\n    $scope.readonly = readonly;\n\n    $scope.currentValue = angular.copy(variable.value);\n\n    var initialDeserializedValue;\n\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.dismiss();\n    });\n\n\n    $scope.selectTab = function(tab) {\n      $scope.selectedTab = tab;\n      // reset changed state\n      $scope.currentValue = angular.copy(variable.value);\n      $scope.currentDeserializedValue = angular.copy(initialDeserializedValue);\n      $scope.status = BEFORE_CHANGE;\n    };\n\n\n    $scope.typeIn = function(formScope, type) {\n      if(isSerializedTab(type)) {\n        $scope.currentValue = formScope.currentValue;\n      }\n      else {\n        $scope.currentDeserializedValue = formScope.currentDeserializedValue;\n      }\n\n      $scope.status = hasChanged(type) ? CONFIRM_CHANGE : BEFORE_CHANGE;\n    };\n\n\n    var hasChanged = $scope.hasChanged = function(type) {\n      if(isSerializedTab(type)) {\n        return variable.value !== $scope.currentValue;\n      }\n      else {\n        return initialDeserializedValue != $scope.currentDeserializedValue;\n      }\n    };\n\n\n    $scope.change = function() {\n\n      var updateDeserialized = !isSerializedTab($scope.selectedTab);\n      var newValue = updateDeserialized ? $scope.currentDeserializedValue : $scope.currentValue;\n\n      if(variable.valueInfo.serializationDataFormat === 'application/json' || updateDeserialized) {\n        try {\n          // check whether the user provided valid JSON.\n          JSON.parse(newValue);\n        }\n        catch(e) {\n          $scope.status = BEFORE_CHANGE;\n          Notifications.addError({\n            status: 'Variable',\n            message: 'Could not parse JSON input: ' + e,\n            exclusive: true\n          });\n          return;\n        }\n      }\n\n      !updateDeserialized ? updateSerializedValue(variable, newValue) : updateDeserializedValue(variable, newValue);\n\n    };\n\n\n    // load deserialized value:\n    loadDeserializedValue();\n\n\n    function isSerializedTab(tab) {\n      return tab === 'serialized';\n    }\n\n    function updateSerializedValue(variable, newValue) {\n      var variableUpdate = {\n        type: variable.type,\n        value: newValue,\n        valueInfo: variable.valueInfo\n      };\n\n      $http({\n        method: 'PUT',\n        url: Uri.appUri(basePath),\n        data: variableUpdate\n      })\n      .success(function() {\n        $scope.status = CHANGE_SUCCESS;\n        addMessage(variable);\n      })\n      .error(function() {\n        $scope.status = BEFORE_CHANGE;\n        addError(variable);\n      });\n    }\n\n    function updateDeserializedValue(variable, newValue) {\n\n      function callback(xhr) {\n\n        $scope.$apply(function() {\n\n          if(xhr.status === 204) {\n            $scope.status = CHANGE_SUCCESS;\n            addMessage(variable);\n          }\n          else {\n            $scope.status = BEFORE_CHANGE;\n            addError(variable);\n          }\n\n        });\n      }\n\n      // update deserialized\n      // create HTML 5 form upload\n      var fd = new FormData();\n      fd.append('data', new Blob([ newValue ], { type : 'application/json' }));\n      fd.append('type', variable.valueInfo.objectTypeName);\n\n      var xhr = new XMLHttpRequest();\n      xhr.addEventListener('load', function() {\n        callback(xhr);\n      }, false);\n      xhr.open('POST', Uri.appUri( basePath + '/data'));\n      xhr.send(fd);\n    }\n\n    function loadDeserializedValue() {\n\n      $http({\n        method: 'GET',\n        url: Uri.appUri('engine://engine/:engine/' + (history ? 'history/' : '') + 'variable-instance/' + variable.id)\n      })\n      .success(function(data) {\n        if (!data.errorMessage) {\n          initialDeserializedValue = JSON.stringify(data.value);\n          $scope.currentDeserializedValue = angular.copy(initialDeserializedValue);\n        }\n        else {\n          $scope.deserializationError = data.errorMessage;\n        }\n      }).error(function(err) {\n        $scope.deserializationError = err.message;\n      });\n\n    }\n\n    function addError(variable) {\n      Notifications.addError({\n        status: 'Variable',\n        message: 'The variable \\'' + variable.name + '\\' could not be changed successfully.',\n        exclusive: true\n      });\n    }\n\n    function addMessage(variable) {\n      Notifications.addMessage({\n        status: 'Variable',\n        message: 'The variable \\'' + variable.name + '\\' has been changed successfully.'\n      });\n    }\n\n  }];\n\nmodule.exports = {\n  template: template,\n  controller: Controller\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-upload-dialog.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Upload binary variable</h3>\\n</div>\\n\\n<!--[if lt IE 10]>\\n\\nThis feature is unsupported in your Browser.\\n\\n<![endif]-->\\n\\n<![if gt IE 9]>\\n\\n<div class=\\\"modal-body variable-upload\\\">\\n\\n  <div notifications-panel></div>\\n\\n  <div ng-show=\\\"status === 'beforeUpload'\\\">\\n\\n    <p>Select a file containing the binary content for  the variable:</p>\\n\\n    <p>\\n      <input name=\\\"data\\\"\\n             type=\\\"file\\\"\\n             size=\\\"50\\\"\\n             maxlength=\\\"100000\\\"\\n             accept=\\\"*/*\\\"\\n             onchange=\\\"angular.element(this).scope().setFile(this)\\\" />\\n    </p>\\n\\n  </div>\\n\\n  <div ng-show=\\\"status === 'performUpload'\\\">\\n    Upload progress: {{progress}}%\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-default\\\"\\n          ng-click=\\\"$dismiss()\\\"\\n          ng-hide=\\\"status === 'uploadSuccess' || status === 'uploadFailed'\\\">\\n    Close\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"$close()\\\"\\n          ng-show=\\\"status === 'uploadSuccess' || status === 'uploadFailed'\\\">\\n    OK\\n  </button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"upload()\\\"\\n          ng-disabled=\\\"status !== 'beforeUpload'\\\"\\n          ng-hide=\\\"status === 'uploadSuccess' || status === 'uploadFailed'\\\">\\n    Upload\\n  </button>\\n</div>\\n\\n<![endif]>\\n\\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\\n\";\n\nvar Controller = [\n  '$modalInstance',\n  '$scope',\n  'Notifications',\n  'Uri',\n  'basePath',\n  'variable',\n  function(\n    $modalInstance,\n    $scope,\n    Notifications,\n    Uri,\n    basePath,\n    variable\n  ) {\n\n    var BEFORE_UPLOAD = 'beforeUpload',\n        PERFORM_UPLOAD = 'performUpload',\n        UPLOAD_SUCCESS = 'uploadSuccess',\n        UPLOAD_FAILED = 'uploadFailed';\n\n    $scope.status = BEFORE_UPLOAD;\n\n    $scope.variable = variable;\n\n    var file;\n\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.dismiss();\n    });\n\n\n    $scope.upload = function() {\n\n    // progress listeners\n\n      function uploadProgress(evt) {\n        $scope.$apply(function() {\n          $scope.status = PERFORM_UPLOAD;\n          if (evt.lengthComputable) {\n            $scope.progress = Math.round(evt.loaded * 100 / evt.total);\n          }\n        });\n      }\n\n      function uploadComplete(xhr) {\n        $scope.$apply(function() {\n\n          if(xhr.status === 204) {\n            $scope.status = UPLOAD_SUCCESS;\n            Notifications.addMessage({\n              status: 'File',\n              message: 'The file has been uploaded successfully.'\n            });\n          }\n          else {\n            $scope.status = UPLOAD_FAILED;\n            Notifications.addError({\n              status: 'File',\n              message: 'The file could not be uploaded successfully.',\n              exclusive: true\n            });\n          }\n        });\n      }\n\n      function uploadFailed() {\n        $scope.$apply(function() {\n          $scope.status = UPLOAD_FAILED;\n          Notifications.addError({\n            status: 'File',\n            message: 'The file could not be uploaded successfully.',\n            exclusive: true\n          });\n        });\n      }\n\n    // perform HTML 5 file opload (not supported by IE 9)\n      var fd = new FormData();\n      fd.append('data', file);\n      fd.append('valueType', variable.type);\n\n      var xhr = new XMLHttpRequest();\n      xhr.upload.addEventListener('progress', uploadProgress, false);\n      xhr.addEventListener('load', function() {\n        uploadComplete(xhr);\n      }, false);\n      xhr.addEventListener('error', uploadFailed, false);\n      xhr.addEventListener('abort', uploadFailed, false);\n      xhr.open('POST', Uri.appUri(basePath + '/data'));\n      xhr.send(fd);\n\n    };\n\n    $scope.setFile = function(element) {\n      file = element.files[0];\n    };\n\n  }];\n\nmodule.exports = {\n  template: template,\n  controller: Controller\n};\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\\n<div class=\\\"modal-header\\\">\\n  <h3>Add Variable to {{ isProcessInstance ? 'Process' : 'Case' }} Instance</h3>\\n</div>\\n\\n<div class=\\\"modal-body add-variable-dialog\\\">\\n  <div notifications-panel></div>\\n\\n  <form class=\\\"form-horizontal\\\"\\n        name=\\\"addVariableForm\\\"\\n        novalidate\\n        ng-submit=\\\"save()\\\"\\n        ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\"\\n        request-aware>\\n    <fieldset>\\n\\n      <div class=\\\"form-group variable-name\\\">\\n        <label class=\\\"control-label col-xs-4\\\"\\n               for=\\\"variableName\\\">Variable Name*</label>\\n        <div class=\\\"col-xs-8\\\">\\n          <input id=\\\"variableNameId\\\"\\n                 name=\\\"variableName\\\"\\n                 class=\\\"form-control\\\"\\n                 type=\\\"text\\\"\\n                 ng-model=\\\"newVariable.name\\\"\\n                 autofocus\\n                 required />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group variable-type\\\">\\n        <label class=\\\"control-label col-xs-4\\\"\\n               for=\\\"variableType\\\">Variable Type*</label>\\n        <div class=\\\"col-xs-8\\\">\\n          <select id=\\\"variableTypeId\\\"\\n                  name=\\\"variableType\\\"\\n                  class=\\\"form-control\\\"\\n                  ng-options=\\\"variableType for variableType in variableTypes\\\"\\n                  ng-model=\\\"newVariable.type\\\"\\n                  ng-change=\\\"changeVariableType(variableType)\\\">\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group variable-value\\\">\\n        <label class=\\\"control-label col-xs-4\\\"\\n               for=\\\"variableValue\\\">Variable Value*</label>\\n        <div class=\\\"col-xs-8\\\">\\n          <div variable=\\\"newVariable\\\"></div>\\n\\n          <p class=\\\"invalid\\\"\\n             ng-show=\\\"this.addVariableForm.editDateValue.$error.date\\\">\\n            Supported pattern 'yyyy-MM-ddTHH:mm:ss'.\\n          </p>\\n\\n          <p class=\\\"invalid\\\"\\n             ng-show=\\\"this.addVariableForm.editIntegerValue.$error.numeric || this.addVariableForm.editFloatValue.$error.numeric\\\">\\n            Only a {{ newVariable.type }} value is allowed.\\n          </p>\\n        </div>\\n      </div>\\n\\n    </fieldset>\\n  </form>\\n\\n  <div ng-show=\\\"status === 'SUCCESS'\\\">\\n    The variable \\\"{{ newVariable.name }}\\\" has been added to the {{ isProcessInstance ? 'process' : 'case' }} instance successfully.\\n  </div>\\n\\n  <div ng-show=\\\"status === 'FAIL'\\\">\\n    The variable \\\"{{ newVariable.name }}\\\" could not be added to the {{ isProcessInstance ? 'process' : 'case' }} instance.\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button class=\\\"btn btn-link\\\"\\n          ng-click=\\\"close()\\\"\\n          ng-disabled=\\\"status === 'PERFORM_SAVE'\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">Close</button>\\n\\n  <button type=\\\"submit\\\"\\n          class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"save()\\\"\\n          ng-hide=\\\"status === 'SUCCESS' || status === 'FAIL'\\\"\\n          ng-disabled=\\\"!isValid()\\\">Add</button>\\n\\n  <button class=\\\"btn btn-primary\\\"\\n          ng-click=\\\"close()\\\"\\n          ng-show=\\\"status === 'SUCCESS' || status === 'FAIL'\\\">OK</button>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\\n\";\n\nvar Controller = [\n  '$http',\n  '$modalInstance',\n  '$scope',\n  'Notifications',\n  'Uri',\n  'instance',\n  'isProcessInstance',\n  function(\n    $http,\n    $modalInstance,\n    $scope,\n    Notifications,\n    Uri,\n    instance,\n    isProcessInstance\n  ) {\n\n\n    $scope.isProcessInstance = isProcessInstance;  \n\n    $scope.variableTypes = [\n      'String',\n      'Boolean',\n      'Short',\n      'Integer',\n      'Long',\n      'Double',\n      'Date',\n      'Null',\n      'Object'\n    ];\n\n    var newVariable = $scope.newVariable = {\n      name: null,\n      type: 'String',\n      value: null\n    };\n\n    var PERFORM_SAVE = 'PERFORM_SAVE',\n        SUCCESS = 'SUCCESS',\n        FAIL = 'FAIL';\n\n    $scope.$on('$routeChangeStart', function() {\n      $modalInstance.close($scope.status);\n    });\n\n    $scope.close = function() {\n      $modalInstance.close($scope.status);\n    };\n\n    var isValid = $scope.isValid = function() {\n      // that's a pity... I do not get why,\n      // but getting the form scope is.. kind of random\n      // m2c: it has to do with the `click event`\n      // Hate the game, not the player\n      var formScope = angular.element('[name=\"addVariableForm\"]').scope();\n      return (formScope && formScope.addVariableForm) ? formScope.addVariableForm.$valid : false;\n    };\n\n    $scope.save = function() {\n      if (!isValid()) {\n        return;\n      }\n\n      $scope.status = PERFORM_SAVE;\n\n      var data = angular.extend({}, newVariable),\n          name = data.name;\n\n      delete data.name;\n\n      $http\n      .put(Uri.appUri('engine://engine/:engine/'+(isProcessInstance ? 'process' : 'case')+'-instance/'+instance.id+'/variables/'+name), data)\n      .success(function() {\n        $scope.status = SUCCESS;\n\n        Notifications.addMessage({\n          status: 'Finished',\n          message: 'Added the variable',\n          exclusive: true\n        });\n      }).error(function(data) {\n        $scope.status = FAIL;\n\n        Notifications.addError({\n          status: 'Finished',\n          message: 'Could not add the new variable: ' + data.message,\n          exclusive: true\n        });\n      });\n    };\n  }];\n\nmodule.exports = {\n  template: template,\n  controller: Controller\n};\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/addVariableAction.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\n\nvar actionTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\\n<a class=\\\"btn btn-default btn-toolbar\\\"\\n   href\\n   ng-click=\\\"openDialog()\\\"\\n   tooltip=\\\"Add a new variable to Process Instance\\\"\\n   tooltip-placement=\\\"left\\\">\\n  <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n</a>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\\n\";\nvar addTemplate = require('../../../../../client/scripts/components/variables/variable-add-dialog');\n\nvar Configuration = function PluginConfiguration(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.action', {\n    id: 'add-variable-action',\n    label: 'Add Variable Action',\n    template: actionTemplate,\n    controller: [\n      '$scope', '$modal', '$rootScope',\n      function($scope, $modal, $rootScope) {\n        $scope.openDialog = function() {\n          var dialog = $modal.open({\n            scope: $scope,\n            resolve: {\n              instance: function() { return $scope.processInstance; },\n              isProcessInstance: function() { return true; }\n            },\n            controller: addTemplate.controller,\n            template: addTemplate.template\n          });\n\n          dialog.result.then(function(result) {\n\n            // dialog closed. YEA!\n            if (result === 'SUCCESS') {\n              // refresh filter and all views\n              $scope.processData.set('filter', angular.extend({}, $scope.filter));\n              $rootScope.$broadcast('addVariableNotification');\n            }\n          });\n        };\n      }],\n    priority: 10\n  });\n};\n\nConfiguration.$inject = ['ViewsProvider'];\n\nmodule.exports = Configuration;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvYWRkVmFyaWFibGVBY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xuXG5cbnZhciBhY3Rpb25UZW1wbGF0ZSA9IFwiPCEtLSAjIENFIC0gY2FtdW5kYS1icG0td2ViYXBwL3dlYmFwcC9zcmMvbWFpbi9yZXNvdXJjZXMtcGx1Z2luL2Jhc2UvYXBwL3ZpZXdzL3Byb2Nlc3NJbnN0YW5jZS9hZGQtdmFyaWFibGUtYWN0aW9uLmh0bWwgLS0+XFxuPGEgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tdG9vbGJhclxcXCJcXG4gICBocmVmXFxuICAgbmctY2xpY2s9XFxcIm9wZW5EaWFsb2coKVxcXCJcXG4gICB0b29sdGlwPVxcXCJBZGQgYSBuZXcgdmFyaWFibGUgdG8gUHJvY2VzcyBJbnN0YW5jZVxcXCJcXG4gICB0b29sdGlwLXBsYWNlbWVudD1cXFwibGVmdFxcXCI+XFxuICA8c3BhbiBjbGFzcz1cXFwiZ2x5cGhpY29uIGdseXBoaWNvbi1wbHVzXFxcIj48L3NwYW4+XFxuPC9hPlxcbjwhLS0gLyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9iYXNlL2FwcC92aWV3cy9wcm9jZXNzSW5zdGFuY2UvYWRkLXZhcmlhYmxlLWFjdGlvbi5odG1sIC0tPlxcblwiO1xudmFyIGFkZFRlbXBsYXRlID0gcmVxdWlyZSgnLi4vLi4vLi4vLi4vLi4vY2xpZW50L3NjcmlwdHMvY29tcG9uZW50cy92YXJpYWJsZXMvdmFyaWFibGUtYWRkLWRpYWxvZycpO1xuXG52YXIgQ29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uIFBsdWdpbkNvbmZpZ3VyYXRpb24oVmlld3NQcm92aWRlcikge1xuICBWaWV3c1Byb3ZpZGVyLnJlZ2lzdGVyRGVmYXVsdFZpZXcoJ2NvY2twaXQucHJvY2Vzc0luc3RhbmNlLnJ1bnRpbWUuYWN0aW9uJywge1xuICAgIGlkOiAnYWRkLXZhcmlhYmxlLWFjdGlvbicsXG4gICAgbGFiZWw6ICdBZGQgVmFyaWFibGUgQWN0aW9uJyxcbiAgICB0ZW1wbGF0ZTogYWN0aW9uVGVtcGxhdGUsXG4gICAgY29udHJvbGxlcjogW1xuICAgICAgJyRzY29wZScsICckbW9kYWwnLCAnJHJvb3RTY29wZScsXG4gICAgICBmdW5jdGlvbigkc2NvcGUsICRtb2RhbCwgJHJvb3RTY29wZSkge1xuICAgICAgICAkc2NvcGUub3BlbkRpYWxvZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBkaWFsb2cgPSAkbW9kYWwub3Blbih7XG4gICAgICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICAgICAgcmVzb2x2ZToge1xuICAgICAgICAgICAgICBpbnN0YW5jZTogZnVuY3Rpb24oKSB7IHJldHVybiAkc2NvcGUucHJvY2Vzc0luc3RhbmNlOyB9LFxuICAgICAgICAgICAgICBpc1Byb2Nlc3NJbnN0YW5jZTogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29udHJvbGxlcjogYWRkVGVtcGxhdGUuY29udHJvbGxlcixcbiAgICAgICAgICAgIHRlbXBsYXRlOiBhZGRUZW1wbGF0ZS50ZW1wbGF0ZVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgZGlhbG9nLnJlc3VsdC50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuXG4gICAgICAgICAgICAvLyBkaWFsb2cgY2xvc2VkLiBZRUEhXG4gICAgICAgICAgICBpZiAocmVzdWx0ID09PSAnU1VDQ0VTUycpIHtcbiAgICAgICAgICAgICAgLy8gcmVmcmVzaCBmaWx0ZXIgYW5kIGFsbCB2aWV3c1xuICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0RhdGEuc2V0KCdmaWx0ZXInLCBhbmd1bGFyLmV4dGVuZCh7fSwgJHNjb3BlLmZpbHRlcikpO1xuICAgICAgICAgICAgICAkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2FkZFZhcmlhYmxlTm90aWZpY2F0aW9uJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICB9XSxcbiAgICBwcmlvcml0eTogMTBcbiAgfSk7XG59O1xuXG5Db25maWd1cmF0aW9uLiRpbmplY3QgPSBbJ1ZpZXdzUHJvdmlkZXInXTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb25maWd1cmF0aW9uO1xuIl19","deps":{"../../../../../client/scripts/components/variables/variable-add-dialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/services/decision-list.js":{"source":"'use strict';\n\nmodule.exports = [\n  '$q', 'camAPI',\n  function($q, camAPI) {\n    var decisionDefinitionService = camAPI.resource('decision-definition');\n    var drdService = camAPI.resource('drd');\n\n    return {\n      getDecisionsLists: getDecisionsLists\n    };\n\n    function getDecisionsLists() {\n      var decisions = decisionDefinitionService.list({\n        latestVersion: true,\n        sortBy: 'name',\n        sortOrder: 'asc'\n      });\n      var drds = drdService.list({\n        latestVersion: true,\n        sortBy: 'name',\n        sortOrder: 'asc'\n      });\n\n      return $q\n        .all({\n          decisions: decisions,\n          drds: drds\n        })\n        .then(function(results) {\n          results.decisions = connectDrdsToDecisionDefinitions(results.drds, results.decisions);\n\n          return results;\n        });\n    }\n\n    function connectDrdsToDecisionDefinitions(drds, decisions) {\n      return decisions.map(function(decision) {\n        if (decision.decisionRequirementsDefinitionId) {\n          decision.drd = findDrdById(drds, decision.decisionRequirementsDefinitionId);\n        }\n\n        return decision;\n      });\n    }\n\n    function findDrdById(drds, id) {\n      return drds.filter(function(drd) {\n        return drd.id === id;\n      })[0];\n    }\n  }\n];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/controllers/decision-list.js":{"source":"'use strict';\n\nmodule.exports = [\n  '$scope', 'decisionList', 'isModuleAvailable',\n  function($scope, decisionList, isModuleAvailable) {\n    $scope.loadingState = 'LOADING';\n    $scope.isDrdAvailable = isModuleAvailable('cockpit.plugin.drd');\n\n    decisionList\n      .getDecisionsLists()\n      .then(function(data) {\n        $scope.loadingState = 'LOADED';\n\n        $scope.decisionCount = data.decisions.length;\n        $scope.decisions = data.decisions;\n\n        $scope.drdsCount = data.drds.length;\n        $scope.drds = data.drds;\n      })\n      .catch(function(err) {\n        $scope.loadingError = err.message;\n        $scope.loadingState = 'ERROR';\n\n        throw err;\n      });\n  }\n];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/views/decision-list.js":{"source":"'use strict';\n\n\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\\n<div class=\\\"deployed-decisions\\\"\\n     cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-error=\\\"{{ loadingError }}\\\">\\n\\n  <div decisions-table\\n       decisions=\\\"decisions\\\"\\n       decision-count=\\\"decisionCount\\\"\\n       is-drd-available=\\\"isDrdAvailable\\\">\\n  </div>\\n\\n  <div drds-table\\n       drds=\\\"drds\\\"\\n       drds-count=\\\"drdsCount\\\"\\n       is-drd-available=\\\"isDrdAvailable\\\">\\n  </div>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\\n\";\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n  ViewsProvider.registerDefaultView('cockpit.decisions.dashboard', {\n    id: 'decision-list',\n    label: 'Deployed Decision Tables',\n    template: template,\n    controller: 'DecisionListController',\n    priority: -5 // display below the process definition list\n  });\n}];\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/components/decisions-table.js":{"source":"'use strict';\n\n\n\nvar template = \"<section>\\n  <div class=\\\"inner\\\">\\n    <header>\\n      <h1 class=\\\"section-title\\\">{{decisionCount}} decision {{ (decisionCount > 1 ? 'definitions' : 'definition') }}  deployed</h1>\\n    </header>\\n\\n    <table class=\\\"decision-definitions-list cam-table\\\"\\n           ng-if=\\\"decisionCount\\\">\\n      <thead>\\n      <tr>\\n        <th class=\\\"name\\\">Name</th>\\n        <th class=\\\"tenant-id\\\">Tenant ID</th>\\n        <th class=\\\"tenant-id\\\" ng-if=\\\"isDrdAvailable\\\">Decision Requirements Definition</th>\\n      </tr>\\n      </thead>\\n\\n      <tbody>\\n      <tr ng-repeat=\\\"decision in decisions | orderBy:['name || key','tenantId']:false\\\">\\n        <td class=\\\"name\\\">\\n          <a href=\\\"#/decision-definition/{{ decision.id }}\\\">\\n            {{ decision.name || decision.key }}\\n          </a>\\n        </td>\\n        <td class=\\\"tenant-id\\\">\\n          {{ decision.tenantId }}\\n        </td>\\n        <td class=\\\"drd\\\" ng-if=\\\"isDrdAvailable\\\">\\n          <a href=\\\"#/decision-requirement/{{ decision.drd.id }}\\\">\\n            {{ decision.drd.name || decision.drd.key }}\\n          </a>\\n        </td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <h3 ng-if=\\\"!decisionCount\\\">\\n      No decision tables deployed\\n    </h3>\\n  </div>\\n</section>\\n\\n\";\n\nmodule.exports = function() {\n  return {\n    restrict: 'A',\n    template: template,\n    scope: {\n      decisionCount: '=',\n      decisions: '=',\n      isDrdAvailable: '='\n    }\n  };\n};\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/components/drds-table.js":{"source":"'use strict';\n\n\n\nvar template = \"<section ng-if=\\\"isDrdAvailable\\\">\\n  <div class=\\\"inner\\\">\\n    <header>\\n      <h1 class=\\\"section-title\\\">{{drdsCount}} decision requirements\\n        {{ (drdsCount > 1 ? 'definitions' : 'definition') }} deployed</h1>\\n    </header>\\n\\n    <table class=\\\"drd-definitions-list cam-table\\\" ng-if=\\\"drdsCount\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"name\\\">Name</th>\\n          <th class=\\\"tenant-id\\\">Tenant ID</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr ng-repeat=\\\"drd in drds | orderBy:['name || key','tenantId']:false\\\">\\n          <td class=\\\"name\\\">\\n            <a href=\\\"#/decision-requirement/{{ drd.id }}\\\">\\n              {{ drd.name || drd.key }}\\n            </a>\\n          </td>\\n          <td class=\\\"tenant-id\\\">\\n            {{ drd.tenantId }}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <h3 ng-if=\\\"!drdsCount\\\">\\n      No decision requirements definitions deployed\\n    </h3>\\n  </div>\\n</section>\\n\";\n\nmodule.exports = function() {\n  return {\n    restrict: 'A',\n    template: template,\n    scope: {\n      drds: '=',\n      drdsCount: '=',\n      isDrdAvailable: '='\n    }\n  };\n};\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/index.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar camCommon = (typeof window !== \"undefined\" ? window['cam-common'] : typeof global !== \"undefined\" ? global['cam-common'] : null);\nvar decisionList = require('./views/decision-list');\nvar DecisionListController = require('./controllers/decision-list');\nvar decisionListService = require('./services/decision-list');\nvar decisionsTableComponent = require('./components/decisions-table');\nvar drdsTableComponent = require('./components/drds-table');\n\nvar ngModule = angular.module('cockpit.plugin.decisionList.views.dashboard', [camCommon.name]);\n\nngModule.config(decisionList);\n\nngModule.factory('decisionList', decisionListService);\n\nngModule.controller('DecisionListController', DecisionListController);\n\nngModule.directive('decisionsTable', decisionsTableComponent);\nngModule.directive('drdsTable', drdsTableComponent);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9kZWNpc2lvbkxpc3QvYXBwL3ZpZXdzL2Rhc2hib2FyZC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcbnZhciBjYW1Db21tb24gPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snY2FtLWNvbW1vbiddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnY2FtLWNvbW1vbiddIDogbnVsbCk7XG52YXIgZGVjaXNpb25MaXN0ID0gcmVxdWlyZSgnLi92aWV3cy9kZWNpc2lvbi1saXN0Jyk7XG52YXIgRGVjaXNpb25MaXN0Q29udHJvbGxlciA9IHJlcXVpcmUoJy4vY29udHJvbGxlcnMvZGVjaXNpb24tbGlzdCcpO1xudmFyIGRlY2lzaW9uTGlzdFNlcnZpY2UgPSByZXF1aXJlKCcuL3NlcnZpY2VzL2RlY2lzaW9uLWxpc3QnKTtcbnZhciBkZWNpc2lvbnNUYWJsZUNvbXBvbmVudCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9kZWNpc2lvbnMtdGFibGUnKTtcbnZhciBkcmRzVGFibGVDb21wb25lbnQgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvZHJkcy10YWJsZScpO1xuXG52YXIgbmdNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnY29ja3BpdC5wbHVnaW4uZGVjaXNpb25MaXN0LnZpZXdzLmRhc2hib2FyZCcsIFtjYW1Db21tb24ubmFtZV0pO1xuXG5uZ01vZHVsZS5jb25maWcoZGVjaXNpb25MaXN0KTtcblxubmdNb2R1bGUuZmFjdG9yeSgnZGVjaXNpb25MaXN0JywgZGVjaXNpb25MaXN0U2VydmljZSk7XG5cbm5nTW9kdWxlLmNvbnRyb2xsZXIoJ0RlY2lzaW9uTGlzdENvbnRyb2xsZXInLCBEZWNpc2lvbkxpc3RDb250cm9sbGVyKTtcblxubmdNb2R1bGUuZGlyZWN0aXZlKCdkZWNpc2lvbnNUYWJsZScsIGRlY2lzaW9uc1RhYmxlQ29tcG9uZW50KTtcbm5nTW9kdWxlLmRpcmVjdGl2ZSgnZHJkc1RhYmxlJywgZHJkc1RhYmxlQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBuZ01vZHVsZTtcbiJdfQ==","deps":{"./services/decision-list":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/services/decision-list.js","./controllers/decision-list":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/controllers/decision-list.js","./views/decision-list":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/views/decision-list.js","./components/decisions-table":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/components/decisions-table.js","./components/drds-table":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/components/drds-table.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/main.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    dashboard = require('./dashboard'),\n    // decision definition\n    decisionInstanceTable = require('./decisionDefinition/decisionInstanceTable'),\n\n    // decision instance\n    inputTable = require('./decisionInstance/inputTable'),\n    outputTable = require('./decisionInstance/outputTable'),\n\n    // decision instance table\n    highlightRules = require('./decisionInstance/highlightRules'),\n    realInput = require('./decisionInstance/realInput'),\n    realOutput = require('./decisionInstance/realOutput');\n\nvar ngModule = angular.module('cockpit.plugin.decisionList.views', [dashboard.name]);\n\nngModule.config(decisionInstanceTable);\nngModule.config(inputTable);\nngModule.config(outputTable);\nngModule.config(highlightRules);\nngModule.config(realInput);\nngModule.config(realOutput);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9kZWNpc2lvbkxpc3QvYXBwL3ZpZXdzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKSxcbiAgICBkYXNoYm9hcmQgPSByZXF1aXJlKCcuL2Rhc2hib2FyZCcpLFxuICAgIC8vIGRlY2lzaW9uIGRlZmluaXRpb25cbiAgICBkZWNpc2lvbkluc3RhbmNlVGFibGUgPSByZXF1aXJlKCcuL2RlY2lzaW9uRGVmaW5pdGlvbi9kZWNpc2lvbkluc3RhbmNlVGFibGUnKSxcblxuICAgIC8vIGRlY2lzaW9uIGluc3RhbmNlXG4gICAgaW5wdXRUYWJsZSA9IHJlcXVpcmUoJy4vZGVjaXNpb25JbnN0YW5jZS9pbnB1dFRhYmxlJyksXG4gICAgb3V0cHV0VGFibGUgPSByZXF1aXJlKCcuL2RlY2lzaW9uSW5zdGFuY2Uvb3V0cHV0VGFibGUnKSxcblxuICAgIC8vIGRlY2lzaW9uIGluc3RhbmNlIHRhYmxlXG4gICAgaGlnaGxpZ2h0UnVsZXMgPSByZXF1aXJlKCcuL2RlY2lzaW9uSW5zdGFuY2UvaGlnaGxpZ2h0UnVsZXMnKSxcbiAgICByZWFsSW5wdXQgPSByZXF1aXJlKCcuL2RlY2lzaW9uSW5zdGFuY2UvcmVhbElucHV0JyksXG4gICAgcmVhbE91dHB1dCA9IHJlcXVpcmUoJy4vZGVjaXNpb25JbnN0YW5jZS9yZWFsT3V0cHV0Jyk7XG5cbnZhciBuZ01vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdjb2NrcGl0LnBsdWdpbi5kZWNpc2lvbkxpc3Qudmlld3MnLCBbZGFzaGJvYXJkLm5hbWVdKTtcblxubmdNb2R1bGUuY29uZmlnKGRlY2lzaW9uSW5zdGFuY2VUYWJsZSk7XG5uZ01vZHVsZS5jb25maWcoaW5wdXRUYWJsZSk7XG5uZ01vZHVsZS5jb25maWcob3V0cHV0VGFibGUpO1xubmdNb2R1bGUuY29uZmlnKGhpZ2hsaWdodFJ1bGVzKTtcbm5nTW9kdWxlLmNvbmZpZyhyZWFsSW5wdXQpO1xubmdNb2R1bGUuY29uZmlnKHJlYWxPdXRwdXQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5nTW9kdWxlO1xuIl19","deps":{"./decisionInstance/highlightRules":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/highlightRules.js","./decisionInstance/realInput":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/realInput.js","./decisionInstance/realOutput":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/realOutput.js","./decisionInstance/inputTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/inputTable.js","./decisionInstance/outputTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionInstance/outputTable.js","./decisionDefinition/decisionInstanceTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/decisionDefinition/decisionInstanceTable.js","./dashboard":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/dashboard/index.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/plugin.js":{"source":"(function (global){\n/**\n * @namespace cam.cockpit.plugin\n */\n\n/**\n * @namespace cam.cockpit.plugin.decisionList\n */\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    viewsModule = require('./views/main');\n\nmodule.exports = angular.module('cockpit.plugin.decisionList', [viewsModule.name]);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9kZWNpc2lvbkxpc3QvYXBwL3BsdWdpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZXNwYWNlIGNhbS5jb2NrcGl0LnBsdWdpblxuICovXG5cbi8qKlxuICogQG5hbWVzcGFjZSBjYW0uY29ja3BpdC5wbHVnaW4uZGVjaXNpb25MaXN0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG4gICAgdmlld3NNb2R1bGUgPSByZXF1aXJlKCcuL3ZpZXdzL21haW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhbmd1bGFyLm1vZHVsZSgnY29ja3BpdC5wbHVnaW4uZGVjaXNpb25MaXN0JywgW3ZpZXdzTW9kdWxlLm5hbWVdKTtcbiJdfQ==","deps":{"./views/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/views/main.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/includes.js":{"source":"'use strict';\n\nmodule.exports = includes;\n\nfunction includes(array, value) {\n  return array.indexOf(value) !== -1;\n}\n","deps":{}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/pagination-utils.js":{"source":"'use strict';\n\nvar angular = require('camunda-commons-ui/vendor/angular');\n\nvar DEFAULT_PAGES = { size: 50, total: 0, current: 1 };\n\nmodule.exports = {\n  initializePaginationInController: initializePaginationInController\n};\n\n/**\n * Initializes pagination in controller.\n *\n * @param $scope\n * @param search service from controller\n * @param updateCallback callback function that is called each time pagination changes,\n *                       takes two argument newPage and oldPage.\n * @returns {*}\n */\nfunction initializePaginationInController($scope, search, updateCallback) {\n  var pages = $scope.pages = angular.copy(DEFAULT_PAGES);\n  pages.current = getCurrentPageFromSearch(search);\n\n  $scope.$watch('pages.current', function(newValue, oldValue) {\n    if (newValue == oldValue) {\n      return;\n    }\n\n    search('page', !newValue || newValue == 1 ? null : newValue);\n\n    updateCallback(newValue, oldValue);\n  });\n\n  return pages;\n}\n\nfunction getCurrentPageFromSearch(search) {\n  return search().page || 1;\n}\n","deps":{"camunda-commons-ui/vendor/angular":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/vendor/angular.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/variableInstancesTab.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\n\n\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\nvar paginationUtils = require('../../../../../../common/scripts/util/pagination-utils');\nvar variableInstancesTabSearchConfig = JSON.parse(\"{\\n  \\\"types\\\": [\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"variableName\\\",\\n        \\\"value\\\": \\\"Variable Name\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"Like\\\",\\n          \\\"value\\\": \\\"like\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"activityInstanceIdIn\\\",\\n        \\\"value\\\": \\\"Activity Instance ID\\\"\\n      },\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"id\\\": {\\n        \\\"key\\\": \\\"variableValues\\\",\\n        \\\"value\\\": \\\"Variable Value\\\"\\n      },\\n      \\\"extended\\\": true,\\n      \\\"operators\\\": [\\n        {\\n          \\\"key\\\": \\\"eq\\\",\\n          \\\"value\\\": \\\"=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"neq\\\",\\n          \\\"value\\\": \\\"!=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"gt\\\",\\n          \\\"value\\\": \\\">\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"gteq\\\",\\n          \\\"value\\\": \\\">=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"lt\\\",\\n          \\\"value\\\": \\\"<\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"lteq\\\",\\n          \\\"value\\\": \\\"<=\\\"\\n        },\\n        {\\n          \\\"key\\\": \\\"like\\\",\\n          \\\"value\\\": \\\"like\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"operators\\\": {\\n    \\\"undefined\\\":  [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"string\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"like\\\",\\n        \\\"value\\\": \\\"like\\\"\\n      }\\n    ],\\n    \\\"number\\\":     [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gt\\\",\\n        \\\"value\\\": \\\">\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\">=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lt\\\",\\n        \\\"value\\\": \\\"<\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"lteq\\\",\\n        \\\"value\\\": \\\"<=\\\"\\n      }\\n    ],\\n    \\\"boolean\\\":    [\\n      {\\n        \\\"key\\\": \\\"eq\\\",\\n        \\\"value\\\": \\\"=\\\"\\n      },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }\\n    ],\\n    \\\"object\\\":     [{\\n      \\\"key\\\": \\\"eq\\\",\\n      \\\"value\\\": \\\"=\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"neq\\\",\\n        \\\"value\\\": \\\"!=\\\"\\n      }],\\n    \\\"date\\\":     [{\\n      \\\"key\\\": \\\"lteq\\\",\\n      \\\"value\\\": \\\"before\\\"\\n    },\\n      {\\n        \\\"key\\\": \\\"gteq\\\",\\n        \\\"value\\\": \\\"after\\\"\\n      }]\\n  },\\n  \\\"tooltips\\\": {\\n    \\\"inputPlaceholder\\\": \\\"Add criteria\\\",\\n    \\\"invalid\\\": \\\"This search query is not valid\\\",\\n    \\\"deleteSearch\\\": \\\"Remove search\\\",\\n    \\\"type\\\": \\\"Type\\\",\\n    \\\"name\\\": \\\"Property\\\",\\n    \\\"operator\\\": \\\"Operator\\\",\\n    \\\"value\\\": \\\"Value\\\"\\n  }\\n}\\n\");\n\nvar instancesTemplate = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\\n<div cam-widget-search\\n     cam-widget-search-valid-searches=\\\"searchConfig.searches\\\"\\n     cam-widget-search-translations=\\\"searchConfig.tooltips\\\"\\n     cam-widget-search-types=\\\"searchConfig.types\\\"\\n     cam-widget-search-operators=\\\"searchConfig.operators\\\"\\n     cam-widget-search-mode=\\\"filter\\\">\\n</div>\\n\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No process variables\\\">\\n  <!-- <div cam-widget-debug debugged=\\\"variables\\\"></div> -->\\n\\n  <div cam-widget-variables-table\\n       on-save=\\\"saveVariable\\\"\\n       on-edit=\\\"editVariable\\\"\\n       on-upload=\\\"uploadVariable\\\"\\n       on-delete=\\\"deleteVariable\\\"\\n       on-download=\\\"downloadVariable\\\"\\n       cam-variables=\\\"variables\\\"\\n       cam-editable=\\\"['type', 'value']\\\"\\n       cam-headers=\\\"{ name: 'Name', value: 'Value', type: 'Type', scope: 'Scope' }\\\"></div>\\n\\n\\n  <pagination ng-if=\\\"pages.total > pages.size\\\"\\n              class=\\\"pagination-sm\\\"\\n\\n              page=\\\"pages.current\\\"\\n              ng-model=\\\"pages.current\\\"\\n\\n              total-items=\\\"pages.total\\\"\\n              items-per-page=\\\"pages.size\\\"\\n\\n              max-size=\\\"7\\\"\\n              boundary-links=\\\"true\\\"></pagination>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\\n\";\nvar inspectTemplate = require('../../../../../client/scripts/components/variables/variable-inspect-dialog');\nvar uploadTemplate = require('../../../../../client/scripts/components/variables/variable-upload-dialog');\n\n\nmodule.exports = function(ngModule) {\n  ngModule.controller('VariableInstancesController', [\n    '$scope', '$sce', '$http', 'search', 'Uri', 'LocalExecutionVariableResource', 'Notifications', '$modal', '$q', 'camAPI',\n    function($scope,   $sce,   $http,   search,   Uri,   LocalExecutionVariableResource,   Notifications,   $modal,   $q,   camAPI) {\n\n        // input: processInstance, processData\n\n      var variableInstanceData = $scope.processData.newChild($scope),\n          processInstance = $scope.processInstance,\n          variableInstanceIdexceptionMessageMap,\n          variableCopies;\n\n      var executionService = camAPI.resource('execution'),\n          taskService = camAPI.resource('task');\n\n      var pages = paginationUtils.initializePaginationInController($scope, search, function(newValue, oldValue) {\n        if (!angular.equals(newValue, oldValue)) {\n          updateView($scope.instanceIdToInstanceMap, $scope.searchConfig.searches);\n        }\n      });\n\n      variableInstanceData.provide('pages', pages);\n\n      $scope.searchConfig = angular.copy(variableInstancesTabSearchConfig);\n      variableInstanceData.provide('searches', angular.copy($scope.searchConfig.searches));\n\n      $scope.$watch('searchConfig.searches', function(newValue, oldValue) {\n        if (!angular.equals(newValue, oldValue)) {\n          variableInstanceData.set('searches', angular.copy($scope.searchConfig.searches));\n        }\n      });\n\n      variableInstanceData.observe('instanceIdToInstanceMap', function(instanceIdToInstanceMap) {\n        $scope.instanceIdToInstanceMap = instanceIdToInstanceMap;\n      });\n\n      $scope.getSearchQueryForSearchType = searchWidgetUtils.getSearchQueryForSearchType.bind(null, 'activityInstanceIdIn');\n\n      $scope.$on('addVariableNotification', function() {\n        updateView($scope.instanceIdToInstanceMap, $scope.searchConfig.searches);\n      });\n\n      variableInstanceData.observe(\n        ['instanceIdToInstanceMap', 'searches'],\n        function(instanceIdToInstanceMap, searches) {\n          if (searches) {\n            updateView(instanceIdToInstanceMap, searches);\n          }\n        }\n      );\n\n      $scope.uploadVariable = function(info) {\n        var promise = $q.defer();\n        $modal.open({\n          resolve: {\n            basePath: function() { return getBasePath(info.variable); },\n            variable: function() { return info.variable; }\n          },\n          controller: uploadTemplate.controller,\n          template: uploadTemplate.template\n        })\n        .result.then(function() {\n          // updated the variable, need to get the new data\n          // reject the promise anyway\n          promise.reject();\n\n          // but then update the filter to force re-get of variables\n          variableInstanceData.set('filter', angular.copy($scope.filter));\n        }, function() {\n          // did not update the variable, reject the promise\n          promise.reject();\n        });\n\n        return promise.promise;\n      };\n\n      $scope.downloadVariable = function(info) {\n        return Uri.appUri('engine://engine/:engine/variable-instance/' + info.variable.id +'/data');\n      };\n\n      $scope.deleteVariable = function(info) {\n        var promise = $q.defer();\n\n        var callback = function(error) {\n          if(error) {\n            Notifications.addError({\n              status: 'Variable',\n              message: 'The variable \\'' + info.variable.name + '\\' could not be deleted successfully.',\n              exclusive: true,\n              duration: 5000\n            });\n            promise.reject();\n          } else {\n            Notifications.addMessage({\n              status: 'Variable',\n              message: 'The variable \\'' + info.variable.name + '\\' has been deleted successfully.',\n              duration: 5000\n            });\n            promise.resolve(info.variable);\n          }\n        };\n\n        if(info.original.taskId) {\n          taskService.deleteVariable({\n            id: info.original.taskId,\n            varId: info.variable.name\n          }, callback);\n        } else {\n          executionService.deleteVariable({\n            id: info.variable.executionId,\n            varId: info.variable.name\n          }, callback);\n        }\n\n        return promise.promise;\n      };\n\n      $scope.editVariable = function(info) {\n        var promise = $q.defer();\n\n        $modal.open({\n          template: inspectTemplate.template,\n\n          controller: inspectTemplate.controller,\n\n          windowClass: 'cam-widget-variable-dialog',\n\n          resolve: {\n            basePath: function() { return getBasePath(info.variable); },\n            history: function() { return false; },\n            readonly: function() { return false; },\n            variable: function() { return info.variable; }\n          }\n        })\n        .result.then(function() {\n          // updated the variable, need to get the new data\n          // reject the promise anyway\n          promise.reject();\n\n          // but then update the filter to force re-get of variables\n          variableInstanceData.set('filter', angular.copy($scope.filter));\n        }, function() {\n          // did not update the variable, reject the promise\n          promise.reject();\n        });\n\n        return promise.promise;\n      };\n\n      $scope.saveVariable = function(info) {\n        var promise = $q.defer();\n        var variable = info.variable;\n        var modifiedVariable = {};\n\n        var newValue = variable.value;\n        var newType = variable.type;\n\n        var newVariable = { value: newValue, type: newType };\n        modifiedVariable[variable.name] = newVariable;\n\n        var callback = function(error) {\n          if(error) {\n            Notifications.addError({\n              status: 'Variable',\n              message: 'The variable \\'' + variable.name + '\\' could not be changed successfully.',\n              exclusive: true,\n              duration: 5000\n            });\n            variableInstanceIdexceptionMessageMap[variable.id] = error.data;\n            promise.reject();\n          } else {\n            Notifications.addMessage({\n              status: 'Variable',\n              message: 'The variable \\'' + variable.name + '\\' has been changed successfully.',\n              duration: 5000\n            });\n            angular.extend(variable, newVariable);\n            promise.resolve(info.variable);\n          }\n        };\n\n        if(info.original.taskId) {\n          taskService.modifyVariables({\n            id: info.original.taskId,\n            modifications: modifiedVariable\n          }, callback);\n        } else {\n          executionService.modifyVariables({\n            id: variable.executionId,\n            modifications: modifiedVariable\n          }, callback);\n        }\n\n        return promise.promise;\n      };\n\n\n      function getBasePath(variable) {\n        return 'engine://engine/:engine/execution/' + variable.executionId + '/localVariables/' + variable.name;\n      }\n\n      function updateView(instanceIdToInstanceMap, searches) {\n        var page = pages.current,\n            count = pages.size,\n            firstResult = (page - 1) * count;\n\n        var defaultParams = {\n          processInstanceIdIn: [ processInstance.id ]\n        };\n\n        var pagingParams = {\n          firstResult: firstResult,\n          maxResults: count,\n          deserializeValues: false\n        };\n\n        var variableQuery = searchWidgetUtils.createSearchQueryForSearchWidget(searches, ['activityInstanceIdIn'], ['variableValues']);\n\n        var params = angular.extend({}, defaultParams, variableQuery);\n\n        $scope.variables = null;\n        $scope.loadingState = 'LOADING';\n\n          // get the 'count' of variables\n        $http.post(Uri.appUri('engine://engine/:engine/variable-instance/count'), params).success(function(data) {\n          pages.total = data.count;\n        });\n\n        variableInstanceIdexceptionMessageMap = {};\n        variableCopies = {};\n\n        $http.post(Uri.appUri('engine://engine/:engine/variable-instance/'), params, { params: pagingParams }).success(function(data) {\n\n          $scope.variables = data.map(function(item) {\n            var instance = instanceIdToInstanceMap[item.activityInstanceId];\n            item.instance = instance;\n            variableCopies[item.id] = angular.copy(item);\n\n              // prevents the list to throw an error when the activity instance is missing\n            var activityInstanceLink = '';\n            if(instance) {\n              activityInstanceLink = '<a ng-href=\"#/process-instance/' +\n                  processInstance.id + '/runtime' +\n                  '?detailsTab=variables-tab&'+ $scope.getSearchQueryForSearchType(instance.id) +\n                  '\" title=\"' +\n                  instance.id +\n                  '\">' +\n                  instance.name  +\n                  '</a>';\n            }\n\n            return {\n              variable: {\n                id:           item.id,\n                name:         item.name,\n                type:         item.type,\n                value:        item.value,\n                valueInfo:    item.valueInfo,\n                executionId:  item.executionId\n              },\n              original: item,\n              additions: {\n                scope: {\n                  html: activityInstanceLink,\n                  scopeVariables: {\n                    processData: $scope.processData\n                  }\n                }\n              }\n            };\n          });\n\n          $scope.loadingState = data.length ? 'LOADED' : 'EMPTY';\n        });\n      }\n\n    }]);\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('cockpit.processInstance.runtime.tab', {\n      id: 'variables-tab',\n      label: 'Variables',\n      template: instancesTemplate,\n      controller: 'VariableInstancesController',\n      priority: 20\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n  ngModule.config(Configuration);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js","../../../../../client/scripts/components/variables/variable-inspect-dialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-inspect-dialog.js","../../../../../client/scripts/components/variables/variable-upload-dialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-upload-dialog.js","../../../../../../common/scripts/util/pagination-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/pagination-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/node_modules/camunda-bpm-sdk-js/vendor/angular.js":{"source":"'use strict';\n\nmodule.exports = require('angular');\n","deps":{"angular":false}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/vendor/angular.js":{"source":"'use strict';\nmodule.exports = require('camunda-bpm-sdk-js/vendor/angular');\n","deps":{"camunda-bpm-sdk-js/vendor/angular":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/node_modules/camunda-bpm-sdk-js/vendor/angular.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js":{"source":"'use strict';\n\nvar angular = require('camunda-commons-ui/vendor/angular');\nvar includes = require('./includes');\n\nmodule.exports = {\n  getSearchQueryForSearchType: getSearchQueryForSearchType,\n  getActivityIdsFromUrlParams: getActivityIdsFromUrlParams,\n  replaceActivitiesInSearchQuery: replaceActivitiesInSearchQuery,\n  createSearchQueryForSearchWidget: createSearchQueryForSearchWidget,\n  shouldUpdateFilter: shouldUpdateFilter,\n  createSearchesForActivityIds: createSearchesForActivityIds,\n  encodeQuery: encodeQuery,\n  updateSearchValuesForTypeInCtrlMode: updateSearchValuesForTypeInCtrlMode\n};\n\n/**\n * Creates url part for search query with values for given search type\n *\n * @param searchType\n * @param values list of ids or single id\n */\nfunction getSearchQueryForSearchType(searchType, values) {\n  values = [].concat(values); //convert single id to list of ids or in case of array do nothing\n\n  var value = JSON.stringify(\n    createSearchesForActivityIds(searchType, values)\n  );\n\n  return encodeQuery('searchQuery='+value);\n}\n\nfunction encodeQuery(query) {\n  return encodeURI(query)\n    .replace(/#/g, '%23');\n}\n\n/**\n * Function that returns true when filter has meaningful changes.\n *\n * @param newFilter\n * @param currentFilter\n * @param whiteList list of properties that should be ignored while comparing object, by default []\n * @returns {boolean}\n */\nfunction shouldUpdateFilter(newFilter, currentFilter, whiteList) {\n  whiteList = angular.isArray(whiteList) ? whiteList : [];\n\n  return !angular.equals(\n    prepareObjectForComparing(newFilter, whiteList),\n    prepareObjectForComparing(currentFilter, whiteList)\n  );\n}\n\nfunction prepareObjectForComparing(obj, whiteList) {\n  if (!angular.isObject(obj)) {\n    return obj;\n  }\n\n  return stripUndefinedFromObject(\n    stripProperties(obj, whiteList)\n  );\n}\n\nfunction stripProperties(obj, whiteList) {\n  return Object\n    .keys(obj)\n    .reduce(function(newObj, key) {\n      var value = obj[key];\n\n      if (includes(whiteList, key)) {\n        newObj[key] = value;\n      }\n\n      return newObj;\n    }, {});\n}\n\nfunction stripUndefinedFromObject(obj) {\n  return Object\n    .keys(obj)\n    .reduce(function(newObj, key) {\n      var value = obj[key];\n\n      if (value != null) {\n        newObj[key] = value;\n      }\n\n      return newObj;\n    }, {});\n}\n\n/**\n * Extracts activity ids from searchQuery param\n *\n * @param searchType type of pill with activity ids\n * @param params url params\n * @returns {*}\n */\nfunction getActivityIdsFromUrlParams(searchType, params) {\n  var searches = JSON.parse(params.searchQuery || '[]');\n\n  return getActivityIdsFromSearches(searchType, searches);\n}\n\nfunction getActivityIdsFromSearches(searchType, searches) {\n  return searches\n    .filter(function(search) {\n      return search.type === searchType;\n    })\n    .map(function(search) {\n      return search.value;\n    });\n}\n\n/**\n * Updates values in search query for given search type when control is pressed\n *\n * @param searches\n * @param searchType\n * @param values\n * @returns {Array.<T>|string}\n */\nfunction updateSearchValuesForTypeInCtrlMode(searches, searchType, values) {\n  var newSearches = removeDoubledSearches(searches, values, searchType);\n  var newValues = removeDoubleValues(values, searches, searchType);\n\n  return newSearches.concat(createSearchesForActivityIds(searchType, newValues));\n}\n\nfunction removeDoubledSearches(searches, values, searchType) {\n  return searches.filter(function(search) {\n    return search.type !== searchType || !includes(values, search.value);\n  });\n}\n\nfunction removeDoubleValues(values, searches, searchType) {\n  var searchesValues = searches\n    .filter(function(search) {\n      return search.type === searchType;\n    })\n    .map(function(search) {\n      return search.value;\n    });\n\n  return values.filter(function(value) {\n    return !includes(searchesValues, value);\n  });\n}\n\n/**\n * Updates search widget with selected activity ids (usually from filter)\n *\n * @param search service that updates location search\n * @param searchType type of activity search pill\n * @param selectedActivityIds list of ids for selected activities\n */\nfunction replaceActivitiesInSearchQuery(searches, searchType, selectedActivityIds) {\n  return removeActivitySearches(searchType, searches)\n    .concat(createSearchesForActivityIds(searchType, selectedActivityIds));\n}\n\nfunction removeActivitySearches(searchType, searches) {\n  return searches.filter(function(search) {\n    return search.type !== searchType;\n  });\n}\n\nfunction createSearchesForActivityIds(searchType, activityIds) {\n  return activityIds.map(\n    createActivitySearch.bind(null, searchType)\n  );\n}\n\nfunction createActivitySearch(searchType, value) {\n  return {\n    type: searchType,\n    operator: 'eq',\n    value: value\n  };\n}\n\n/**\n * Function that creates query parameters based on search pills\n *\n * @param searches list of search pills\n * @param arrayTypes list of types that should be arrays\n * @param variableTypes list of types that should be treated as variables,\n *        by default it is singleton with variable type\n * @returns {*}\n */\nfunction createSearchQueryForSearchWidget(searches, arrayTypes, variableTypes) {\n  searches = angular.isArray(searches) ? searches : [];\n  arrayTypes = angular.isArray(arrayTypes) ? arrayTypes : [];\n  variableTypes = angular.isArray(variableTypes) ? variableTypes : ['variables'];\n\n  //all variable types are also array types\n  arrayTypes = arrayTypes.concat(variableTypes);\n\n  return searches.reduce(\n    addSearchToQuery.bind(null, arrayTypes, variableTypes),\n    {}\n  );\n}\n\nfunction addSearchToQuery(arrayTypes, variableTypes, query, search) {\n  var type = getSearchType(search, variableTypes);\n  var value = getSearchValue(search, type, variableTypes);\n\n  if (includes(variableTypes, type)) {\n    value = createVariableValue(search, value);\n  }\n\n  if (includes(arrayTypes, type)) {\n    query[type] = appendNewValueToArrayType(query, type, value);\n  } else {\n    query[type] = value;\n  }\n\n  return query;\n}\n\nfunction getSearchType(search, variableTypes) {\n  var type = search.type.value.key;\n  var op = search.operator.value.key;\n\n  if (isDateType(type)) {\n    type = type.slice(0, -4);\n  }\n\n  if (isOperatorAppendable(op) && !includes(variableTypes, type)) {\n    type += op;\n  }\n\n  return type;\n}\n\nfunction isDateType(type) {\n  return type.indexOf('Date') !== -1;\n}\n\nfunction isOperatorAppendable(op) {\n  return includes(['After', 'Before', 'Like'], op);\n}\n\nfunction getSearchValue(search) {\n  if (search.basic) {\n    return true;\n  }\n\n  return sanitizeValue(parseValue(search.value.value), search.operator.value.key);\n}\n\nfunction sanitizeValue(value, operator) {\n  if (includes(['like', 'Like'], operator)) {\n    return '%'+value+'%';\n  }\n  return value;\n}\n\nfunction parseValue(value) {\n  if (!isNaN(value) && value.trim() !== '') {\n    // value must be transformed to number\n    return +value;\n  }\n  if (value === 'true') {\n    return true;\n  }\n  if (value === 'false') {\n    return false;\n  }\n  if (value === 'NULL') {\n    return null;\n  }\n  if(value.indexOf('\\'') === 0 && value.lastIndexOf('\\'') === value.length - 1) {\n    return value.substr(1, value.length - 2);\n  }\n  return value;\n}\n\nfunction createVariableValue(search, value) {\n  return {\n    name: search.name.value,\n    operator: search.operator.value.key,\n    value: value\n  };\n}\n\nfunction appendNewValueToArrayType(query, type, value) {\n  return angular.isArray(query[type]) ? query[type].concat([value]) : [value];\n}\n","deps":{"./includes":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/includes.js","camunda-commons-ui/vendor/angular":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/vendor/angular.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/calledProcessDefinitionTable.js":{"source":"(function (global){\n'use strict';\n\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null);\nvar searchWidgetUtils = require('../../../../../../common/scripts/util/search-widget-utils');\n\nvar template = \"<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\\n<div cam-widget-loader\\n     loading-state=\\\"{{ loadingState }}\\\"\\n     text-empty=\\\"No called process definitions\\\">\\n  <table class=\\\"called-process-definition cam-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"process-definition\\\">Called Process Definition</th>\\n        <th class=\\\"activity\\\">Activity</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr ng-repeat=\\\"calledProcessDefinition in calledProcessDefinitions\\\">\\n        <td class=\\\"process-definition\\\"\\n            cam-widget-clipboard=\\\"calledProcessDefinition.id\\\">\\n          <a ng-href=\\\"#/process-definition/{{ calledProcessDefinition.id }}/runtime?parentProcessDefinitionId={{ processDefinition.id }}\\\">\\n            {{ calledProcessDefinition.name }}\\n          </a>\\n        </td>\\n\\n        <td class=\\\"activity\\\">\\n          <span ng-show=\\\"calledProcessDefinition.calledFromActivities.length === 1\\\"\\n                cam-widget-clipboard=\\\"calledProcessDefinition.calledFromActivities[0].id\\\">\\n            <a ng-href=\\\"#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(calledProcessDefinition.calledFromActivities[0].id) }}&amp;detailsTab=call-process-definitions-table\\\">\\n              {{ calledProcessDefinition.calledFromActivities[0].name }}\\n            </a>\\n          </span>\\n\\n          <ul ng-show=\\\"calledProcessDefinition.calledFromActivities.length > 1\\\">\\n            <li ng-repeat=\\\"activity in calledProcessDefinition.calledFromActivities\\\"\\n                cam-widget-clipboard=\\\"activity.id\\\">\\n              <a ng-href=\\\"#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(activity.id) }}&amp;detailsTab=call-process-definitions-table\\\">\\n                {{ activity.name }}\\n              </a>\\n            </li>\\n          <ul>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\\n\";\n\n\nmodule.exports = [ 'ViewsProvider', function(ViewsProvider) {\n\n  ViewsProvider.registerDefaultView('cockpit.processDefinition.runtime.tab', {\n    id: 'call-process-definitions-table',\n    label: 'Called Process Definitions',\n    template: template,\n    controller: [\n      '$scope', '$location', '$q', 'PluginProcessDefinitionResource',\n      function($scope, $location, $q, PluginProcessDefinitionResource) {\n\n        var filter;\n        var processData = $scope.processData.newChild($scope);\n\n        $scope.getSearchQueryForSearchType = searchWidgetUtils.getSearchQueryForSearchType.bind(null, 'activityIdIn');\n\n        processData.provide('calledProcessDefinitions', [\n          'processDefinition', 'filter',\n          function(processDefinition,   newFilter) {\n\n            filter = angular.copy(newFilter);\n\n            delete filter.page;\n            delete filter.scrollToBpmnElement;\n\n          // the parent process definition id is the super process definition id...\n            filter.superProcessDefinitionId = filter.parentProcessDefinitionId;\n          // ...and the process definition id of the current view is the\n          // parent process definition id of query.\n            filter.parentProcessDefinitionId = $scope.processDefinition.id;\n\n            filter.activityIdIn = filter.activityIds;\n            delete filter.activityIds;\n\n            $scope.loadingState = 'LOADING';\n            return PluginProcessDefinitionResource.getCalledProcessDefinitions({ id: processDefinition.id }, filter).$promise;\n          }]);\n\n        processData.observe([ 'calledProcessDefinitions', 'bpmnElements' ], function(calledProcessDefinitions, bpmnElements) {\n\n          $scope.calledProcessDefinitions = attachCalledFromActivities(calledProcessDefinitions, bpmnElements);\n          $scope.loadingState = $scope.calledProcessDefinitions.length ? 'LOADED' : 'EMPTY';\n        });\n\n        function attachCalledFromActivities(processDefinitions, bpmnElements) {\n\n          var result = [];\n\n          angular.forEach(processDefinitions, function(d) {\n            var calledFromActivityIds = d.calledFromActivityIds,\n                calledFromActivities = [];\n\n            angular.forEach(calledFromActivityIds, function(activityId) {\n              var bpmnElement = bpmnElements[activityId];\n\n              var activity = { id: activityId, name: (bpmnElement && bpmnElement.name) || activityId };\n\n              calledFromActivities.push(activity);\n            });\n\n            result.push(angular.extend({}, d, { calledFromActivities: calledFromActivities }));\n          });\n\n          return result;\n        }\n      }],\n    priority: 5\n  });\n}];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9jYWxsZWRQcm9jZXNzRGVmaW5pdGlvblRhYmxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcbnZhciBzZWFyY2hXaWRnZXRVdGlscyA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uLy4uLy4uL2NvbW1vbi9zY3JpcHRzL3V0aWwvc2VhcmNoLXdpZGdldC11dGlscycpO1xuXG52YXIgdGVtcGxhdGUgPSBcIjwhLS0gIyBDRSAtIGNhbXVuZGEtYnBtLXdlYmFwcC93ZWJhcHAvc3JjL21haW4vcmVzb3VyY2VzLXBsdWdpbi9iYXNlL2FwcC92aWV3cy9wcm9jZXNzRGVmaW5pdGlvbi9jYWxsZWQtcHJvY2Vzcy1kZWZpbml0aW9uLXRhYmxlLmh0bWwgLS0+XFxuPGRpdiBjYW0td2lkZ2V0LWxvYWRlclxcbiAgICAgbG9hZGluZy1zdGF0ZT1cXFwie3sgbG9hZGluZ1N0YXRlIH19XFxcIlxcbiAgICAgdGV4dC1lbXB0eT1cXFwiTm8gY2FsbGVkIHByb2Nlc3MgZGVmaW5pdGlvbnNcXFwiPlxcbiAgPHRhYmxlIGNsYXNzPVxcXCJjYWxsZWQtcHJvY2Vzcy1kZWZpbml0aW9uIGNhbS10YWJsZVxcXCI+XFxuICAgIDx0aGVhZD5cXG4gICAgICA8dHI+XFxuICAgICAgICA8dGggY2xhc3M9XFxcInByb2Nlc3MtZGVmaW5pdGlvblxcXCI+Q2FsbGVkIFByb2Nlc3MgRGVmaW5pdGlvbjwvdGg+XFxuICAgICAgICA8dGggY2xhc3M9XFxcImFjdGl2aXR5XFxcIj5BY3Rpdml0eTwvdGg+XFxuICAgICAgPC90cj5cXG4gICAgPC90aGVhZD5cXG5cXG4gICAgPHRib2R5PlxcbiAgICAgIDx0ciBuZy1yZXBlYXQ9XFxcImNhbGxlZFByb2Nlc3NEZWZpbml0aW9uIGluIGNhbGxlZFByb2Nlc3NEZWZpbml0aW9uc1xcXCI+XFxuICAgICAgICA8dGQgY2xhc3M9XFxcInByb2Nlc3MtZGVmaW5pdGlvblxcXCJcXG4gICAgICAgICAgICBjYW0td2lkZ2V0LWNsaXBib2FyZD1cXFwiY2FsbGVkUHJvY2Vzc0RlZmluaXRpb24uaWRcXFwiPlxcbiAgICAgICAgICA8YSBuZy1ocmVmPVxcXCIjL3Byb2Nlc3MtZGVmaW5pdGlvbi97eyBjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5pZCB9fS9ydW50aW1lP3BhcmVudFByb2Nlc3NEZWZpbml0aW9uSWQ9e3sgcHJvY2Vzc0RlZmluaXRpb24uaWQgfX1cXFwiPlxcbiAgICAgICAgICAgIHt7IGNhbGxlZFByb2Nlc3NEZWZpbml0aW9uLm5hbWUgfX1cXG4gICAgICAgICAgPC9hPlxcbiAgICAgICAgPC90ZD5cXG5cXG4gICAgICAgIDx0ZCBjbGFzcz1cXFwiYWN0aXZpdHlcXFwiPlxcbiAgICAgICAgICA8c3BhbiBuZy1zaG93PVxcXCJjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5jYWxsZWRGcm9tQWN0aXZpdGllcy5sZW5ndGggPT09IDFcXFwiXFxuICAgICAgICAgICAgICAgIGNhbS13aWRnZXQtY2xpcGJvYXJkPVxcXCJjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5jYWxsZWRGcm9tQWN0aXZpdGllc1swXS5pZFxcXCI+XFxuICAgICAgICAgICAgPGEgbmctaHJlZj1cXFwiIy9wcm9jZXNzLWRlZmluaXRpb24ve3sgcHJvY2Vzc0RlZmluaXRpb24uaWQgfX0vcnVudGltZT97eyBnZXRTZWFyY2hRdWVyeUZvclNlYXJjaFR5cGUoY2FsbGVkUHJvY2Vzc0RlZmluaXRpb24uY2FsbGVkRnJvbUFjdGl2aXRpZXNbMF0uaWQpIH19JmFtcDtkZXRhaWxzVGFiPWNhbGwtcHJvY2Vzcy1kZWZpbml0aW9ucy10YWJsZVxcXCI+XFxuICAgICAgICAgICAgICB7eyBjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5jYWxsZWRGcm9tQWN0aXZpdGllc1swXS5uYW1lIH19XFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgICA8L3NwYW4+XFxuXFxuICAgICAgICAgIDx1bCBuZy1zaG93PVxcXCJjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5jYWxsZWRGcm9tQWN0aXZpdGllcy5sZW5ndGggPiAxXFxcIj5cXG4gICAgICAgICAgICA8bGkgbmctcmVwZWF0PVxcXCJhY3Rpdml0eSBpbiBjYWxsZWRQcm9jZXNzRGVmaW5pdGlvbi5jYWxsZWRGcm9tQWN0aXZpdGllc1xcXCJcXG4gICAgICAgICAgICAgICAgY2FtLXdpZGdldC1jbGlwYm9hcmQ9XFxcImFjdGl2aXR5LmlkXFxcIj5cXG4gICAgICAgICAgICAgIDxhIG5nLWhyZWY9XFxcIiMvcHJvY2Vzcy1kZWZpbml0aW9uL3t7IHByb2Nlc3NEZWZpbml0aW9uLmlkIH19L3J1bnRpbWU/e3sgZ2V0U2VhcmNoUXVlcnlGb3JTZWFyY2hUeXBlKGFjdGl2aXR5LmlkKSB9fSZhbXA7ZGV0YWlsc1RhYj1jYWxsLXByb2Nlc3MtZGVmaW5pdGlvbnMtdGFibGVcXFwiPlxcbiAgICAgICAgICAgICAgICB7eyBhY3Rpdml0eS5uYW1lIH19XFxuICAgICAgICAgICAgICA8L2E+XFxuICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgPHVsPlxcbiAgICAgICAgPC90ZD5cXG4gICAgICA8L3RyPlxcbiAgICA8L3Rib2R5PlxcbiAgPC90YWJsZT5cXG48L2Rpdj5cXG48IS0tIC8gQ0UgLSBjYW11bmRhLWJwbS13ZWJhcHAvd2ViYXBwL3NyYy9tYWluL3Jlc291cmNlcy1wbHVnaW4vYmFzZS9hcHAvdmlld3MvcHJvY2Vzc0RlZmluaXRpb24vY2FsbGVkLXByb2Nlc3MtZGVmaW5pdGlvbi10YWJsZS5odG1sIC0tPlxcblwiO1xuXG5cbm1vZHVsZS5leHBvcnRzID0gWyAnVmlld3NQcm92aWRlcicsIGZ1bmN0aW9uKFZpZXdzUHJvdmlkZXIpIHtcblxuICBWaWV3c1Byb3ZpZGVyLnJlZ2lzdGVyRGVmYXVsdFZpZXcoJ2NvY2twaXQucHJvY2Vzc0RlZmluaXRpb24ucnVudGltZS50YWInLCB7XG4gICAgaWQ6ICdjYWxsLXByb2Nlc3MtZGVmaW5pdGlvbnMtdGFibGUnLFxuICAgIGxhYmVsOiAnQ2FsbGVkIFByb2Nlc3MgRGVmaW5pdGlvbnMnLFxuICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZSxcbiAgICBjb250cm9sbGVyOiBbXG4gICAgICAnJHNjb3BlJywgJyRsb2NhdGlvbicsICckcScsICdQbHVnaW5Qcm9jZXNzRGVmaW5pdGlvblJlc291cmNlJyxcbiAgICAgIGZ1bmN0aW9uKCRzY29wZSwgJGxvY2F0aW9uLCAkcSwgUGx1Z2luUHJvY2Vzc0RlZmluaXRpb25SZXNvdXJjZSkge1xuXG4gICAgICAgIHZhciBmaWx0ZXI7XG4gICAgICAgIHZhciBwcm9jZXNzRGF0YSA9ICRzY29wZS5wcm9jZXNzRGF0YS5uZXdDaGlsZCgkc2NvcGUpO1xuXG4gICAgICAgICRzY29wZS5nZXRTZWFyY2hRdWVyeUZvclNlYXJjaFR5cGUgPSBzZWFyY2hXaWRnZXRVdGlscy5nZXRTZWFyY2hRdWVyeUZvclNlYXJjaFR5cGUuYmluZChudWxsLCAnYWN0aXZpdHlJZEluJyk7XG5cbiAgICAgICAgcHJvY2Vzc0RhdGEucHJvdmlkZSgnY2FsbGVkUHJvY2Vzc0RlZmluaXRpb25zJywgW1xuICAgICAgICAgICdwcm9jZXNzRGVmaW5pdGlvbicsICdmaWx0ZXInLFxuICAgICAgICAgIGZ1bmN0aW9uKHByb2Nlc3NEZWZpbml0aW9uLCAgIG5ld0ZpbHRlcikge1xuXG4gICAgICAgICAgICBmaWx0ZXIgPSBhbmd1bGFyLmNvcHkobmV3RmlsdGVyKTtcblxuICAgICAgICAgICAgZGVsZXRlIGZpbHRlci5wYWdlO1xuICAgICAgICAgICAgZGVsZXRlIGZpbHRlci5zY3JvbGxUb0JwbW5FbGVtZW50O1xuXG4gICAgICAgICAgLy8gdGhlIHBhcmVudCBwcm9jZXNzIGRlZmluaXRpb24gaWQgaXMgdGhlIHN1cGVyIHByb2Nlc3MgZGVmaW5pdGlvbiBpZC4uLlxuICAgICAgICAgICAgZmlsdGVyLnN1cGVyUHJvY2Vzc0RlZmluaXRpb25JZCA9IGZpbHRlci5wYXJlbnRQcm9jZXNzRGVmaW5pdGlvbklkO1xuICAgICAgICAgIC8vIC4uLmFuZCB0aGUgcHJvY2VzcyBkZWZpbml0aW9uIGlkIG9mIHRoZSBjdXJyZW50IHZpZXcgaXMgdGhlXG4gICAgICAgICAgLy8gcGFyZW50IHByb2Nlc3MgZGVmaW5pdGlvbiBpZCBvZiBxdWVyeS5cbiAgICAgICAgICAgIGZpbHRlci5wYXJlbnRQcm9jZXNzRGVmaW5pdGlvbklkID0gJHNjb3BlLnByb2Nlc3NEZWZpbml0aW9uLmlkO1xuXG4gICAgICAgICAgICBmaWx0ZXIuYWN0aXZpdHlJZEluID0gZmlsdGVyLmFjdGl2aXR5SWRzO1xuICAgICAgICAgICAgZGVsZXRlIGZpbHRlci5hY3Rpdml0eUlkcztcblxuICAgICAgICAgICAgJHNjb3BlLmxvYWRpbmdTdGF0ZSA9ICdMT0FESU5HJztcbiAgICAgICAgICAgIHJldHVybiBQbHVnaW5Qcm9jZXNzRGVmaW5pdGlvblJlc291cmNlLmdldENhbGxlZFByb2Nlc3NEZWZpbml0aW9ucyh7IGlkOiBwcm9jZXNzRGVmaW5pdGlvbi5pZCB9LCBmaWx0ZXIpLiRwcm9taXNlO1xuICAgICAgICAgIH1dKTtcblxuICAgICAgICBwcm9jZXNzRGF0YS5vYnNlcnZlKFsgJ2NhbGxlZFByb2Nlc3NEZWZpbml0aW9ucycsICdicG1uRWxlbWVudHMnIF0sIGZ1bmN0aW9uKGNhbGxlZFByb2Nlc3NEZWZpbml0aW9ucywgYnBtbkVsZW1lbnRzKSB7XG5cbiAgICAgICAgICAkc2NvcGUuY2FsbGVkUHJvY2Vzc0RlZmluaXRpb25zID0gYXR0YWNoQ2FsbGVkRnJvbUFjdGl2aXRpZXMoY2FsbGVkUHJvY2Vzc0RlZmluaXRpb25zLCBicG1uRWxlbWVudHMpO1xuICAgICAgICAgICRzY29wZS5sb2FkaW5nU3RhdGUgPSAkc2NvcGUuY2FsbGVkUHJvY2Vzc0RlZmluaXRpb25zLmxlbmd0aCA/ICdMT0FERUQnIDogJ0VNUFRZJztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gYXR0YWNoQ2FsbGVkRnJvbUFjdGl2aXRpZXMocHJvY2Vzc0RlZmluaXRpb25zLCBicG1uRWxlbWVudHMpIHtcblxuICAgICAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChwcm9jZXNzRGVmaW5pdGlvbnMsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHZhciBjYWxsZWRGcm9tQWN0aXZpdHlJZHMgPSBkLmNhbGxlZEZyb21BY3Rpdml0eUlkcyxcbiAgICAgICAgICAgICAgICBjYWxsZWRGcm9tQWN0aXZpdGllcyA9IFtdO1xuXG4gICAgICAgICAgICBhbmd1bGFyLmZvckVhY2goY2FsbGVkRnJvbUFjdGl2aXR5SWRzLCBmdW5jdGlvbihhY3Rpdml0eUlkKSB7XG4gICAgICAgICAgICAgIHZhciBicG1uRWxlbWVudCA9IGJwbW5FbGVtZW50c1thY3Rpdml0eUlkXTtcblxuICAgICAgICAgICAgICB2YXIgYWN0aXZpdHkgPSB7IGlkOiBhY3Rpdml0eUlkLCBuYW1lOiAoYnBtbkVsZW1lbnQgJiYgYnBtbkVsZW1lbnQubmFtZSkgfHwgYWN0aXZpdHlJZCB9O1xuXG4gICAgICAgICAgICAgIGNhbGxlZEZyb21BY3Rpdml0aWVzLnB1c2goYWN0aXZpdHkpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGFuZ3VsYXIuZXh0ZW5kKHt9LCBkLCB7IGNhbGxlZEZyb21BY3Rpdml0aWVzOiBjYWxsZWRGcm9tQWN0aXZpdGllcyB9KSk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XSxcbiAgICBwcmlvcml0eTogNVxuICB9KTtcbn1dO1xuIl19","deps":{"../../../../../../common/scripts/util/search-widget-utils":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/common/scripts/util/search-widget-utils.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/main.js":{"source":"(function (global){\n/**\n * @namespace cam.cockpit.plugin.base.views\n */\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n\n    // dashboard\n    dashboardDeployments = require('./dashboard/deployments'),\n    dashboardReports = require('./dashboard/reports'),\n    dashboardBatches = require('./dashboard/batches'),\n    dashboardProcesses = require('./dashboard/processes'),\n    dashboardDecisions = require('./dashboard/decisions'),\n    dashboardTasks = require('./dashboard/tasks'),\n\n    // processes dashboard\n    processDefinitions = require('./processesDashboard/process-definitions'),\n\n    // process definition\n    processInstanceTable = require('./processDefinition/processInstanceTable'),\n    calledProcessDefinitionTable = require('./processDefinition/calledProcessDefinitionTable'),\n    updateSuspensionStateAction = require('./processDefinition/updateSuspensionStateAction'),\n    updateSuspensionStateDialog = require('./processDefinition/updateSuspensionStateDialog'),\n    activityInstanceStatisticsOverlay = require('./processDefinition/activityInstanceStatisticsOverlay'),\n\n    // process instance\n    variableInstancesTab = require('./processInstance/variableInstancesTab'),\n    incidentsTab = require('./processInstance/incidentsTab'),\n    calledProcessInstanceTable = require('./processInstance/calledProcessInstanceTable'),\n    userTasksTable = require('./processInstance/userTasksTable'),\n    jobRetryBulkAction = require('./processInstance/jobRetryBulkAction'),\n    jobRetryBulkDialog = require('./processInstance/jobRetryBulkDialog'),\n    jobRetryDialog = require('./processInstance/jobRetryDialog'),\n    externalTaskRetryDialog = require('./processInstance/externalTaskRetryDialog'),\n    cancelProcessInstanceAction = require('./processInstance/cancelProcessInstanceAction'),\n    cancelProcessInstanceDialog = require('./processInstance/cancelProcessInstanceDialog'),\n    addVariableAction = require('./processInstance/addVariableAction'),\n    updateSuspensionStateActionPI = require('./processInstance/updateSuspensionStateAction'),\n    updateSuspensionStateDialogPI = require('./processInstance/updateSuspensionStateDialog'),\n    activityInstanceStatisticsOverlayPI = require('./processInstance/activityInstanceStatisticsOverlay'),\n    incidentJobRetryAction = require('./processInstance/incidentJobRetryAction'),\n    incidentExternalTaskRetryAction = require('./processInstance/incident-externalTask-retry-action');\n\nvar ngModule = angular.module('cockpit.plugin.base.views', []);\n\nngModule.config(dashboardDeployments);\nngModule.config(dashboardReports);\nngModule.config(dashboardBatches);\nngModule.config(dashboardProcesses);\nngModule.config(dashboardDecisions);\nngModule.config(dashboardTasks);\n\nngModule.config(processDefinitions);\n\nngModule.config(processInstanceTable);\nngModule.config(calledProcessDefinitionTable);\nngModule.config(updateSuspensionStateAction);\nngModule.controller('UpdateProcessDefinitionSuspensionStateController', updateSuspensionStateDialog);\nngModule.config(activityInstanceStatisticsOverlay);\n\nvariableInstancesTab(ngModule);\nngModule.config(incidentsTab);\ncalledProcessInstanceTable(ngModule);\nuserTasksTable(ngModule);\njobRetryBulkAction(ngModule);\nngModule.controller('JobRetriesController', jobRetryBulkDialog);\nngModule.controller('JobRetryController', jobRetryDialog);\nngModule.controller('ExternalTaskRetryController', externalTaskRetryDialog);\ncancelProcessInstanceAction(ngModule);\nngModule.controller('CancelProcessInstanceController', cancelProcessInstanceDialog);\nngModule.config(addVariableAction);\nngModule.config(updateSuspensionStateActionPI);\nngModule.controller('UpdateProcessInstanceSuspensionStateController', updateSuspensionStateDialogPI);\nngModule.config(activityInstanceStatisticsOverlayPI);\nngModule.config(incidentJobRetryAction);\nngModule.config(incidentExternalTaskRetryAction);\n\nmodule.exports = ngModule;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC92aWV3cy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbmFtZXNwYWNlIGNhbS5jb2NrcGl0LnBsdWdpbi5iYXNlLnZpZXdzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG5cbiAgICAvLyBkYXNoYm9hcmRcbiAgICBkYXNoYm9hcmREZXBsb3ltZW50cyA9IHJlcXVpcmUoJy4vZGFzaGJvYXJkL2RlcGxveW1lbnRzJyksXG4gICAgZGFzaGJvYXJkUmVwb3J0cyA9IHJlcXVpcmUoJy4vZGFzaGJvYXJkL3JlcG9ydHMnKSxcbiAgICBkYXNoYm9hcmRCYXRjaGVzID0gcmVxdWlyZSgnLi9kYXNoYm9hcmQvYmF0Y2hlcycpLFxuICAgIGRhc2hib2FyZFByb2Nlc3NlcyA9IHJlcXVpcmUoJy4vZGFzaGJvYXJkL3Byb2Nlc3NlcycpLFxuICAgIGRhc2hib2FyZERlY2lzaW9ucyA9IHJlcXVpcmUoJy4vZGFzaGJvYXJkL2RlY2lzaW9ucycpLFxuICAgIGRhc2hib2FyZFRhc2tzID0gcmVxdWlyZSgnLi9kYXNoYm9hcmQvdGFza3MnKSxcblxuICAgIC8vIHByb2Nlc3NlcyBkYXNoYm9hcmRcbiAgICBwcm9jZXNzRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuL3Byb2Nlc3Nlc0Rhc2hib2FyZC9wcm9jZXNzLWRlZmluaXRpb25zJyksXG5cbiAgICAvLyBwcm9jZXNzIGRlZmluaXRpb25cbiAgICBwcm9jZXNzSW5zdGFuY2VUYWJsZSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0RlZmluaXRpb24vcHJvY2Vzc0luc3RhbmNlVGFibGUnKSxcbiAgICBjYWxsZWRQcm9jZXNzRGVmaW5pdGlvblRhYmxlID0gcmVxdWlyZSgnLi9wcm9jZXNzRGVmaW5pdGlvbi9jYWxsZWRQcm9jZXNzRGVmaW5pdGlvblRhYmxlJyksXG4gICAgdXBkYXRlU3VzcGVuc2lvblN0YXRlQWN0aW9uID0gcmVxdWlyZSgnLi9wcm9jZXNzRGVmaW5pdGlvbi91cGRhdGVTdXNwZW5zaW9uU3RhdGVBY3Rpb24nKSxcbiAgICB1cGRhdGVTdXNwZW5zaW9uU3RhdGVEaWFsb2cgPSByZXF1aXJlKCcuL3Byb2Nlc3NEZWZpbml0aW9uL3VwZGF0ZVN1c3BlbnNpb25TdGF0ZURpYWxvZycpLFxuICAgIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzT3ZlcmxheSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0RlZmluaXRpb24vYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3NPdmVybGF5JyksXG5cbiAgICAvLyBwcm9jZXNzIGluc3RhbmNlXG4gICAgdmFyaWFibGVJbnN0YW5jZXNUYWIgPSByZXF1aXJlKCcuL3Byb2Nlc3NJbnN0YW5jZS92YXJpYWJsZUluc3RhbmNlc1RhYicpLFxuICAgIGluY2lkZW50c1RhYiA9IHJlcXVpcmUoJy4vcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50c1RhYicpLFxuICAgIGNhbGxlZFByb2Nlc3NJbnN0YW5jZVRhYmxlID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2UvY2FsbGVkUHJvY2Vzc0luc3RhbmNlVGFibGUnKSxcbiAgICB1c2VyVGFza3NUYWJsZSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0luc3RhbmNlL3VzZXJUYXNrc1RhYmxlJyksXG4gICAgam9iUmV0cnlCdWxrQWN0aW9uID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2Uvam9iUmV0cnlCdWxrQWN0aW9uJyksXG4gICAgam9iUmV0cnlCdWxrRGlhbG9nID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2Uvam9iUmV0cnlCdWxrRGlhbG9nJyksXG4gICAgam9iUmV0cnlEaWFsb2cgPSByZXF1aXJlKCcuL3Byb2Nlc3NJbnN0YW5jZS9qb2JSZXRyeURpYWxvZycpLFxuICAgIGV4dGVybmFsVGFza1JldHJ5RGlhbG9nID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2UvZXh0ZXJuYWxUYXNrUmV0cnlEaWFsb2cnKSxcbiAgICBjYW5jZWxQcm9jZXNzSW5zdGFuY2VBY3Rpb24gPSByZXF1aXJlKCcuL3Byb2Nlc3NJbnN0YW5jZS9jYW5jZWxQcm9jZXNzSW5zdGFuY2VBY3Rpb24nKSxcbiAgICBjYW5jZWxQcm9jZXNzSW5zdGFuY2VEaWFsb2cgPSByZXF1aXJlKCcuL3Byb2Nlc3NJbnN0YW5jZS9jYW5jZWxQcm9jZXNzSW5zdGFuY2VEaWFsb2cnKSxcbiAgICBhZGRWYXJpYWJsZUFjdGlvbiA9IHJlcXVpcmUoJy4vcHJvY2Vzc0luc3RhbmNlL2FkZFZhcmlhYmxlQWN0aW9uJyksXG4gICAgdXBkYXRlU3VzcGVuc2lvblN0YXRlQWN0aW9uUEkgPSByZXF1aXJlKCcuL3Byb2Nlc3NJbnN0YW5jZS91cGRhdGVTdXNwZW5zaW9uU3RhdGVBY3Rpb24nKSxcbiAgICB1cGRhdGVTdXNwZW5zaW9uU3RhdGVEaWFsb2dQSSA9IHJlcXVpcmUoJy4vcHJvY2Vzc0luc3RhbmNlL3VwZGF0ZVN1c3BlbnNpb25TdGF0ZURpYWxvZycpLFxuICAgIGFjdGl2aXR5SW5zdGFuY2VTdGF0aXN0aWNzT3ZlcmxheVBJID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2UvYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3NPdmVybGF5JyksXG4gICAgaW5jaWRlbnRKb2JSZXRyeUFjdGlvbiA9IHJlcXVpcmUoJy4vcHJvY2Vzc0luc3RhbmNlL2luY2lkZW50Sm9iUmV0cnlBY3Rpb24nKSxcbiAgICBpbmNpZGVudEV4dGVybmFsVGFza1JldHJ5QWN0aW9uID0gcmVxdWlyZSgnLi9wcm9jZXNzSW5zdGFuY2UvaW5jaWRlbnQtZXh0ZXJuYWxUYXNrLXJldHJ5LWFjdGlvbicpO1xuXG52YXIgbmdNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnY29ja3BpdC5wbHVnaW4uYmFzZS52aWV3cycsIFtdKTtcblxubmdNb2R1bGUuY29uZmlnKGRhc2hib2FyZERlcGxveW1lbnRzKTtcbm5nTW9kdWxlLmNvbmZpZyhkYXNoYm9hcmRSZXBvcnRzKTtcbm5nTW9kdWxlLmNvbmZpZyhkYXNoYm9hcmRCYXRjaGVzKTtcbm5nTW9kdWxlLmNvbmZpZyhkYXNoYm9hcmRQcm9jZXNzZXMpO1xubmdNb2R1bGUuY29uZmlnKGRhc2hib2FyZERlY2lzaW9ucyk7XG5uZ01vZHVsZS5jb25maWcoZGFzaGJvYXJkVGFza3MpO1xuXG5uZ01vZHVsZS5jb25maWcocHJvY2Vzc0RlZmluaXRpb25zKTtcblxubmdNb2R1bGUuY29uZmlnKHByb2Nlc3NJbnN0YW5jZVRhYmxlKTtcbm5nTW9kdWxlLmNvbmZpZyhjYWxsZWRQcm9jZXNzRGVmaW5pdGlvblRhYmxlKTtcbm5nTW9kdWxlLmNvbmZpZyh1cGRhdGVTdXNwZW5zaW9uU3RhdGVBY3Rpb24pO1xubmdNb2R1bGUuY29udHJvbGxlcignVXBkYXRlUHJvY2Vzc0RlZmluaXRpb25TdXNwZW5zaW9uU3RhdGVDb250cm9sbGVyJywgdXBkYXRlU3VzcGVuc2lvblN0YXRlRGlhbG9nKTtcbm5nTW9kdWxlLmNvbmZpZyhhY3Rpdml0eUluc3RhbmNlU3RhdGlzdGljc092ZXJsYXkpO1xuXG52YXJpYWJsZUluc3RhbmNlc1RhYihuZ01vZHVsZSk7XG5uZ01vZHVsZS5jb25maWcoaW5jaWRlbnRzVGFiKTtcbmNhbGxlZFByb2Nlc3NJbnN0YW5jZVRhYmxlKG5nTW9kdWxlKTtcbnVzZXJUYXNrc1RhYmxlKG5nTW9kdWxlKTtcbmpvYlJldHJ5QnVsa0FjdGlvbihuZ01vZHVsZSk7XG5uZ01vZHVsZS5jb250cm9sbGVyKCdKb2JSZXRyaWVzQ29udHJvbGxlcicsIGpvYlJldHJ5QnVsa0RpYWxvZyk7XG5uZ01vZHVsZS5jb250cm9sbGVyKCdKb2JSZXRyeUNvbnRyb2xsZXInLCBqb2JSZXRyeURpYWxvZyk7XG5uZ01vZHVsZS5jb250cm9sbGVyKCdFeHRlcm5hbFRhc2tSZXRyeUNvbnRyb2xsZXInLCBleHRlcm5hbFRhc2tSZXRyeURpYWxvZyk7XG5jYW5jZWxQcm9jZXNzSW5zdGFuY2VBY3Rpb24obmdNb2R1bGUpO1xubmdNb2R1bGUuY29udHJvbGxlcignQ2FuY2VsUHJvY2Vzc0luc3RhbmNlQ29udHJvbGxlcicsIGNhbmNlbFByb2Nlc3NJbnN0YW5jZURpYWxvZyk7XG5uZ01vZHVsZS5jb25maWcoYWRkVmFyaWFibGVBY3Rpb24pO1xubmdNb2R1bGUuY29uZmlnKHVwZGF0ZVN1c3BlbnNpb25TdGF0ZUFjdGlvblBJKTtcbm5nTW9kdWxlLmNvbnRyb2xsZXIoJ1VwZGF0ZVByb2Nlc3NJbnN0YW5jZVN1c3BlbnNpb25TdGF0ZUNvbnRyb2xsZXInLCB1cGRhdGVTdXNwZW5zaW9uU3RhdGVEaWFsb2dQSSk7XG5uZ01vZHVsZS5jb25maWcoYWN0aXZpdHlJbnN0YW5jZVN0YXRpc3RpY3NPdmVybGF5UEkpO1xubmdNb2R1bGUuY29uZmlnKGluY2lkZW50Sm9iUmV0cnlBY3Rpb24pO1xubmdNb2R1bGUuY29uZmlnKGluY2lkZW50RXh0ZXJuYWxUYXNrUmV0cnlBY3Rpb24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5nTW9kdWxlO1xuIl19","deps":{"./dashboard/deployments":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/deployments.js","./dashboard/reports":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/reports.js","./dashboard/batches":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/batches.js","./dashboard/processes":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/processes.js","./dashboard/decisions":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/decisions.js","./dashboard/tasks":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/dashboard/tasks.js","./processDefinition/updateSuspensionStateDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/updateSuspensionStateDialog.js","./processInstance/jobRetryBulkDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryBulkDialog.js","./processInstance/jobRetryDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryDialog.js","./processInstance/externalTaskRetryDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/externalTaskRetryDialog.js","./processInstance/cancelProcessInstanceDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/cancelProcessInstanceDialog.js","./processInstance/updateSuspensionStateDialog":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/updateSuspensionStateDialog.js","./processesDashboard/process-definitions":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.js","./processDefinition/updateSuspensionStateAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/updateSuspensionStateAction.js","./processDefinition/activityInstanceStatisticsOverlay":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/activityInstanceStatisticsOverlay.js","./processInstance/incidentsTab":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incidentsTab.js","./processInstance/jobRetryBulkAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/jobRetryBulkAction.js","./processInstance/cancelProcessInstanceAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/cancelProcessInstanceAction.js","./processInstance/updateSuspensionStateAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/updateSuspensionStateAction.js","./processInstance/activityInstanceStatisticsOverlay":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/activityInstanceStatisticsOverlay.js","./processInstance/incidentJobRetryAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incidentJobRetryAction.js","./processInstance/incident-externalTask-retry-action":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/incident-externalTask-retry-action.js","./processDefinition/processInstanceTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/processInstanceTable.js","./processInstance/calledProcessInstanceTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/calledProcessInstanceTable.js","./processInstance/userTasksTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/userTasksTable.js","./processInstance/addVariableAction":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/addVariableAction.js","./processInstance/variableInstancesTab":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processInstance/variableInstancesTab.js","./processDefinition/calledProcessDefinitionTable":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/processDefinition/calledProcessDefinitionTable.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/plugin.js":{"source":"(function (global){\n/**\n * @namespace cam.cockpit.plugin\n */\n\n/**\n * @namespace cam.cockpit.plugin.base\n */\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    viewsModule = require('./views/main'),\n    resourcesModule = require('./resources/main'),\n    dataModule = require('./data/main');\n\nmodule.exports = angular.module('cockpit.plugin.base', [viewsModule.name, resourcesModule.name, dataModule.name]);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9iYXNlL2FwcC9wbHVnaW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuYW1lc3BhY2UgY2FtLmNvY2twaXQucGx1Z2luXG4gKi9cblxuLyoqXG4gKiBAbmFtZXNwYWNlIGNhbS5jb2NrcGl0LnBsdWdpbi5iYXNlXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCksXG4gICAgdmlld3NNb2R1bGUgPSByZXF1aXJlKCcuL3ZpZXdzL21haW4nKSxcbiAgICByZXNvdXJjZXNNb2R1bGUgPSByZXF1aXJlKCcuL3Jlc291cmNlcy9tYWluJyksXG4gICAgZGF0YU1vZHVsZSA9IHJlcXVpcmUoJy4vZGF0YS9tYWluJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYW5ndWxhci5tb2R1bGUoJ2NvY2twaXQucGx1Z2luLmJhc2UnLCBbdmlld3NNb2R1bGUubmFtZSwgcmVzb3VyY2VzTW9kdWxlLm5hbWUsIGRhdGFNb2R1bGUubmFtZV0pO1xuIl19","deps":{"./resources/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/resources/main.js","./data/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/data/main.js","./views/main":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/views/main.js"}},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/cockpitPlugins.js":{"source":"(function (global){\n'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null),\n    base = require('./base/app/plugin'),\n    decisionList = require('./decisionList/app/plugin'),\n    jobDefinition = require('./jobDefinition/app/plugin'),\n    tasks = require('./tasks/app/plugin');\n\nmodule.exports = angular.module('cockpit.plugin.cockpitPlugins', [\n  base.name,\n  decisionList.name,\n  jobDefinition.name,\n  tasks.name\n]);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpL2NvY2twaXQvcGx1Z2lucy9jb2NrcGl0UGx1Z2lucy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpLFxuICAgIGJhc2UgPSByZXF1aXJlKCcuL2Jhc2UvYXBwL3BsdWdpbicpLFxuICAgIGRlY2lzaW9uTGlzdCA9IHJlcXVpcmUoJy4vZGVjaXNpb25MaXN0L2FwcC9wbHVnaW4nKSxcbiAgICBqb2JEZWZpbml0aW9uID0gcmVxdWlyZSgnLi9qb2JEZWZpbml0aW9uL2FwcC9wbHVnaW4nKSxcbiAgICB0YXNrcyA9IHJlcXVpcmUoJy4vdGFza3MvYXBwL3BsdWdpbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFuZ3VsYXIubW9kdWxlKCdjb2NrcGl0LnBsdWdpbi5jb2NrcGl0UGx1Z2lucycsIFtcbiAgYmFzZS5uYW1lLFxuICBkZWNpc2lvbkxpc3QubmFtZSxcbiAgam9iRGVmaW5pdGlvbi5uYW1lLFxuICB0YXNrcy5uYW1lXG5dKTtcbiJdfQ==","deps":{"./tasks/app/plugin":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/tasks/app/plugin.js","./jobDefinition/app/plugin":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/jobDefinition/app/plugin.js","./decisionList/app/plugin":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/decisionList/app/plugin.js","./base/app/plugin":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/base/app/plugin.js"}}},"packageCache":{"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/package.json":false,"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/package.json":false,"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/package.json":false,"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/package.json":{"name":"camunda-bpm-webapp","private":true,"version":"7.7.0-SNAPSHOT","gruntConfig":{"connectPort":8020,"livereloadPort":8021,"welcomeBuildTarget":"target/webapp/app/welcome","welcomeSourceDir":"ui/welcome/client","adminBuildTarget":"target/webapp/app/admin","adminSourceDir":"ui/admin/client","cockpitBuildTarget":"target/webapp/app/cockpit","cockpitSourceDir":"ui/cockpit/client","tasklistBuildTarget":"target/webapp/app/tasklist","tasklistSourceDir":"ui/tasklist/client","pluginBuildTarget":"target/webapp/plugin","pluginSourceDir":"ui","libTargetDir":"target/webapp/lib","commonsUiDir":"node_modules/camunda-commons-ui"},"browserify":{"transform":["brfs"]},"dependencies":{"angular-data-depend":"git://github.com/camunda-third-party/angular-data-depend#8e3b66914c611069e3698fd5d4275e6cf8055d01","angular-moment":"0.9.0","angular-route":"1.2.29","camunda-commons-ui":"git://github.com/camunda/camunda-commons-ui#master","events":"1.1.0","jquery":"2.1.1","jquery-ui":"1.10.5","mousetrap":"1.5.3","requirejs":"2.1.22","requirejs-angular-define":"git://github.com/camunda/requirejs-angular-define#master"},"devDependencies":{"angular-mocks":"1.2.32","brfs":"1.4.2","browserify":"13.1.0","chai":"2.0.0","chai-as-promised":"4.2.0","exposify":"0.5.0","grunt":"0.4.5","grunt-browserify":"4.0.1","grunt-cli":"0.1.13","grunt-contrib-clean":"0.5.0","grunt-contrib-copy":"0.5.0","grunt-contrib-less":"0.9.0","grunt-contrib-uglify":"0.11.0","grunt-contrib-watch":"0.5.0","grunt-eslint":"18.1.0","grunt-karma":"2.0.0","grunt-newer":"1.2.0","grunt-protractor-runner":"2.0.0","karma":"1.3.0","karma-browserify":"5.1.0","karma-chrome-launcher":"2.0.0","karma-junit-reporter":"1.1.0","karma-mocha":"1.2.0","karma-mocha-reporter":"2.2.0","load-grunt-tasks":"0.4.0","lodash":"2.4.1","mocha":"2.1.0","mocha-multi":"0.7.2","mocha-proshot":"1.0.1","request":"2.53.0","sinon":"1.17.6","source-map":"0.4.4","watchify":"3.7.0","xunit-file":"0.0.6"},"__dirname":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp"},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/ui/cockpit/plugins/cockpitPlugins.js":{"name":"camunda-bpm-webapp","private":true,"version":"7.7.0-SNAPSHOT","gruntConfig":{"connectPort":8020,"livereloadPort":8021,"welcomeBuildTarget":"target/webapp/app/welcome","welcomeSourceDir":"ui/welcome/client","adminBuildTarget":"target/webapp/app/admin","adminSourceDir":"ui/admin/client","cockpitBuildTarget":"target/webapp/app/cockpit","cockpitSourceDir":"ui/cockpit/client","tasklistBuildTarget":"target/webapp/app/tasklist","tasklistSourceDir":"ui/tasklist/client","pluginBuildTarget":"target/webapp/plugin","pluginSourceDir":"ui","libTargetDir":"target/webapp/lib","commonsUiDir":"node_modules/camunda-commons-ui"},"browserify":{"transform":["brfs"]},"dependencies":{"angular-data-depend":"git://github.com/camunda-third-party/angular-data-depend#8e3b66914c611069e3698fd5d4275e6cf8055d01","angular-moment":"0.9.0","angular-route":"1.2.29","camunda-commons-ui":"git://github.com/camunda/camunda-commons-ui#master","events":"1.1.0","jquery":"2.1.1","jquery-ui":"1.10.5","mousetrap":"1.5.3","requirejs":"2.1.22","requirejs-angular-define":"git://github.com/camunda/requirejs-angular-define#master"},"devDependencies":{"angular-mocks":"1.2.32","brfs":"1.4.2","browserify":"13.1.0","chai":"2.0.0","chai-as-promised":"4.2.0","exposify":"0.5.0","grunt":"0.4.5","grunt-browserify":"4.0.1","grunt-cli":"0.1.13","grunt-contrib-clean":"0.5.0","grunt-contrib-copy":"0.5.0","grunt-contrib-less":"0.9.0","grunt-contrib-uglify":"0.11.0","grunt-contrib-watch":"0.5.0","grunt-eslint":"18.1.0","grunt-karma":"2.0.0","grunt-newer":"1.2.0","grunt-protractor-runner":"2.0.0","karma":"1.3.0","karma-browserify":"5.1.0","karma-chrome-launcher":"2.0.0","karma-junit-reporter":"1.1.0","karma-mocha":"1.2.0","karma-mocha-reporter":"2.2.0","load-grunt-tasks":"0.4.0","lodash":"2.4.1","mocha":"2.1.0","mocha-multi":"0.7.2","mocha-proshot":"1.0.1","request":"2.53.0","sinon":"1.17.6","source-map":"0.4.4","watchify":"3.7.0","xunit-file":"0.0.6"},"__dirname":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp"},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/package.json":{"private":true,"name":"camunda-commons-ui","version":"7.7.0-SNAPSHOT","description":"Common files for camunda BPM platform UIs","main":"index.js","gruntConfig":{"connectPort":8070,"livereloadPort":8071},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/camunda/camunda-commons-ui.git"},"keywords":["camunda"],"author":{"name":"Daniel Meyer","email":"daniel.meyer@camunda.com"},"license":"Apache-2.0","bugs":{"url":"https://github.com/camunda/camunda-commons-ui/issues"},"browserify":{"transform":["brfs"]},"homepage":"https://github.com/camunda/camunda-commons-ui","dependencies":{"angular-animate":"1.2.29","angular-cookies":"1.2.29","angular-data-depend":"git://github.com/camunda-third-party/angular-data-depend.git#1.0.0-camunda","angular-loader":"1.2.29","angular-mocks":"1.2.29","angular-moment":"0.9.0","angular-resource":"1.2.29","angular-route":"1.2.29","angular-sanitize":"1.2.29","angular-scenario":"1.2.29","angular-touch":"1.2.29","angular-translate":"2.4.2","bootstrap":"3.3.6","bpmn-font":"0.2.0","bpmn-js":"0.18.1","camunda-bpm-sdk-js":"git://github.com/camunda/camunda-bpm-sdk-js.git#master","clipboard":"1.5.10","cmmn-js":"0.5.3","dmn-js":"0.8.3","jquery":"2.1.1","lodash":"2.4.1","mkdirp":"0.5.1","moment":"2.9.0","persistify":"1.0.0","grunt-contrib-watch":"0.6.1","marked":"0.3.3"},"devDependencies":{"brfs":"1.4.2","chai":"2.0.0","chai-as-promised":"4.2.0","chai-spies":"0.5.1","grunt":"0.4.5","grunt-browserify":"4.0.1","grunt-contrib-connect":"0.10.1","grunt-contrib-less":"0.9.0","grunt-eslint":"18.1.0","grunt-karma":"0.10.1","grunt-newer":"1.2.0","grunt-protractor-runner":"2.0.0","karma":"0.12.17","karma-browserify":"4.4.2","karma-chrome-launcher":"0.1.4","karma-firefox-launcher":"0.1.3","karma-junit-reporter":"0.2.2","karma-mocha":"0.1.6","karma-phantomjs-launcher":"0.1.4","load-grunt-tasks":"2.0.0","mocha":"2.1.0","xunit-file":"0.0.6"},"optionalDependencies":{"grunt-contrib-watch":"0.6.1","marked":"0.3.3"},"gitHead":"3f639643208ebca6bd235e4a34b5007ba5a6e55c","readme":"# camunda-commons-ui\n\nCommon frontend / UI resources and libraries for camunda web applications:\n\n- [admin][admin]\n- [cockpit][cockpit]\n- [tasklist][tasklist]\n\n> **Important note:**\n> This project is used internally and the API of its components are subject to changes at any time.\n\n## Content\n\n- `lib`\n  - `auth` - for authentication mechanisms and tools, [read more](./lib/auth/README.md)\n  - `util` - commonly used utilities [read more](./lib/util/README.md)\n  - `directives`\n  - `pages`\n  - `plugin`\n  - `resources`\n  - `search`\n  - `services`\n- `resources`\n  - `locales` - translation files\n  - `img`\n  - `less` - base less files to generate CSS stylesheets\n- [`widgets`](#widgets)\n\n\n### Widgets\n\nWidgets are reusable components which should be easy to integrate in the Camunda webapps ([admin][admin], [cockpit][cockpit] and [tasklist][tasklist]) and your own projects.\n\n#### Usage\n\nA good way to get familiar with the widgets integration in your projects is by reading the source code of the `lib/widgets/*/test/*.spec.html` or their online versions (see the _widgets_ menu on the [GitHub page](//camunda.github.io/camunda-commons-ui)).   \nIn those examples, we use uncompiled versions of the library and its dependencies and wire the whole with [requirejs](//requirejs.org).\n\n\n#### Available widgets\n\n- `cam-widget-bpmn-viewer`\n- `cam-widget-cmmn-viewer`\n- `cam-widget-dmn-viewer`\n- `cam-widget-debug`\n- `cam-widget-footer`\n- `cam-widget-header`\n- `cam-widget-inline-field`\n- `cam-widget-loader`\n- `cam-widget-search`\n- `cam-widget-search-pill`\n- `cam-widget-variable`\n- `cam-widget-variables-table`\n- `cam-widget-clipboard`\n- `cam-widget-var-template`\n\n#### Developing the widgets\n\n```sh\ngrunt auto-build\n```\n\n#### Testing the widgets\n\n```sh\nnpm install\n./node_modules/grunt-protractor-runner/node_modules/protractor/bin/webdriver-manager --chrome update\ngrunt\n```\n\nWhile developing widgets, you may want to run the tests as a change occurs, here is a way to achieve that:\n```sh\nnpm install -g nodemon\nnodemon -w lib/widgets/ --exec \"protractor ./test/protractor.conf.js\"\n```\n\nYou can also run the tests on a single widget like that:\n```\nTESTED=variable nodemon -w lib/widgets/ --exec \"protractor ./test/protractor.conf.js\"\n```\nThis will only run the `cam-widget-variable` tests.\n\n\n\n## Test\n\n```sh\ngrunt karma\n```\n\n\n\n## License\n\nUnless otherwise specified this project is licensed under [Apache License Version 2.0](./LICENSE).\n\n\n## Authors\n\n - [Daniel _meyerdan_ Meyer](https://github.com/meyerdan) - [@meyerdan](http://twitter.com/meyerdan)\n - [Valentin _zeropaper_ Vago](https://github.com/zeropaper) - [@zeropaper](http://twitter.com/zeropaper)\n - [Nico _Nikku_ Rehwaldt](https://github.com/nikku) - [@nrehwaldt](http://twitter.com/nrehwaldt)\n - [Sebastian Stamm](https://github.com/SebastianStamm) - [@seb_stamm](https://twitter.com/seb_stamm)\n\n\n[admin]: https://github.com/camunda/camunda-admin-ui\n[cockpit]: https://github.com/camunda/camunda-cockpit-ui\n[tasklist]: https://github.com/camunda/camunda-tasklist-ui\n","readmeFilename":"README.md","_id":"camunda-commons-ui@7.7.0-SNAPSHOT","_shasum":"f06f3d1d9049292aa65ecdb95fbb69520fdfd933","_from":"git://github.com/camunda/camunda-commons-ui.git#master","_resolved":"git://github.com/camunda/camunda-commons-ui.git#3f639643208ebca6bd235e4a34b5007ba5a6e55c","__dirname":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui"},"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/node_modules/camunda-bpm-sdk-js/package.json":{"private":true,"name":"camunda-bpm-sdk-js","version":"7.7.0-SNAPSHOT","description":"Javascript client library for camunda BPM","scripts":{"test":"jasmine_node"},"repository":{"type":"git","url":"git://github.com/camunda/camunda-bpm-sdk-js.git"},"keywords":["camunda-bpm","sdk"],"author":{"name":"Valentin Vago","email":"valentin.vago@camunda.com"},"contributors":[{"name":"Daniel Meyer","email":"daniel.meyer@camunda.com"}],"license":"Apache-2.0","bugs":{"url":"https://app.camunda.com/jira/browse/CAM/component/12351"},"homepage":"https://github.com/camunda/camunda-bpm-sdk-js","dependencies":{"exposify":"https://github.com/camunda-third-party/exposify/archive/v0.2.0-transform-arguments-0.tar.gz","grunt":"0.4.5","grunt-browserify":"2.1.0","load-grunt-tasks":"0.5.0","q":"^1.4.1","superagent":"1.4.0","time-grunt":"0.3.2","angular":"1.2.29"},"devDependencies":{"browserify":"4.1.10","chai":"2.3.0","fixturer":"git://github.com/camunda-third-party/fixturer.git","grunt-bower-release":"git://github.com/camunda-third-party/grunt-bower-release.git#0.0.7","grunt-bump":"git://github.com/camunda-third-party/grunt-bump.git","grunt-contrib-clean":"0.5.0","grunt-contrib-copy":"0.5.0","grunt-contrib-jshint":"0.10.0","grunt-contrib-uglify":"0.5.0","grunt-contrib-watch":"0.6.1","grunt-eslint":"18.1.0","grunt-karma":"0.8.3","grunt-mocha-cli":"1.13.0","grunt-newer":"1.2.0","grunt-release":"0.7.0","karma":"0.12.16","karma-browserify":"4.0.0","karma-chai":"0.1.0","karma-chrome-launcher":"0.1.4","karma-firefox-launcher":"0.1.3","karma-mocha":"0.1.10","karma-phantomjs-launcher":"0.1.4","mocha":"2.2.4","sinon":"^1.17.6","superagent-mock":"1.9.0","underscore":"1.6.0","underscore.string":"2.3.3","uuid":"1.4.1"},"optionalDependencies":{"angular":"1.2.29"},"gitHead":"57a1e759c582905b916f797fe8af6e06894eb2ce","readme":"# camunda-bpm-sdk-js\n\nJavascript client library for [camunda BPM](https://github.com/camunda/camunda-bpm-platform)\n\n## Install using bower\n\n```sh\nbower install camunda-bpm-sdk-js --save\n```\n\n## Documentation\n\nSee https://docs.camunda.org/manual/7.5/reference/embedded-forms/\n\n## Development\n\n```sh\nnpm install\n```\n\n```sh\ngrunt auto-build\n```\n\n### Testing\n\n#### Karma\n\n```sh\ngrunt karma\n```\n\nAlternatively, you can use the specific targets\n\n```sh\ngrunt karma:dev-form\n# or\ngrunt karma:dev-form-angularjs\n```\n\n\n#### Mocha CLI\n\n```sh\ngrunt mochacli\n# or\ngrunt watch:mochacli\n```\n\n### Issues\n\nhttps://app.camunda.com/jira/browse/CAM/component/12351\n\n## Releasing\n\n### Release\n\nTo create a release:\n\n```sh\ngrunt publish:release --setversion='myReleaseVersion'\n```\n\nThis will update the version, commit and tag it, then publish it to [bower-camunda-bpm-sdk-js](https://github.com/camunda/bower-camunda-bpm-sdk-js)\n\n### Snapshot\n\nTo create a snapshot release which just builds current head and publishes it to [bower-camunda-bpm-sdk-js](https://github.com/camunda/bower-camunda-bpm-sdk-js) on a branch named the current version:\n\n```sh\ngrunt publish:snapshot\n```\n\n### Version\n\nIf you just want to update the current version:\n\n```sh\ngrunt publish:version --setversion='myNewVersion'\n```\n\n### Available options\n\n* --no-bower -> skip bower release\n* --no-write -> dryRun mode\n\n### Examples\n\n* [standalone usage](https://github.com/camunda/camunda-bpm-examples/tree/master/sdk-js)\n\n### Contributing\n\nYou are __more than welcome__ to take part on the development of this project!\n\n#### Coding\n\nClone the repository, add, fix or improve and send us a pull request.\nBut please take care about the commit messages, [our conventions can be found\nhere](https://github.com/camunda/camunda-bpm-platform/blob/master/CONTRIBUTING.md).\n\n#### Coding style guide\n\nIn place of a guide, just follow the formatting of existing code :-)\n\n## License\n\nUnless otherwise specified this project is licensed under [Apache License Version 2.0](./LICENSE).\n","readmeFilename":"README.md","_id":"camunda-bpm-sdk-js@7.7.0-SNAPSHOT","_shasum":"9b00294d45649a3c5cc875daca4979d1077133e6","_from":"git://github.com/camunda/camunda-bpm-sdk-js.git#master","_resolved":"git://github.com/camunda/camunda-bpm-sdk-js.git#57a1e759c582905b916f797fe8af6e06894eb2ce","__dirname":"/Users/olivier/Documents/workspace/labor/camunda/camunda-bpm-webapp/node_modules/camunda-commons-ui/node_modules/camunda-bpm-sdk-js"}}}}